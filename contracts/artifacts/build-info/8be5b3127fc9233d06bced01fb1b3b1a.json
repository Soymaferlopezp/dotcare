{"id":"8be5b3127fc9233d06bced01fb1b3b1a","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/SubscriptionNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\n/**\r\n * SubscriptionNFT — ERC-721 con 1 NFT por wallet (soulbound opcional) y vencimiento.\r\n * - Planes: 0=Mensual (30d), 1=Anual (365d).\r\n * - Descuentos ECDSA (EIP-712) firmados por backend.\r\n * - Anti-replay: nonce (bytes32) consumible + deadline (uint256).\r\n * - tokenURI http-based -> baseHttpURI + tokenId.\r\n * - Variant visual por código: 0=sin código, 1=DOTCARELOVER, 2=NERDCONF.\r\n */\r\n\r\nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract SubscriptionNFT is ERC721, Ownable, EIP712 {\r\n    using Strings for uint256;\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Constantes y tipos\r\n    // ──────────────────────────────────────────────────────────\r\n    uint8 public constant PLAN_MONTHLY = 0; // 30 días\r\n    uint8 public constant PLAN_YEARLY  = 1; // 365 días\r\n\r\n    // EIP-712: nombre y versión del dominio\r\n    string private constant EIP712_NAME = \"DotcareSubscription\";\r\n    string private constant EIP712_VERSION = \"1\";\r\n\r\n    // Error para soulbound\r\n    error Soulbound();\r\n\r\n    // Payload firmado por backend para aplicar descuento\r\n    struct DiscountPayload {\r\n        bytes32 sessionId;     // id de sesión del checkout off-chain (H2)\r\n        address wallet;        // msg.sender esperado\r\n        uint8 planId;          // 0 mensual, 1 anual\r\n        uint16 discountBps;    // 0..10000\r\n        bytes32 nonce;         // anti-replay\r\n        uint256 deadline;      // timestamp límite\r\n        uint256 chainId;       // 420420422 (Paseo)\r\n        address contractAddr;  // address(this)\r\n        uint8 variant;         // 0/1/2\r\n    }\r\n\r\n    bytes32 private constant DISCOUNT_TYPEHASH = keccak256(\r\n        \"DiscountPayload(bytes32 sessionId,address wallet,uint8 planId,uint16 discountBps,bytes32 nonce,uint256 deadline,uint256 chainId,address contractAddr,uint8 variant)\"\r\n    );\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Storage\r\n    // ──────────────────────────────────────────────────────────\r\n    // Planes\r\n    mapping(uint8 => uint256) public priceWei;     // precio base por plan\r\n    mapping(uint8 => uint256) public durationSec;  // duración por plan\r\n\r\n    // NFT por wallet\r\n    uint256 private _nextTokenId = 1;\r\n    mapping(address => uint256) private _tokenIdOf;      // 0 si no tiene\r\n    mapping(uint256 => uint256) public expiresAt;        // por tokenId\r\n    mapping(uint256 => uint8)    public variantOf;       // 0/1/2 por tokenId\r\n\r\n    // Admin y config\r\n    address public treasury;           // destino fondos en withdraw\r\n    address public signer;             // firmante de descuentos\r\n    string  private baseHttpURI;       // ej: https://.../api/metadata/\r\n\r\n    // Soulbound\r\n    bool public soulbound = true;      // por defecto bloqueado\r\n\r\n    // Anti-replay\r\n    mapping(bytes32 => bool) public nonceUsed;\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Eventos\r\n    // ──────────────────────────────────────────────────────────\r\n    event Subscribed(\r\n        address indexed user,\r\n        uint256 indexed tokenId,\r\n        uint8   planId,\r\n        uint256 priceWei,\r\n        uint16  discountBps,\r\n        uint256 netPrice,\r\n        uint256 expiresAt,\r\n        uint8   variant,\r\n        bytes32 sessionId\r\n    );\r\n\r\n    event Renewed(\r\n        address indexed user,\r\n        uint256 indexed tokenId,\r\n        uint8   planId,\r\n        uint256 priceWei,\r\n        uint16  discountBps,\r\n        uint256 netPrice,\r\n        uint256 expiresAt,\r\n        bytes32 sessionId\r\n    );\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Constructor\r\n    // ──────────────────────────────────────────────────────────\r\n    constructor(\r\n        address initialOwner,\r\n        address _treasury,\r\n        address _signer,\r\n        string memory _baseHttpURI\r\n    )\r\n        ERC721(\"Dotcare Subscription\", \"DCSUB\")\r\n        Ownable(initialOwner)\r\n        EIP712(EIP712_NAME, EIP712_VERSION)\r\n    {\r\n        require(_treasury != address(0), \"treasury=0\");\r\n        require(_signer   != address(0), \"signer=0\");\r\n        treasury    = _treasury;\r\n        signer      = _signer;\r\n        baseHttpURI = _baseHttpURI;\r\n\r\n        // Defaults: 30d / 365d\r\n        durationSec[PLAN_MONTHLY] = 30 days;\r\n        durationSec[PLAN_YEARLY]  = 365 days;\r\n\r\n        // Precios se ajustan vía setPrices() o en el deploy script\r\n        priceWei[PLAN_MONTHLY] = 0;\r\n        priceWei[PLAN_YEARLY]  = 0;\r\n    }\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Helpers de lectura\r\n    // ──────────────────────────────────────────────────────────\r\n    function tokenIdOf(address user) public view returns (uint256) {\r\n        return _tokenIdOf[user]; // 0 si no tiene\r\n    }\r\n\r\n    function isActive(address user) public view returns (bool) {\r\n        uint256 tid = _tokenIdOf[user];\r\n        if (tid == 0) return false;\r\n        return expiresAt[tid] >= block.timestamp;\r\n    }\r\n\r\n    function _tokenURIFor(uint256 tokenId) internal view returns (string memory) {\r\n        return string(abi.encodePacked(baseHttpURI, tokenId.toString()));\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        require(_ownerOf(tokenId) != address(0), \"URI query for nonexistent token\");\r\n        return _tokenURIFor(tokenId);\r\n    }\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Admin\r\n    // ──────────────────────────────────────────────────────────\r\n    function setPrices(uint256 monthlyWei, uint256 yearlyWei) external onlyOwner {\r\n        priceWei[PLAN_MONTHLY] = monthlyWei;\r\n        priceWei[PLAN_YEARLY]  = yearlyWei;\r\n    }\r\n\r\n    function setDurations(uint256 monthlySec, uint256 yearlySec) external onlyOwner {\r\n        require(monthlySec > 0 && yearlySec > 0, \"dur=0\");\r\n        durationSec[PLAN_MONTHLY] = monthlySec;\r\n        durationSec[PLAN_YEARLY]  = yearlySec;\r\n    }\r\n\r\n    function setSigner(address _signer) external onlyOwner {\r\n        require(_signer != address(0), \"signer=0\");\r\n        signer = _signer;\r\n    }\r\n\r\n    function setTreasury(address _treasury) external onlyOwner {\r\n        require(_treasury != address(0), \"treasury=0\");\r\n        treasury = _treasury;\r\n    }\r\n\r\n    function setBaseHttpURI(string calldata _uri) external onlyOwner {\r\n        baseHttpURI = _uri;\r\n    }\r\n\r\n    function setSoulbound(bool _soulbound) external onlyOwner {\r\n        soulbound = _soulbound;\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        (bool ok, ) = payable(treasury).call{value: address(this).balance}(\"\");\r\n        require(ok, \"withdraw failed\");\r\n    }\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Subscribe / Renew con descuento firmado\r\n    // ──────────────────────────────────────────────────────────\r\n    function subscribe(\r\n        uint8 planId,\r\n        bytes calldata discountSig,\r\n        DiscountPayload calldata p\r\n    ) external payable {\r\n        require(planId == PLAN_MONTHLY || planId == PLAN_YEARLY, \"plan invalid\");\r\n        require(p.planId == planId, \"payload.plan mismatch\");\r\n        require(block.timestamp <= p.deadline, \"expired\");\r\n        require(!nonceUsed[p.nonce], \"nonce used\");\r\n        require(p.wallet == msg.sender, \"wallet mismatch\");\r\n        require(p.chainId == block.chainid, \"chainId mismatch\");\r\n        require(p.contractAddr == address(this), \"contract mismatch\");\r\n\r\n        // Verificación ECDSA/EIP-712\r\n        bytes32 digest = _hashTypedDataV4(\r\n            keccak256(\r\n                abi.encode(\r\n                    DISCOUNT_TYPEHASH,\r\n                    p.sessionId,\r\n                    p.wallet,\r\n                    p.planId,\r\n                    p.discountBps,\r\n                    p.nonce,\r\n                    p.deadline,\r\n                    p.chainId,\r\n                    p.contractAddr,\r\n                    p.variant\r\n                )\r\n            )\r\n        );\r\n        address recovered = ECDSA.recover(digest, discountSig);\r\n        require(recovered == signer, \"bad signature\");\r\n\r\n        nonceUsed[p.nonce] = true;\r\n\r\n        uint256 basePrice = priceWei[planId];\r\n        require(basePrice > 0, \"price=0\");\r\n\r\n        // Descuento en basis points (0..10000)\r\n        require(p.discountBps <= 10000, \"bps>10000\");\r\n        uint256 netPrice = basePrice - ((basePrice * p.discountBps) / 10000);\r\n        require(msg.value == netPrice, \"wrong msg.value\");\r\n\r\n        uint256 tid = _tokenIdOf[msg.sender];\r\n        uint256 newExpiry;\r\n        if (tid == 0) {\r\n            // Mint inicial (1 por wallet)\r\n            tid = _nextTokenId++;\r\n            _safeMint(msg.sender, tid);\r\n\r\n            // Guardar variant en mint; en renovaciones se conserva\r\n            variantOf[tid] = p.variant;\r\n\r\n            // Primer vencimiento\r\n            uint256 dur = durationSec[planId];\r\n            newExpiry = block.timestamp + dur;\r\n            expiresAt[tid] = newExpiry;\r\n\r\n            _tokenIdOf[msg.sender] = tid;\r\n\r\n            emit Subscribed(\r\n                msg.sender,\r\n                tid,\r\n                planId,\r\n                basePrice,\r\n                p.discountBps,\r\n                netPrice,\r\n                newExpiry,\r\n                p.variant,\r\n                p.sessionId\r\n            );\r\n        } else {\r\n            // Renovación: sumar sobre max(now, actual)\r\n            uint256 curr = expiresAt[tid];\r\n            uint256 start = curr > block.timestamp ? curr : block.timestamp;\r\n            newExpiry = start + durationSec[planId];\r\n            expiresAt[tid] = newExpiry;\r\n\r\n            emit Renewed(\r\n                msg.sender,\r\n                tid,\r\n                planId,\r\n                basePrice,\r\n                p.discountBps,\r\n                netPrice,\r\n                newExpiry,\r\n                p.sessionId\r\n            );\r\n        }\r\n    }\r\n\r\n    // ──────────────────────────────────────────────────────────\r\n    // Soulbound — bloquear aprobaciones y transferencias\r\n    // ──────────────────────────────────────────────────────────\r\n\r\n    // Bloquea approvals públicos cuando soulbound=true\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        if (soulbound) revert Soulbound();\r\n        super.approve(to, tokenId);\r\n    }\r\n\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        if (soulbound) revert Soulbound();\r\n        super.setApprovalForAll(operator, approved);\r\n    }\r\n\r\n    // Hook interno: bloquea cualquier movimiento (excepto mint/burn) si soulbound=true\r\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\r\n        if (soulbound) {\r\n            address from = _ownerOf(tokenId);\r\n            // Permitimos mint (from==0) y burn (to==0); bloqueamos transferencias regulares.\r\n            if (from != address(0) && to != address(0)) revert Soulbound();\r\n        }\r\n        return super._update(to, tokenId, auth);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1536],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1537,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1536],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[172]},"id":173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":172,"linearizedBaseContracts":[172],"name":"IERC5267","nameLocation":"144:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"159:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":152,"name":"EIP712DomainChanged","nameLocation":"254:19:1","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"273:2:1"},"src":"248:28:1"},{"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"282:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":171,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:1","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[],"src":"448:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"fields","nameLocation":"518:6:1","nodeType":"VariableDeclaration","scope":171,"src":"511:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"name","nameLocation":"552:4:1","nodeType":"VariableDeclaration","scope":171,"src":"538:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":157,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"version","nameLocation":"584:7:1","nodeType":"VariableDeclaration","scope":171,"src":"570:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":159,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"chainId","nameLocation":"613:7:1","nodeType":"VariableDeclaration","scope":171,"src":"605:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:1","nodeType":"VariableDeclaration","scope":171,"src":"634:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"salt","nameLocation":"681:4:1","nodeType":"VariableDeclaration","scope":171,"src":"673:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":169,"mutability":"mutable","name":"extensions","nameLocation":"716:10:1","nodeType":"VariableDeclaration","scope":171,"src":"699:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ArrayTypeName","src":"699:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:1"},"scope":172,"src":"427:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":173,"src":"134:605:1","usedErrors":[],"usedEvents":[152]}],"src":"107:633:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[309],"IERC20Errors":[214],"IERC721Errors":[262]},"id":310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":174,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":214,"linearizedBaseContracts":[214],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":184,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":184,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":184,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":184,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":189,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":189,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":194,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":194,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":203,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":203,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":203,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":208,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":208,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":213,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":213,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":310,"src":"280:1764:2","usedErrors":[184,189,194,203,208,213],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":262,"linearizedBaseContracts":[262],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":220,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":218,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":225,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":225,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":234,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":228,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":234,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":234,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":234,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":239,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":239,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":244,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":244,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":251,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":251,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":251,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":256,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":256,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":261,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":261,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":310,"src":"2190:2092:2","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":309,"linearizedBaseContracts":[309],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":274,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":274,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":274,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":279,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":279,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":284,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":284,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":291,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":291,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":291,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":296,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":296,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":301,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":301,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":298,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":308,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":308,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":308,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":310,"src":"4430:2107:2","usedErrors":[274,279,284,291,296,301,308],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1536],"ERC165":[4016],"ERC721":[1266],"ERC721Utils":[1506],"IERC165":[4028],"IERC721":[1383],"IERC721Errors":[262],"IERC721Metadata":[1429],"Strings":[3331]},"id":1267,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":311,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":1384,"src":"133:38:3","symbolAliases":[{"foreign":{"id":312,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":1430,"src":"172:65:3","symbolAliases":[{"foreign":{"id":314,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"180:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":1507,"src":"238:52:3","symbolAliases":[{"foreign":{"id":316,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"246:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":1537,"src":"291:48:3","symbolAliases":[{"foreign":{"id":318,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"299:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":3332,"src":"340:48:3","symbolAliases":[{"foreign":{"id":320,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"348:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":4017,"src":"389:69:3","symbolAliases":[{"foreign":{"id":322,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"397:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":323,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"406:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1267,"sourceUnit":310,"src":"459:66:3","symbolAliases":[{"foreign":{"id":325,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"467:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":328,"name":"Context","nameLocations":["803:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"803:7:3"},"id":329,"nodeType":"InheritanceSpecifier","src":"803:7:3"},{"baseName":{"id":330,"name":"ERC165","nameLocations":["812:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4016,"src":"812:6:3"},"id":331,"nodeType":"InheritanceSpecifier","src":"812:6:3"},{"baseName":{"id":332,"name":"IERC721","nameLocations":["820:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1383,"src":"820:7:3"},"id":333,"nodeType":"InheritanceSpecifier","src":"820:7:3"},{"baseName":{"id":334,"name":"IERC721Metadata","nameLocations":["829:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1429,"src":"829:15:3"},"id":335,"nodeType":"InheritanceSpecifier","src":"829:15:3"},{"baseName":{"id":336,"name":"IERC721Errors","nameLocations":["846:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":262,"src":"846:13:3"},"id":337,"nodeType":"InheritanceSpecifier","src":"846:13:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"527:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1266,"linearizedBaseContracts":[1266,262,1429,1383,4016,4028,1536],"name":"ERC721","nameLocation":"793:6:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":340,"libraryName":{"id":338,"name":"Strings","nameLocations":["872:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3331,"src":"872:7:3"},"nodeType":"UsingForDirective","src":"866:26:3","typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":342,"mutability":"mutable","name":"_name","nameLocation":"931:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"916:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"963:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":343,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":348,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"992:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":347,"keyName":"tokenId","keyNameLocation":"1008:7:3","keyType":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":352,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:3","nodeType":"VariableDeclaration","scope":1266,"src":"1050:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":351,"keyName":"owner","keyNameLocation":"1066:5:3","keyType":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":356,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:3","nodeType":"VariableDeclaration","scope":1266,"src":"1108:59:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":355,"keyName":"tokenId","keyNameLocation":"1124:7:3","keyType":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":362,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:3","nodeType":"VariableDeclaration","scope":1266,"src":"1174:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":361,"keyName":"owner","keyNameLocation":"1190:5:3","keyType":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":360,"keyName":"operator","keyNameLocation":"1215:8:3","keyType":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":359,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":378,"nodeType":"Block","src":"1436:57:3","statements":[{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1446:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":371,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"1454:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":373,"nodeType":"ExpressionStatement","src":"1446:13:3"},{"expression":{"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":374,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1469:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":375,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":377,"nodeType":"ExpressionStatement","src":"1469:17:3"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"1267:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":379,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"name_","nameLocation":"1406:5:3","nodeType":"VariableDeclaration","scope":379,"src":"1392:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":364,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:3","nodeType":"VariableDeclaration","scope":379,"src":"1413:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":366,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:3"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"1436:0:3"},"scope":1266,"src":"1380:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4015,4027],"body":{"id":409,"nodeType":"Block","src":"1635:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":390,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":392,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"1684:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1383_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1383_$","typeString":"type(contract IERC721)"}],"id":391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1383","typeString":"type(contract IERC721)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":396,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1720:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":398,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"1740:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1429_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1429_$","typeString":"type(contract IERC721Metadata)"}],"id":397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1429","typeString":"type(contract IERC721Metadata)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":405,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1808:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":403,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1266_$","typeString":"type(contract super ERC721)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"1784:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":389,"id":408,"nodeType":"Return","src":"1645:175:3"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"1499:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":410,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:3","nodeType":"FunctionDefinition","overrides":{"id":386,"nodeType":"OverrideSpecifier","overrides":[{"id":384,"name":"ERC165","nameLocations":["1603:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":4016,"src":"1603:6:3"},{"id":385,"name":"IERC165","nameLocations":["1611:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1611:7:3"}],"src":"1594:25:3"},"parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:3","nodeType":"VariableDeclaration","scope":410,"src":"1554:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":381,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:3"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"1629:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":387,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:3"},"scope":1266,"src":"1527:300:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1308],"body":{"id":437,"nodeType":"Block","src":"1933:136:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":418,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"1947:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:3","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":432,"nodeType":"IfStatement","src":"1943:87:3","trueBody":{"id":431,"nodeType":"Block","src":"1968:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":425,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{}}},"id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"1989:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"RevertStatement","src":"1982:37:3"}]}},{"expression":{"baseExpression":{"id":433,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"2046:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":435,"indexExpression":{"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2056:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":417,"id":436,"nodeType":"Return","src":"2039:23:3"}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"1833:23:3","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":438,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:3","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"owner","nameLocation":"1888:5:3","nodeType":"VariableDeclaration","scope":438,"src":"1880:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:3"},"returnParameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"1924:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:3"},"scope":1266,"src":"1861:208:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1316],"body":{"id":450,"nodeType":"Block","src":"2175:46:3","statements":[{"expression":{"arguments":[{"id":447,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2192:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":445,"id":449,"nodeType":"Return","src":"2185:29:3"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"2075:23:3","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":451,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:3","nodeType":"FunctionDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:3","nodeType":"VariableDeclaration","scope":451,"src":"2120:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:3"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"2166:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:3"},"scope":1266,"src":"2103:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1414],"body":{"id":459,"nodeType":"Block","src":"2323:29:3","statements":[{"expression":{"id":457,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":456,"id":458,"nodeType":"Return","src":"2333:12:3"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"2227:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":460,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:3","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[],"src":"2276:2:3"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"2308:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":454,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:3"},"scope":1266,"src":"2263:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1420],"body":{"id":468,"nodeType":"Block","src":"2456:31:3","statements":[{"expression":{"id":466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2473:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":465,"id":467,"nodeType":"Return","src":"2466:14:3"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"2358:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:3","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"2409:2:3"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"2441:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":463,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:3"},"scope":1266,"src":"2394:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1428],"body":{"id":504,"nodeType":"Block","src":"2608:176:3","statements":[{"expression":{"arguments":[{"id":478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2632:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2618:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":480,"nodeType":"ExpressionStatement","src":"2618:22:3"},{"assignments":[482],"declarations":[{"constant":false,"id":482,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:3","nodeType":"VariableDeclaration","scope":504,"src":"2651:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":481,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":485,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2675:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":488,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"2708:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:3","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:3","memberName":"length","nodeType":"MemberAccess","src":"2702:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:3","trueExpression":{"arguments":[{"id":496,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"2744:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":497,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"2753:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":493,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:3","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":476,"id":503,"nodeType":"Return","src":"2695:82:3"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2493:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:3","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:3","nodeType":"VariableDeclaration","scope":505,"src":"2547:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":505,"src":"2593:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":474,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:3"},"scope":1266,"src":"2529:255:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"3092:26:3","statements":[{"expression":{"hexValue":"","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":510,"id":512,"nodeType":"Return","src":"3102:9:3"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2790:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:3","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"3043:2:3"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"3077:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":508,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:3"},"scope":1266,"src":"3026:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1356],"body":{"id":529,"nodeType":"Block","src":"3213:52:3","statements":[{"expression":{"arguments":[{"id":523,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3232:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":525,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"3245:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":522,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1133,1199],"referencedDeclaration":1133,"src":"3223:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"3223:35:3"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"3124:23:3","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":530,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:3","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"to","nameLocation":"3177:2:3","nodeType":"VariableDeclaration","scope":530,"src":"3169:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:3","nodeType":"VariableDeclaration","scope":530,"src":"3181:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:3"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"3213:0:3"},"scope":1266,"src":"3152:113:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1372],"body":{"id":546,"nodeType":"Block","src":"3375:78:3","statements":[{"expression":{"arguments":[{"id":539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3399:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":538,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3385:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":541,"nodeType":"ExpressionStatement","src":"3385:22:3"},{"expression":{"arguments":[{"id":543,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":542,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3425:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":537,"id":545,"nodeType":"Return","src":"3418:28:3"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"3271:23:3","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":547,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:3","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:3","nodeType":"VariableDeclaration","scope":547,"src":"3320:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:3"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":547,"src":"3366:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:3"},"scope":1266,"src":"3299:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1364],"body":{"id":562,"nodeType":"Block","src":"3562:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"3591:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3605:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3615:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":555,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"3572:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":561,"nodeType":"ExpressionStatement","src":"3572:52:3"}]},"documentation":{"id":548,"nodeType":"StructuredDocumentation","src":"3459:23:3","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":563,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:3","nodeType":"FunctionDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"operator","nameLocation":"3522:8:3","nodeType":"VariableDeclaration","scope":563,"src":"3514:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":552,"mutability":"mutable","name":"approved","nameLocation":"3537:8:3","nodeType":"VariableDeclaration","scope":563,"src":"3532:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":551,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:3"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[],"src":"3562:0:3"},"scope":1266,"src":"3487:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1382],"body":{"id":579,"nodeType":"Block","src":"3759:59:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":573,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"3776:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":575,"indexExpression":{"id":574,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"3795:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":577,"indexExpression":{"id":576,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"3802:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":572,"id":578,"nodeType":"Return","src":"3769:42:3"}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"3637:23:3","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:3","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"owner","nameLocation":"3699:5:3","nodeType":"VariableDeclaration","scope":580,"src":"3691:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"operator","nameLocation":"3714:8:3","nodeType":"VariableDeclaration","scope":580,"src":"3706:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:3"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"3753:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":570,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:3"},"scope":1266,"src":"3665:153:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":625,"nodeType":"Block","src":"3932:498:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3946:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:3","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":604,"nodeType":"IfStatement","src":"3942:87:3","trueBody":{"id":603,"nodeType":"Block","src":"3964:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:3","typeDescriptions":{}}},"id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":596,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3985:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"RevertStatement","src":"3978:40:3"}]}},{"assignments":[606],"declarations":[{"constant":false,"id":606,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:3","nodeType":"VariableDeclaration","scope":625,"src":"4247:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":613,"initialValue":{"arguments":[{"id":608,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4279:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"4283:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":610,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"4292:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":607,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"4271:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4319:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4336:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"4315:109:3","trueBody":{"id":623,"nodeType":"Block","src":"4342:82:3","statements":[{"errorCall":{"arguments":[{"id":618,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"4390:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":620,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4399:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":617,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"4363:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"4356:57:3"}]}}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"3824:23:3","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":626,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:3","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"from","nameLocation":"3882:4:3","nodeType":"VariableDeclaration","scope":626,"src":"3874:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"to","nameLocation":"3896:2:3","nodeType":"VariableDeclaration","scope":626,"src":"3888:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":584,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:3","nodeType":"VariableDeclaration","scope":626,"src":"3900:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:3"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"3932:0:3"},"scope":1266,"src":"3852:578:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1338],"body":{"id":643,"nodeType":"Block","src":"4540:56:3","statements":[{"expression":{"arguments":[{"id":637,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4567:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4573:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":636,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[644,674],"referencedDeclaration":674,"src":"4550:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"4550:39:3"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"4436:23:3","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":644,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:3","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"from","nameLocation":"4498:4:3","nodeType":"VariableDeclaration","scope":644,"src":"4490:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"to","nameLocation":"4512:2:3","nodeType":"VariableDeclaration","scope":644,"src":"4504:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:3","nodeType":"VariableDeclaration","scope":644,"src":"4516:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:3"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"4540:0:3"},"scope":1266,"src":"4464:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1328],"body":{"id":673,"nodeType":"Block","src":"4733:130:3","statements":[{"expression":{"arguments":[{"id":657,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4756:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4762:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4766:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4743:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"4743:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"4818:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4832:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4838:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":670,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"4851:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":662,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"4784:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1506_$","typeString":"type(library ERC721Utils)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"4784:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"4784:72:3"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"4602:23:3","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":674,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:3","nodeType":"FunctionDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"from","nameLocation":"4664:4:3","nodeType":"VariableDeclaration","scope":674,"src":"4656:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"to","nameLocation":"4678:2:3","nodeType":"VariableDeclaration","scope":674,"src":"4670:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:3","nodeType":"VariableDeclaration","scope":674,"src":"4682:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"data","nameLocation":"4712:4:3","nodeType":"VariableDeclaration","scope":674,"src":"4699:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":652,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:3"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[],"src":"4733:0:3"},"scope":1266,"src":"4630:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":686,"nodeType":"Block","src":"5453:40:3","statements":[{"expression":{"baseExpression":{"id":682,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"5470:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":684,"indexExpression":{"id":683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"5478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":681,"id":685,"nodeType":"Return","src":"5463:23:3"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"4869:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:3","nodeType":"FunctionDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:3","nodeType":"VariableDeclaration","scope":687,"src":"5396:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:3"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"5444:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:3"},"scope":1266,"src":"5378:115:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":699,"nodeType":"Block","src":"5688:48:3","statements":[{"expression":{"baseExpression":{"id":695,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5705:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":697,"indexExpression":{"id":696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"5721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":694,"id":698,"nodeType":"Return","src":"5698:31:3"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"5499:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":700,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:3","nodeType":"FunctionDefinition","parameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:3","nodeType":"VariableDeclaration","scope":700,"src":"5631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:3"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":700,"src":"5679:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:3"},"scope":1266,"src":"5609:127:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":735,"nodeType":"Block","src":"6156:163:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6185:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:3","typeDescriptions":{}}},"id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"6223:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":719,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6232:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"6260:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6267:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":721,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6243:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6292:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":726,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"6279:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":729,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6304:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":711,"id":734,"nodeType":"Return","src":"6166:146:3"}]},"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"5742:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:3","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"owner","nameLocation":"6078:5:3","nodeType":"VariableDeclaration","scope":736,"src":"6070:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"spender","nameLocation":"6093:7:3","nodeType":"VariableDeclaration","scope":736,"src":"6085:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:3","nodeType":"VariableDeclaration","scope":736,"src":"6102:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:3"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"6150:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:3"},"scope":1266,"src":"6047:272:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"6848:271:3","statements":[{"condition":{"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:3","subExpression":{"arguments":[{"id":747,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6877:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6884:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":746,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6863:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":771,"nodeType":"IfStatement","src":"6858:255:3","trueBody":{"id":770,"nodeType":"Block","src":"6903:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":752,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6921:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:3","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":768,"nodeType":"Block","src":"7019:84:3","statements":[{"errorCall":{"arguments":[{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"7071:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":763,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"7044:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":767,"nodeType":"RevertStatement","src":"7037:51:3"}]},"id":769,"nodeType":"IfStatement","src":"6917:186:3","trueBody":{"id":762,"nodeType":"Block","src":"6942:71:3","statements":[{"errorCall":{"arguments":[{"id":759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"6990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":758,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"6967:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"RevertStatement","src":"6960:38:3"}]}}]}}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"6325:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"owner","nameLocation":"6785:5:3","nodeType":"VariableDeclaration","scope":773,"src":"6777:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"spender","nameLocation":"6800:7:3","nodeType":"VariableDeclaration","scope":773,"src":"6792:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:3","nodeType":"VariableDeclaration","scope":773,"src":"6809:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:3"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[],"src":"6848:0:3"},"scope":1266,"src":"6751:368:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"7836:78:3","statements":[{"id":787,"nodeType":"UncheckedBlock","src":"7846:62:3","statements":[{"expression":{"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":781,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"7870:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":783,"indexExpression":{"id":782,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7880:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7892:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":786,"nodeType":"ExpressionStatement","src":"7870:27:3"}]}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"7125:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:3","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"account","nameLocation":"7795:7:3","nodeType":"VariableDeclaration","scope":789,"src":"7787:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"value","nameLocation":"7812:5:3","nodeType":"VariableDeclaration","scope":789,"src":"7804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":777,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:3"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"7836:0:3"},"scope":1266,"src":"7761:153:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"8602:700:3","statements":[{"assignments":[802],"declarations":[{"constant":false,"id":802,"mutability":"mutable","name":"from","nameLocation":"8620:4:3","nodeType":"VariableDeclaration","scope":878,"src":"8612:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":806,"initialValue":{"arguments":[{"id":804,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":803,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8627:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"8704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:3","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":820,"nodeType":"IfStatement","src":"8700:86:3","trueBody":{"id":819,"nodeType":"Block","src":"8724:62:3","statements":[{"expression":{"arguments":[{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"8761:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":813,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"8738:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"8738:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"8830:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:3","typeDescriptions":{}}},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":848,"nodeType":"IfStatement","src":"8826:256:3","trueBody":{"id":847,"nodeType":"Block","src":"8850:232:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:3","typeDescriptions":{}}},"id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":832,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:3","typeDescriptions":{}}},"id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":827,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1133,1199],"referencedDeclaration":1199,"src":"8946:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"8946:48:3"},{"id":846,"nodeType":"UncheckedBlock","src":"9009:63:3","statements":[{"expression":{"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":840,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"9037:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":842,"indexExpression":{"id":841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9047:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":845,"nodeType":"ExpressionStatement","src":"9037:20:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":849,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9096:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:3","typeDescriptions":{}}},"id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"9092:107:3","trueBody":{"id":862,"nodeType":"Block","src":"9114:85:3","statements":[{"id":861,"nodeType":"UncheckedBlock","src":"9128:61:3","statements":[{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":855,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"9156:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":857,"indexExpression":{"id":856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9166:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":860,"nodeType":"ExpressionStatement","src":"9156:18:3"}]}]}},{"expression":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":864,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"9209:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":866,"indexExpression":{"id":865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"9217:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9228:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":869,"nodeType":"ExpressionStatement","src":"9209:21:3"},{"eventCall":{"arguments":[{"id":871,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9255:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"9261:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"9265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":870,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"9246:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"EmitStatement","src":"9241:32:3"},{"expression":{"id":876,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"9291:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":800,"id":877,"nodeType":"Return","src":"9284:11:3"}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"7920:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"to","nameLocation":"8532:2:3","nodeType":"VariableDeclaration","scope":879,"src":"8524:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:3","nodeType":"VariableDeclaration","scope":879,"src":"8536:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"auth","nameLocation":"8561:4:3","nodeType":"VariableDeclaration","scope":879,"src":"8553:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":879,"src":"8593:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:3"},"scope":1266,"src":"8507:795:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":928,"nodeType":"Block","src":"9677:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9691:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:3","typeDescriptions":{}}},"id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":901,"nodeType":"IfStatement","src":"9687:87:3","trueBody":{"id":900,"nodeType":"Block","src":"9709:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:3","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":893,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"9730:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"RevertStatement","src":"9723:40:3"}]}},{"assignments":[903],"declarations":[{"constant":false,"id":903,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:3","nodeType":"VariableDeclaration","scope":928,"src":"9783:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":912,"initialValue":{"arguments":[{"id":905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9815:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:3","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":904,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"9807:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9853:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:3","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":927,"nodeType":"IfStatement","src":"9849:96:3","trueBody":{"id":926,"nodeType":"Block","src":"9882:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:3","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"9903:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":925,"nodeType":"RevertStatement","src":"9896:38:3"}]}}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"9308:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:3","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"to","nameLocation":"9647:2:3","nodeType":"VariableDeclaration","scope":929,"src":"9639:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:3","nodeType":"VariableDeclaration","scope":929,"src":"9651:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"9677:0:3"},"scope":1266,"src":"9624:327:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"10359:43:3","statements":[{"expression":{"arguments":[{"id":938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"10379:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":937,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[944,974],"referencedDeclaration":974,"src":"10369:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"ExpressionStatement","src":"10369:26:3"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"9957:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:3","nodeType":"FunctionDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"to","nameLocation":"10329:2:3","nodeType":"VariableDeclaration","scope":944,"src":"10321:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:3","nodeType":"VariableDeclaration","scope":944,"src":"10333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:3"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"10359:0:3"},"scope":1266,"src":"10302:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"10707:123:3","statements":[{"expression":{"arguments":[{"id":955,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10723:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":954,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"10717:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"10717:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":962,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"10779:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"10805:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":970,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10818:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":959,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"10745:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1506_$","typeString":"type(library ERC721Utils)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"10745:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"10745:78:3"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"10408:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:3","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"to","nameLocation":"10650:2:3","nodeType":"VariableDeclaration","scope":974,"src":"10642:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:3","nodeType":"VariableDeclaration","scope":974,"src":"10654:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"data","nameLocation":"10684:4:3","nodeType":"VariableDeclaration","scope":974,"src":"10671:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":950,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:3"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"10707:0:3"},"scope":1266,"src":"10623:207:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1006,"nodeType":"Block","src":"11197:186:3","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:3","nodeType":"VariableDeclaration","scope":1006,"src":"11207:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":993,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:3","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"11251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:3","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":982,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11231:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11285:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:3","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"11281:96:3","trueBody":{"id":1004,"nodeType":"Block","src":"11314:63:3","statements":[{"errorCall":{"arguments":[{"id":1001,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"11358:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1000,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"11335:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"RevertStatement","src":"11328:38:3"}]}}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"10836:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:3","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:3","nodeType":"VariableDeclaration","scope":1007,"src":"11171:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":976,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:3"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"11197:0:3"},"scope":1266,"src":"11156:227:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1066,"nodeType":"Block","src":"11778:389:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"11792:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:3","typeDescriptions":{}}},"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1031,"nodeType":"IfStatement","src":"11788:87:3","trueBody":{"id":1030,"nodeType":"Block","src":"11810:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:3","typeDescriptions":{}}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1023,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"11831:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"RevertStatement","src":"11824:40:3"}]}},{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:3","nodeType":"VariableDeclaration","scope":1066,"src":"11884:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1042,"initialValue":{"arguments":[{"id":1035,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"11916:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"11920:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:3","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11908:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1043,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11954:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:3","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"12056:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1055,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1064,"nodeType":"IfStatement","src":"12052:109:3","trueBody":{"id":1063,"nodeType":"Block","src":"12079:82:3","statements":[{"errorCall":{"arguments":[{"id":1058,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"12121:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12127:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1060,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"12136:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1057,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"12100:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"RevertStatement","src":"12093:57:3"}]}},"id":1065,"nodeType":"IfStatement","src":"11950:211:3","trueBody":{"id":1053,"nodeType":"Block","src":"11983:63:3","statements":[{"errorCall":{"arguments":[{"id":1050,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"12027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1049,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"12004:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"RevertStatement","src":"11997:38:3"}]}}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"11389:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1067,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:3","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"from","nameLocation":"11734:4:3","nodeType":"VariableDeclaration","scope":1067,"src":"11726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"to","nameLocation":"11748:2:3","nodeType":"VariableDeclaration","scope":1067,"src":"11740:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:3","nodeType":"VariableDeclaration","scope":1067,"src":"11752:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:3"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"11778:0:3"},"scope":1266,"src":"11707:460:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"13176:53:3","statements":[{"expression":{"arguments":[{"id":1078,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"13200:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"13206:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"13210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1077,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1085,1115],"referencedDeclaration":1115,"src":"13186:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"13186:36:3"}]},"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"12173:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:3","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"from","nameLocation":"13132:4:3","nodeType":"VariableDeclaration","scope":1085,"src":"13124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"to","nameLocation":"13146:2:3","nodeType":"VariableDeclaration","scope":1085,"src":"13138:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:3","nodeType":"VariableDeclaration","scope":1085,"src":"13150:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:3"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"13176:0:3"},"scope":1266,"src":"13101:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1114,"nodeType":"Block","src":"13568:127:3","statements":[{"expression":{"arguments":[{"id":1098,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"13588:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"13594:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1100,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"13598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1097,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13578:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"13578:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1106,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"13650:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"13664:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1109,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"13670:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"13674:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1111,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"13683:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1103,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"13616:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1506_$","typeString":"type(library ERC721Utils)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1505,"src":"13616:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"ExpressionStatement","src":"13616:72:3"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"13235:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:3","nodeType":"FunctionDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"from","nameLocation":"13497:4:3","nodeType":"VariableDeclaration","scope":1115,"src":"13489:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"to","nameLocation":"13511:2:3","nodeType":"VariableDeclaration","scope":1115,"src":"13503:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1089,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:3","nodeType":"VariableDeclaration","scope":1115,"src":"13515:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"data","nameLocation":"13545:4:3","nodeType":"VariableDeclaration","scope":1115,"src":"13532:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1093,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:3"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"13568:0:3"},"scope":1266,"src":"13466:229:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"14208:50:3","statements":[{"expression":{"arguments":[{"id":1126,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"14227:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"14231:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1128,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"14240:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1125,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1133,1199],"referencedDeclaration":1199,"src":"14218:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"14218:33:3"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"13701:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:3","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"to","nameLocation":"14164:2:3","nodeType":"VariableDeclaration","scope":1133,"src":"14156:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:3","nodeType":"VariableDeclaration","scope":1133,"src":"14168:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"auth","nameLocation":"14193:4:3","nodeType":"VariableDeclaration","scope":1133,"src":"14185:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:3"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"14208:0:3"},"scope":1266,"src":"14138:120:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1198,"nodeType":"Block","src":"14534:568:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"14600:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14613:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:3","typeDescriptions":{}}},"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"nodeType":"IfStatement","src":"14596:460:3","trueBody":{"id":1190,"nodeType":"Block","src":"14633:423:3","statements":[{"assignments":[1154],"declarations":[{"constant":false,"id":1154,"mutability":"mutable","name":"owner","nameLocation":"14655:5:3","nodeType":"VariableDeclaration","scope":1190,"src":"14647:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1158,"initialValue":{"arguments":[{"id":1156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"14677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1155,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"14663:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1159,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14813:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:3","typeDescriptions":{}}},"id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"14835:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1166,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:3","subExpression":{"arguments":[{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"14870:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1171,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14877:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"14853:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"nodeType":"IfStatement","src":"14809:142:3","trueBody":{"id":1179,"nodeType":"Block","src":"14884:67:3","statements":[{"errorCall":{"arguments":[{"id":1176,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14931:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"14909:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"RevertStatement","src":"14902:34:3"}]}},{"condition":{"id":1181,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"14969:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1189,"nodeType":"IfStatement","src":"14965:81:3","trueBody":{"id":1188,"nodeType":"Block","src":"14980:66:3","statements":[{"eventCall":{"arguments":[{"id":1183,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"15012:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"15019:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1185,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"15023:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1182,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"15003:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"EmitStatement","src":"14998:33:3"}]}}]}},{"expression":{"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1192,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"15066:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1194,"indexExpression":{"id":1193,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"15082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1195,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"15093:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1197,"nodeType":"ExpressionStatement","src":"15066:29:3"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"14264:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1199,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:3","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"to","nameLocation":"14466:2:3","nodeType":"VariableDeclaration","scope":1199,"src":"14458:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:3","nodeType":"VariableDeclaration","scope":1199,"src":"14470:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"auth","nameLocation":"14495:4:3","nodeType":"VariableDeclaration","scope":1199,"src":"14487:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:3","nodeType":"VariableDeclaration","scope":1199,"src":"14501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:3"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"14534:0:3"},"scope":1266,"src":"14440:662:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"15404:219:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"15418:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:3","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1220,"nodeType":"IfStatement","src":"15414:91:3","trueBody":{"id":1219,"nodeType":"Block","src":"15442:63:3","statements":[{"errorCall":{"arguments":[{"id":1216,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"15485:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1215,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"15463:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"RevertStatement","src":"15456:38:3"}]}},{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1221,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"15514:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1224,"indexExpression":{"id":1222,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"15533:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1225,"indexExpression":{"id":1223,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"15540:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1226,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15552:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1228,"nodeType":"ExpressionStatement","src":"15514:46:3"},{"eventCall":{"arguments":[{"id":1230,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"15590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1231,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"15597:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1232,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"15607:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1229,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"15575:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"EmitStatement","src":"15570:46:3"}]},"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"15108:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:3","nodeType":"FunctionDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"owner","nameLocation":"15347:5:3","nodeType":"VariableDeclaration","scope":1236,"src":"15339:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"operator","nameLocation":"15362:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"15354:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"approved","nameLocation":"15377:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"15372:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1205,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:3"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"15404:0:3"},"scope":1266,"src":"15311:312:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"15930:169:3","statements":[{"assignments":[1245],"declarations":[{"constant":false,"id":1245,"mutability":"mutable","name":"owner","nameLocation":"15948:5:3","nodeType":"VariableDeclaration","scope":1264,"src":"15940:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1249,"initialValue":{"arguments":[{"id":1247,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"15965:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1246,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"15956:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"15987:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:3","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"nodeType":"IfStatement","src":"15983:88:3","trueBody":{"id":1260,"nodeType":"Block","src":"16008:63:3","statements":[{"errorCall":{"arguments":[{"id":1257,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"16052:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1256,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"16029:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"RevertStatement","src":"16022:38:3"}]}},{"expression":{"id":1262,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"16087:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1243,"id":1263,"nodeType":"Return","src":"16080:12:3"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"15629:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1265,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:3","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:3","nodeType":"VariableDeclaration","scope":1265,"src":"15881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:3"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1265,"src":"15921:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:3"},"scope":1266,"src":"15858:241:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1267,"src":"775:15326:3","usedErrors":[220,225,234,239,244,251,256,261],"usedEvents":[1282,1291,1300]}],"src":"107:15995:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4028],"IERC721":[1383]},"id":1384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1268,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1384,"sourceUnit":4029,"src":"134:62:4","symbolAliases":[{"foreign":{"id":1269,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1272,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"288:7:4"},"id":1273,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1383,"linearizedBaseContracts":[1383,4028],"name":"IERC721","nameLocation":"277:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1282,"name":"Transfer","nameLocation":"401:8:4","nodeType":"EventDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":1282,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":1282,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":1282,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"},"src":"395:82:4"},{"anonymous":false,"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1291,"name":"Approval","nameLocation":"588:8:4","nodeType":"EventDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":1291,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":1291,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1289,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":1291,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"},"src":"582:89:4"},{"anonymous":false,"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1300,"name":"ApprovalForAll","nameLocation":"805:14:4","nodeType":"EventDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":1300,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":1300,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":1300,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1297,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"},"src":"799:85:4"},{"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1308,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":1308,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":1308,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":1383,"src":"971:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1316,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":1316,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":1316,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":1383,"src":"1187:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1328,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":1328,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":1328,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":1328,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":1328,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1324,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":1383,"src":"1835:99:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1338,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":1338,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":1338,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1332,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1335,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":1338,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":1383,"src":"2651:78:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":1348,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":1348,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":1348,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":1383,"src":"3473:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":1356,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":1356,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":1383,"src":"4010:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1364,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":1364,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":1364,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1360,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":1383,"src":"4391:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1372,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":1372,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":1372,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":1383,"src":"4610:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1373,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1382,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":1382,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":1382,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1379,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":1383,"src":"4838:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1384,"src":"267:4661:4","usedErrors":[],"usedEvents":[1282,1291,1300]}],"src":"108:4821:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1401]},"id":1402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1385,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"142:154:5","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1401,"linearizedBaseContracts":[1401],"name":"IERC721Receiver","nameLocation":"307:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"329:500:5","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1400,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:5","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"operator","nameLocation":"877:8:5","nodeType":"VariableDeclaration","scope":1400,"src":"869:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"from","nameLocation":"903:4:5","nodeType":"VariableDeclaration","scope":1400,"src":"895:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:5","nodeType":"VariableDeclaration","scope":1400,"src":"917:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"data","nameLocation":"957:4:5","nodeType":"VariableDeclaration","scope":1400,"src":"942:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1394,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:5"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1400,"src":"986:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1397,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:5"},"scope":1401,"src":"834:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1402,"src":"297:699:5","usedErrors":[],"usedEvents":[]}],"src":"116:881:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1383],"IERC721Metadata":[1429]},"id":1430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1403,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":1384,"src":"153:39:6","symbolAliases":[{"foreign":{"id":1404,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"161:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1407,"name":"IERC721","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1383,"src":"357:7:6"},"id":1408,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"194:133:6","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1429,"linearizedBaseContracts":[1429,1383,4028],"name":"IERC721Metadata","nameLocation":"338:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"371:58:6","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1414,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:6","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"447:2:6"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"473:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1411,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:6"},"scope":1429,"src":"434:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"494:60:6","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1420,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:6","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"574:2:6"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"600:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1417,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:6"},"scope":1429,"src":"559:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"621:90:6","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1428,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:6","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:6","nodeType":"VariableDeclaration","scope":1428,"src":"734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:6"},"returnParameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"774:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1425,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:6"},"scope":1429,"src":"716:73:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1430,"src":"328:463:6","usedErrors":[],"usedEvents":[1282,1291,1300]}],"src":"127:665:6"},"id":6},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1506],"IERC721Errors":[262],"IERC721Receiver":[1401]},"id":1507,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1431,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1507,"sourceUnit":1402,"src":"144:55:7","symbolAliases":[{"foreign":{"id":1432,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"152:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1507,"sourceUnit":310,"src":"200:69:7","symbolAliases":[{"foreign":{"id":1434,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"208:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"271:159:7","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1506,"linearizedBaseContracts":[1506],"name":"ERC721Utils","nameLocation":"439:11:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1504,"nodeType":"Block","src":"1159:760:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1173:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:7","memberName":"code","nodeType":"MemberAccess","src":"1173:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:7","memberName":"length","nodeType":"MemberAccess","src":"1173:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1503,"nodeType":"IfStatement","src":"1169:744:7","trueBody":{"id":1502,"nodeType":"Block","src":"1193:720:7","statements":[{"clauses":[{"block":{"id":1480,"nodeType":"Block","src":"1303:214:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1467,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"1325:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1468,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1335:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1401_$","typeString":"type(contract IERC721Receiver)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"1335:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1479,"nodeType":"IfStatement","src":"1321:182:7","trueBody":{"id":1478,"nodeType":"Block","src":"1378:125:7","statements":[{"errorCall":{"arguments":[{"id":1475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1481:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1472,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"1445:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$262_$","typeString":"type(contract IERC721Errors)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":244,"src":"1445:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"RevertStatement","src":"1438:46:7"}]}}]},"errorName":"","id":1481,"nodeType":"TryCatchClause","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"retval","nameLocation":"1295:6:7","nodeType":"VariableDeclaration","scope":1481,"src":"1288:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1464,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:7"},"src":"1279:238:7"},{"block":{"id":1499,"nodeType":"Block","src":"1546:357:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1485,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"1568:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:7","memberName":"length","nodeType":"MemberAccess","src":"1568:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1497,"nodeType":"Block","src":"1736:153:7","statements":[{"AST":{"nativeSrc":"1783:88:7","nodeType":"YulBlock","src":"1783:88:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:7","nodeType":"YulIdentifier","src":"1820:6:7"},{"kind":"number","nativeSrc":"1828:4:7","nodeType":"YulLiteral","src":"1828:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:7","nodeType":"YulIdentifier","src":"1816:3:7"},"nativeSrc":"1816:17:7","nodeType":"YulFunctionCall","src":"1816:17:7"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:7","nodeType":"YulIdentifier","src":"1841:6:7"}],"functionName":{"name":"mload","nativeSrc":"1835:5:7","nodeType":"YulIdentifier","src":"1835:5:7"},"nativeSrc":"1835:13:7","nodeType":"YulFunctionCall","src":"1835:13:7"}],"functionName":{"name":"revert","nativeSrc":"1809:6:7","nodeType":"YulIdentifier","src":"1809:6:7"},"nativeSrc":"1809:40:7","nodeType":"YulFunctionCall","src":"1809:40:7"},"nativeSrc":"1809:40:7","nodeType":"YulExpressionStatement","src":"1809:40:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1483,"isOffset":false,"isSlot":false,"src":"1820:6:7","valueSize":1},{"declaration":1483,"isOffset":false,"isSlot":false,"src":"1841:6:7","valueSize":1}],"flags":["memory-safe"],"id":1496,"nodeType":"InlineAssembly","src":"1758:113:7"}]},"id":1498,"nodeType":"IfStatement","src":"1564:325:7","trueBody":{"id":1495,"nodeType":"Block","src":"1588:142:7","statements":[{"errorCall":{"arguments":[{"id":1492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1708:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1489,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"1672:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$262_$","typeString":"type(contract IERC721Errors)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":244,"src":"1672:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"RevertStatement","src":"1665:46:7"}]}}]},"errorName":"","id":1500,"nodeType":"TryCatchClause","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"reason","nameLocation":"1538:6:7","nodeType":"VariableDeclaration","scope":1500,"src":"1525:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1482,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:7"},"src":"1518:385:7"}],"externalCall":{"arguments":[{"id":1459,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1248:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"1258:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"1264:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1462,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"1273:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1456,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"1227:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1455,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1211:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1401_$","typeString":"type(contract IERC721Receiver)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1401","typeString":"contract IERC721Receiver"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"1211:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1501,"nodeType":"TryStatement","src":"1207:696:7"}]}}]},"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"457:531:7","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1505,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:7","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"operator","nameLocation":"1041:8:7","nodeType":"VariableDeclaration","scope":1505,"src":"1033:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"from","nameLocation":"1067:4:7","nodeType":"VariableDeclaration","scope":1505,"src":"1059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"to","nameLocation":"1089:2:7","nodeType":"VariableDeclaration","scope":1505,"src":"1081:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:7","nodeType":"VariableDeclaration","scope":1505,"src":"1101:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"data","nameLocation":"1139:4:7","nodeType":"VariableDeclaration","scope":1505,"src":"1126:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:7"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"1159:0:7"},"scope":1506,"src":"993:926:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1507,"src":"431:1490:7","usedErrors":[],"usedEvents":[]}],"src":"118:1804:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1536]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1508,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1517,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1513,"id":1516,"nodeType":"Return","src":"728:17:8"}]},"id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1518,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1536,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1522,"id":1525,"nodeType":"Return","src":"835:15:8"}]},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1520,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1536,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1531,"id":1533,"nodeType":"Return","src":"945:8:8"}]},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1536,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1537,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1588]},"id":1589,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1588,"linearizedBaseContracts":[1588],"name":"Panic","nameLocation":"665:5:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"id":1543,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","nodeType":"VariableDeclaration","scope":1588,"src":"718:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"id":1547,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","nodeType":"VariableDeclaration","scope":1588,"src":"806:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"id":1551,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","nodeType":"VariableDeclaration","scope":1588,"src":"897:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"id":1555,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","nodeType":"VariableDeclaration","scope":1588,"src":"990:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"id":1559,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","nodeType":"VariableDeclaration","scope":1588,"src":"1080:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"id":1563,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","nodeType":"VariableDeclaration","scope":1588,"src":"1181:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"id":1567,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","nodeType":"VariableDeclaration","scope":1588,"src":"1271:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"id":1571,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","nodeType":"VariableDeclaration","scope":1588,"src":"1365:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"id":1575,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","nodeType":"VariableDeclaration","scope":1588,"src":"1493:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"id":1579,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","nodeType":"VariableDeclaration","scope":1588,"src":"1593:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1586,"nodeType":"Block","src":"1819:151:9","statements":[{"AST":{"nativeSrc":"1854:110:9","nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:9","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:9","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},"nativeSrc":"1868:24:9","nodeType":"YulFunctionCall","src":"1868:24:9"},"nativeSrc":"1868:24:9","nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:9","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:9","nodeType":"YulIdentifier","src":"1905:6:9"},"nativeSrc":"1905:18:9","nodeType":"YulFunctionCall","src":"1905:18:9"},"nativeSrc":"1905:18:9","nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:9","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:9","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:9","nodeType":"YulIdentifier","src":"1936:6:9"},"nativeSrc":"1936:18:9","nodeType":"YulFunctionCall","src":"1936:18:9"},"nativeSrc":"1936:18:9","nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1582,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1585,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1587,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1587,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1588,"src":"1776:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1589,"src":"657:1315:9","usedErrors":[],"usedEvents":[]}],"src":"99:1874:9"},"id":9},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1594],"ShortStrings":[1805],"StorageSlot":[1929]},"id":1806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1590,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1806,"sourceUnit":1930,"src":"132:46:10","symbolAliases":[{"foreign":{"id":1591,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"140:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1594,"name":"ShortString","nameLocation":"353:11:10","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:10","underlyingType":{"id":1593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"378:876:10","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1805,"linearizedBaseContracts":[1805],"name":"ShortStrings","nameLocation":"1263:12:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1598,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:10","nodeType":"VariableDeclaration","scope":1805,"src":"1345:111:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1602,"name":"StringTooLong","nameLocation":"1469:13:10","nodeType":"ErrorDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"str","nameLocation":"1490:3:10","nodeType":"VariableDeclaration","scope":1602,"src":"1483:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1599,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:10"},"src":"1463:32:10"},{"errorSelector":"b3512b0c","id":1604,"name":"InvalidShortString","nameLocation":"1506:18:10","nodeType":"ErrorDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"1524:2:10"},"src":"1500:27:10"},{"body":{"id":1647,"nodeType":"Block","src":"1786:208:10","statements":[{"assignments":[1614],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:10","nodeType":"VariableDeclaration","scope":1647,"src":"1796:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1613,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1619,"initialValue":{"arguments":[{"id":1617,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1822:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1615,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:10","typeDescriptions":{}}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1620,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1840:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:10","memberName":"length","nodeType":"MemberAccess","src":"1840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1629,"nodeType":"IfStatement","src":"1836:72:10","trueBody":{"id":1628,"nodeType":"Block","src":"1858:50:10","statements":[{"errorCall":{"arguments":[{"id":1625,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1893:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1624,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1879:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"RevertStatement","src":"1872:25:10"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1638,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1965:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:10","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:10","typeDescriptions":{}}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1641,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"1974:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:10","memberName":"length","nodeType":"MemberAccess","src":"1974:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:10","typeDescriptions":{}}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1630,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1924:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"type(ShortString)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"functionReturnParameters":1612,"id":1646,"nodeType":"Return","src":"1917:70:10"}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1533:170:10","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:10","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"str","nameLocation":"1745:3:10","nodeType":"VariableDeclaration","scope":1648,"src":"1731:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1606,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:10"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1648,"src":"1773:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":1610,"nodeType":"UserDefinedTypeName","pathNode":{"id":1609,"name":"ShortString","nameLocations":["1773:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"1773:11:10"},"referencedDeclaration":1594,"src":"1773:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:10"},"scope":1805,"src":"1708:286:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"2152:304:10","statements":[{"assignments":[1658],"declarations":[{"constant":false,"id":1658,"mutability":"mutable","name":"len","nameLocation":"2170:3:10","nodeType":"VariableDeclaration","scope":1673,"src":"2162:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1662,"initialValue":{"arguments":[{"id":1660,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"2187:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}],"id":1659,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1594_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:10"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"str","nameLocation":"2294:3:10","nodeType":"VariableDeclaration","scope":1673,"src":"2280:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1663,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1669,"initialValue":{"arguments":[{"hexValue":"3332","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1665,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:10"},{"AST":{"nativeSrc":"2349:81:10","nodeType":"YulBlock","src":"2349:81:10","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:10","nodeType":"YulIdentifier","src":"2370:3:10"},{"name":"len","nativeSrc":"2375:3:10","nodeType":"YulIdentifier","src":"2375:3:10"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:10","nodeType":"YulIdentifier","src":"2363:6:10"},"nativeSrc":"2363:16:10","nodeType":"YulFunctionCall","src":"2363:16:10"},"nativeSrc":"2363:16:10","nodeType":"YulExpressionStatement","src":"2363:16:10"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:10","nodeType":"YulIdentifier","src":"2403:3:10"},{"kind":"number","nativeSrc":"2408:4:10","nodeType":"YulLiteral","src":"2408:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:10","nodeType":"YulIdentifier","src":"2399:3:10"},"nativeSrc":"2399:14:10","nodeType":"YulFunctionCall","src":"2399:14:10"},{"name":"sstr","nativeSrc":"2415:4:10","nodeType":"YulIdentifier","src":"2415:4:10"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:10","nodeType":"YulIdentifier","src":"2392:6:10"},"nativeSrc":"2392:28:10","nodeType":"YulFunctionCall","src":"2392:28:10"},"nativeSrc":"2392:28:10","nodeType":"YulExpressionStatement","src":"2392:28:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1658,"isOffset":false,"isSlot":false,"src":"2375:3:10","valueSize":1},{"declaration":1652,"isOffset":false,"isSlot":false,"src":"2415:4:10","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"2370:3:10","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"2403:3:10","valueSize":1}],"flags":["memory-safe"],"id":1670,"nodeType":"InlineAssembly","src":"2324:106:10"},{"expression":{"id":1671,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2446:3:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1656,"id":1672,"nodeType":"Return","src":"2439:10:10"}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"2000:73:10","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:10","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:10","nodeType":"VariableDeclaration","scope":1674,"src":"2096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":1651,"nodeType":"UserDefinedTypeName","pathNode":{"id":1650,"name":"ShortString","nameLocations":["2096:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2096:11:10"},"referencedDeclaration":1594,"src":"2096:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:10"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1674,"src":"2137:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1654,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:10"},"scope":1805,"src":"2078:378:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"2598:175:10","statements":[{"assignments":[1684],"declarations":[{"constant":false,"id":1684,"mutability":"mutable","name":"result","nameLocation":"2616:6:10","nodeType":"VariableDeclaration","scope":1705,"src":"2608:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1694,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1689,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2652:4:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}],"expression":{"id":1687,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2633:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"type(ShortString)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1594_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:10","typeDescriptions":{}}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2679:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:10","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1702,"nodeType":"IfStatement","src":"2675:69:10","trueBody":{"id":1701,"nodeType":"Block","src":"2692:52:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1698,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2713:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"RevertStatement","src":"2706:27:10"}]}},{"expression":{"id":1703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"2760:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1682,"id":1704,"nodeType":"Return","src":"2753:13:10"}]},"documentation":{"id":1675,"nodeType":"StructuredDocumentation","src":"2462:61:10","text":" @dev Return the length of a `ShortString`."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:10","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:10","nodeType":"VariableDeclaration","scope":1706,"src":"2548:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":1677,"nodeType":"UserDefinedTypeName","pathNode":{"id":1676,"name":"ShortString","nameLocations":["2548:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2548:11:10"},"referencedDeclaration":1594,"src":"2548:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:10"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"2589:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:10"},"scope":1805,"src":"2528:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"2996:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"3016:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1717,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:10","typeDescriptions":{}}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:10","memberName":"length","nodeType":"MemberAccess","src":"3010:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1743,"nodeType":"Block","src":"3094:127:10","statements":[{"expression":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1732,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"3134:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1729,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"3108:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1929_$","typeString":"type(library StorageSlot)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:10","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1906,"src":"3108:25:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1826_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1826_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1825,"src":"3108:38:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"3149:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1737,"nodeType":"ExpressionStatement","src":"3108:46:10"},{"expression":{"arguments":[{"id":1740,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3192:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1738,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"3175:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"type(ShortString)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:10","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:10","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"functionReturnParameters":1716,"id":1742,"nodeType":"Return","src":"3168:42:10"}]},"id":1744,"nodeType":"IfStatement","src":"3006:215:10","trueBody":{"id":1728,"nodeType":"Block","src":"3036:52:10","statements":[{"expression":{"arguments":[{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"3071:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1724,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"3057:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"functionReturnParameters":1716,"id":1727,"nodeType":"Return","src":"3050:27:10"}]}}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"2779:103:10","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:10","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"value","nameLocation":"2936:5:10","nodeType":"VariableDeclaration","scope":1746,"src":"2922:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1708,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"store","nameLocation":"2958:5:10","nodeType":"VariableDeclaration","scope":1746,"src":"2943:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1710,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:10"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"2983:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":1714,"nodeType":"UserDefinedTypeName","pathNode":{"id":1713,"name":"ShortString","nameLocations":["2983:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2983:11:10"},"referencedDeclaration":1594,"src":"2983:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:10"},"scope":1805,"src":"2887:340:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"3477:158:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3510:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}],"expression":{"id":1757,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"3491:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"type(ShortString)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1594_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1761,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"3520:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1770,"nodeType":"Block","src":"3592:37:10","statements":[{"expression":{"id":1768,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3613:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1756,"id":1769,"nodeType":"Return","src":"3606:12:10"}]},"id":1771,"nodeType":"IfStatement","src":"3487:142:10","trueBody":{"id":1767,"nodeType":"Block","src":"3539:47:10","statements":[{"expression":{"arguments":[{"id":1764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3569:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}],"id":1763,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"3560:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1594_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1756,"id":1766,"nodeType":"Return","src":"3553:22:10"}]}}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"3233:130:10","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:10","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"value","nameLocation":"3410:5:10","nodeType":"VariableDeclaration","scope":1773,"src":"3398:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":1749,"nodeType":"UserDefinedTypeName","pathNode":{"id":1748,"name":"ShortString","nameLocations":["3398:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"3398:11:10"},"referencedDeclaration":1594,"src":"3398:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"store","nameLocation":"3432:5:10","nodeType":"VariableDeclaration","scope":1773,"src":"3417:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1751,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:10"},"returnParameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1773,"src":"3462:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1754,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:10"},"scope":1805,"src":"3368:267:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1803,"nodeType":"Block","src":"4125:174:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"4158:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}],"expression":{"id":1784,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"4139:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"type(ShortString)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:10","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:10","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1594_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1788,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"4168:17:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1801,"nodeType":"Block","src":"4242:51:10","statements":[{"expression":{"expression":{"arguments":[{"id":1797,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"4269:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1795,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:10","typeDescriptions":{}}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:10","memberName":"length","nodeType":"MemberAccess","src":"4263:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1783,"id":1800,"nodeType":"Return","src":"4256:26:10"}]},"id":1802,"nodeType":"IfStatement","src":"4135:158:10","trueBody":{"id":1794,"nodeType":"Block","src":"4187:49:10","statements":[{"expression":{"arguments":[{"id":1791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"4219:5:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}],"id":1790,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4208:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1594_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1783,"id":1793,"nodeType":"Return","src":"4201:24:10"}]}}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"3641:374:10","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:10","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"value","nameLocation":"4064:5:10","nodeType":"VariableDeclaration","scope":1804,"src":"4052:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":1776,"nodeType":"UserDefinedTypeName","pathNode":{"id":1775,"name":"ShortString","nameLocations":["4052:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"4052:11:10"},"referencedDeclaration":1594,"src":"4052:11:10","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"store","nameLocation":"4086:5:10","nodeType":"VariableDeclaration","scope":1804,"src":"4071:20:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1778,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:10"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1804,"src":"4116:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:10"},"scope":1805,"src":"4020:279:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1806,"src":"1255:3046:10","usedErrors":[1602,1604],"usedEvents":[]}],"src":"106:4196:10"},"id":10},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1929]},"id":1930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1807,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"219:1187:11","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1929,"linearizedBaseContracts":[1929],"name":"StorageSlot","nameLocation":"1415:11:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1811,"members":[{"constant":false,"id":1810,"mutability":"mutable","name":"value","nameLocation":"1470:5:11","nodeType":"VariableDeclaration","scope":1811,"src":"1462:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:11","nodeType":"StructDefinition","scope":1929,"src":"1433:49:11","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1814,"members":[{"constant":false,"id":1813,"mutability":"mutable","name":"value","nameLocation":"1522:5:11","nodeType":"VariableDeclaration","scope":1814,"src":"1517:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1812,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:11","nodeType":"StructDefinition","scope":1929,"src":"1488:46:11","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1817,"members":[{"constant":false,"id":1816,"mutability":"mutable","name":"value","nameLocation":"1577:5:11","nodeType":"VariableDeclaration","scope":1817,"src":"1569:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:11","nodeType":"StructDefinition","scope":1929,"src":"1540:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1820,"members":[{"constant":false,"id":1819,"mutability":"mutable","name":"value","nameLocation":"1632:5:11","nodeType":"VariableDeclaration","scope":1820,"src":"1624:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:11","nodeType":"StructDefinition","scope":1929,"src":"1595:49:11","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1823,"members":[{"constant":false,"id":1822,"mutability":"mutable","name":"value","nameLocation":"1685:5:11","nodeType":"VariableDeclaration","scope":1823,"src":"1678:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1821,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:11","nodeType":"StructDefinition","scope":1929,"src":"1650:47:11","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1826,"members":[{"constant":false,"id":1825,"mutability":"mutable","name":"value","nameLocation":"1738:5:11","nodeType":"VariableDeclaration","scope":1826,"src":"1731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1824,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:11","nodeType":"StructDefinition","scope":1929,"src":"1703:47:11","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1829,"members":[{"constant":false,"id":1828,"mutability":"mutable","name":"value","nameLocation":"1789:5:11","nodeType":"VariableDeclaration","scope":1829,"src":"1783:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:11","nodeType":"StructDefinition","scope":1929,"src":"1756:45:11","visibility":"public"},{"body":{"id":1839,"nodeType":"Block","src":"1983:79:11","statements":[{"AST":{"nativeSrc":"2018:38:11","nodeType":"YulBlock","src":"2018:38:11","statements":[{"nativeSrc":"2032:14:11","nodeType":"YulAssignment","src":"2032:14:11","value":{"name":"slot","nativeSrc":"2042:4:11","nodeType":"YulIdentifier","src":"2042:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:11","nodeType":"YulIdentifier","src":"2032:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1836,"isOffset":false,"isSlot":true,"src":"2032:6:11","suffix":"slot","valueSize":1},{"declaration":1832,"isOffset":false,"isSlot":false,"src":"2042:4:11","valueSize":1}],"flags":["memory-safe"],"id":1838,"nodeType":"InlineAssembly","src":"1993:63:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"1807:87:11","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:11","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"slot","nameLocation":"1931:4:11","nodeType":"VariableDeclaration","scope":1840,"src":"1923:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:11"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"r","nameLocation":"1980:1:11","nodeType":"VariableDeclaration","scope":1840,"src":"1960:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1811_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"AddressSlot","nameLocations":["1960:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1811,"src":"1960:11:11"},"referencedDeclaration":1811,"src":"1960:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1811_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:11"},"scope":1929,"src":"1899:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1850,"nodeType":"Block","src":"2243:79:11","statements":[{"AST":{"nativeSrc":"2278:38:11","nodeType":"YulBlock","src":"2278:38:11","statements":[{"nativeSrc":"2292:14:11","nodeType":"YulAssignment","src":"2292:14:11","value":{"name":"slot","nativeSrc":"2302:4:11","nodeType":"YulIdentifier","src":"2302:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:11","nodeType":"YulIdentifier","src":"2292:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1847,"isOffset":false,"isSlot":true,"src":"2292:6:11","suffix":"slot","valueSize":1},{"declaration":1843,"isOffset":false,"isSlot":false,"src":"2302:4:11","valueSize":1}],"flags":["memory-safe"],"id":1849,"nodeType":"InlineAssembly","src":"2253:63:11"}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"2068:86:11","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:11","nodeType":"FunctionDefinition","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"slot","nameLocation":"2191:4:11","nodeType":"VariableDeclaration","scope":1851,"src":"2183:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1842,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:11"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"r","nameLocation":"2240:1:11","nodeType":"VariableDeclaration","scope":1851,"src":"2220:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1814_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1846,"nodeType":"UserDefinedTypeName","pathNode":{"id":1845,"name":"BooleanSlot","nameLocations":["2220:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1814,"src":"2220:11:11"},"referencedDeclaration":1814,"src":"2220:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1814_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:11"},"scope":1929,"src":"2159:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"2503:79:11","statements":[{"AST":{"nativeSrc":"2538:38:11","nodeType":"YulBlock","src":"2538:38:11","statements":[{"nativeSrc":"2552:14:11","nodeType":"YulAssignment","src":"2552:14:11","value":{"name":"slot","nativeSrc":"2562:4:11","nodeType":"YulIdentifier","src":"2562:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:11","nodeType":"YulIdentifier","src":"2552:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1858,"isOffset":false,"isSlot":true,"src":"2552:6:11","suffix":"slot","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"2562:4:11","valueSize":1}],"flags":["memory-safe"],"id":1860,"nodeType":"InlineAssembly","src":"2513:63:11"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"2328:86:11","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:11","nodeType":"FunctionDefinition","parameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"slot","nameLocation":"2451:4:11","nodeType":"VariableDeclaration","scope":1862,"src":"2443:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:11"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"r","nameLocation":"2500:1:11","nodeType":"VariableDeclaration","scope":1862,"src":"2480:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1817_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1857,"nodeType":"UserDefinedTypeName","pathNode":{"id":1856,"name":"Bytes32Slot","nameLocations":["2480:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1817,"src":"2480:11:11"},"referencedDeclaration":1817,"src":"2480:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1817_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:11"},"scope":1929,"src":"2419:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"2763:79:11","statements":[{"AST":{"nativeSrc":"2798:38:11","nodeType":"YulBlock","src":"2798:38:11","statements":[{"nativeSrc":"2812:14:11","nodeType":"YulAssignment","src":"2812:14:11","value":{"name":"slot","nativeSrc":"2822:4:11","nodeType":"YulIdentifier","src":"2822:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:11","nodeType":"YulIdentifier","src":"2812:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1869,"isOffset":false,"isSlot":true,"src":"2812:6:11","suffix":"slot","valueSize":1},{"declaration":1865,"isOffset":false,"isSlot":false,"src":"2822:4:11","valueSize":1}],"flags":["memory-safe"],"id":1871,"nodeType":"InlineAssembly","src":"2773:63:11"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"2588:86:11","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:11","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"slot","nameLocation":"2711:4:11","nodeType":"VariableDeclaration","scope":1873,"src":"2703:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:11"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"r","nameLocation":"2760:1:11","nodeType":"VariableDeclaration","scope":1873,"src":"2740:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1820_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1868,"nodeType":"UserDefinedTypeName","pathNode":{"id":1867,"name":"Uint256Slot","nameLocations":["2740:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1820,"src":"2740:11:11"},"referencedDeclaration":1820,"src":"2740:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1820_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:11"},"scope":1929,"src":"2679:163:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1883,"nodeType":"Block","src":"3020:79:11","statements":[{"AST":{"nativeSrc":"3055:38:11","nodeType":"YulBlock","src":"3055:38:11","statements":[{"nativeSrc":"3069:14:11","nodeType":"YulAssignment","src":"3069:14:11","value":{"name":"slot","nativeSrc":"3079:4:11","nodeType":"YulIdentifier","src":"3079:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:11","nodeType":"YulIdentifier","src":"3069:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1880,"isOffset":false,"isSlot":true,"src":"3069:6:11","suffix":"slot","valueSize":1},{"declaration":1876,"isOffset":false,"isSlot":false,"src":"3079:4:11","valueSize":1}],"flags":["memory-safe"],"id":1882,"nodeType":"InlineAssembly","src":"3030:63:11"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"2848:85:11","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:11","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"slot","nameLocation":"2969:4:11","nodeType":"VariableDeclaration","scope":1884,"src":"2961:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:11"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"r","nameLocation":"3017:1:11","nodeType":"VariableDeclaration","scope":1884,"src":"2998:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1823_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1879,"nodeType":"UserDefinedTypeName","pathNode":{"id":1878,"name":"Int256Slot","nameLocations":["2998:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"2998:10:11"},"referencedDeclaration":1823,"src":"2998:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1823_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:11"},"scope":1929,"src":"2938:161:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1894,"nodeType":"Block","src":"3277:79:11","statements":[{"AST":{"nativeSrc":"3312:38:11","nodeType":"YulBlock","src":"3312:38:11","statements":[{"nativeSrc":"3326:14:11","nodeType":"YulAssignment","src":"3326:14:11","value":{"name":"slot","nativeSrc":"3336:4:11","nodeType":"YulIdentifier","src":"3336:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:11","nodeType":"YulIdentifier","src":"3326:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1891,"isOffset":false,"isSlot":true,"src":"3326:6:11","suffix":"slot","valueSize":1},{"declaration":1887,"isOffset":false,"isSlot":false,"src":"3336:4:11","valueSize":1}],"flags":["memory-safe"],"id":1893,"nodeType":"InlineAssembly","src":"3287:63:11"}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"3105:85:11","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1895,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:11","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"slot","nameLocation":"3226:4:11","nodeType":"VariableDeclaration","scope":1895,"src":"3218:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:11"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"r","nameLocation":"3274:1:11","nodeType":"VariableDeclaration","scope":1895,"src":"3255:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1826_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1890,"nodeType":"UserDefinedTypeName","pathNode":{"id":1889,"name":"StringSlot","nameLocations":["3255:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1826,"src":"3255:10:11"},"referencedDeclaration":1826,"src":"3255:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1826_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:11"},"scope":1929,"src":"3195:161:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"3558:85:11","statements":[{"AST":{"nativeSrc":"3593:44:11","nodeType":"YulBlock","src":"3593:44:11","statements":[{"nativeSrc":"3607:20:11","nodeType":"YulAssignment","src":"3607:20:11","value":{"name":"store.slot","nativeSrc":"3617:10:11","nodeType":"YulIdentifier","src":"3617:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:11","nodeType":"YulIdentifier","src":"3607:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1902,"isOffset":false,"isSlot":true,"src":"3607:6:11","suffix":"slot","valueSize":1},{"declaration":1898,"isOffset":false,"isSlot":true,"src":"3617:10:11","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1904,"nodeType":"InlineAssembly","src":"3568:69:11"}]},"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"3362:101:11","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:11","nodeType":"FunctionDefinition","parameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"store","nameLocation":"3506:5:11","nodeType":"VariableDeclaration","scope":1906,"src":"3491:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1897,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:11"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"r","nameLocation":"3555:1:11","nodeType":"VariableDeclaration","scope":1906,"src":"3536:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1826_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1901,"nodeType":"UserDefinedTypeName","pathNode":{"id":1900,"name":"StringSlot","nameLocations":["3536:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1826,"src":"3536:10:11"},"referencedDeclaration":1826,"src":"3536:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1826_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:11"},"scope":1929,"src":"3468:175:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1916,"nodeType":"Block","src":"3818:79:11","statements":[{"AST":{"nativeSrc":"3853:38:11","nodeType":"YulBlock","src":"3853:38:11","statements":[{"nativeSrc":"3867:14:11","nodeType":"YulAssignment","src":"3867:14:11","value":{"name":"slot","nativeSrc":"3877:4:11","nodeType":"YulIdentifier","src":"3877:4:11"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:11","nodeType":"YulIdentifier","src":"3867:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1913,"isOffset":false,"isSlot":true,"src":"3867:6:11","suffix":"slot","valueSize":1},{"declaration":1909,"isOffset":false,"isSlot":false,"src":"3877:4:11","valueSize":1}],"flags":["memory-safe"],"id":1915,"nodeType":"InlineAssembly","src":"3828:63:11"}]},"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"3649:84:11","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:11","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"slot","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1917,"src":"3760:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:11"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"r","nameLocation":"3815:1:11","nodeType":"VariableDeclaration","scope":1917,"src":"3797:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1829_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1912,"nodeType":"UserDefinedTypeName","pathNode":{"id":1911,"name":"BytesSlot","nameLocations":["3797:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1829,"src":"3797:9:11"},"referencedDeclaration":1829,"src":"3797:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1829_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:11"},"scope":1929,"src":"3738:159:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"4094:85:11","statements":[{"AST":{"nativeSrc":"4129:44:11","nodeType":"YulBlock","src":"4129:44:11","statements":[{"nativeSrc":"4143:20:11","nodeType":"YulAssignment","src":"4143:20:11","value":{"name":"store.slot","nativeSrc":"4153:10:11","nodeType":"YulIdentifier","src":"4153:10:11"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:11","nodeType":"YulIdentifier","src":"4143:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1924,"isOffset":false,"isSlot":true,"src":"4143:6:11","suffix":"slot","valueSize":1},{"declaration":1920,"isOffset":false,"isSlot":true,"src":"4153:10:11","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1926,"nodeType":"InlineAssembly","src":"4104:69:11"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"3903:99:11","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:11","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"store","nameLocation":"4043:5:11","nodeType":"VariableDeclaration","scope":1928,"src":"4029:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1919,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:11"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"r","nameLocation":"4091:1:11","nodeType":"VariableDeclaration","scope":1928,"src":"4073:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1829_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1923,"nodeType":"UserDefinedTypeName","pathNode":{"id":1922,"name":"BytesSlot","nameLocations":["4073:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":1829,"src":"4073:9:11"},"referencedDeclaration":1829,"src":"4073:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1829_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:11"},"scope":1929,"src":"4007:172:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1930,"src":"1407:2774:11","usedErrors":[],"usedEvents":[]}],"src":"193:3989:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5649],"SafeCast":[7414],"SignedMath":[7558],"Strings":[3331]},"id":3332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1931,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1933,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3332,"sourceUnit":5650,"src":"127:37:12","symbolAliases":[{"foreign":{"id":1932,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"135:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1935,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3332,"sourceUnit":7415,"src":"165:45:12","symbolAliases":[{"foreign":{"id":1934,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3332,"sourceUnit":7559,"src":"211:49:12","symbolAliases":[{"foreign":{"id":1936,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"219:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"262:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":3331,"linearizedBaseContracts":[3331],"name":"Strings","nameLocation":"305:7:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1940,"libraryName":{"id":1939,"name":"SafeCast","nameLocations":["325:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":7414,"src":"325:8:12"},"nodeType":"UsingForDirective","src":"319:21:12"},{"constant":true,"id":1943,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:12","nodeType":"VariableDeclaration","scope":3331,"src":"346:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1941,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1946,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:12","nodeType":"VariableDeclaration","scope":3331,"src":"408:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1944,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1982,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:12","nodeType":"VariableDeclaration","scope":3331,"src":"456:302:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:12","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:12","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:12","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:12","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:12","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:12","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:12","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:12","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:12","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:12","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:12","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:12","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:12","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:12","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:12","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:12","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:12","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1983,"nodeType":"StructuredDocumentation","src":"778:81:12","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1989,"name":"StringsInsufficientHexLength","nameLocation":"870:28:12","nodeType":"ErrorDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"value","nameLocation":"907:5:12","nodeType":"VariableDeclaration","scope":1989,"src":"899:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1984,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1987,"mutability":"mutable","name":"length","nameLocation":"922:6:12","nodeType":"VariableDeclaration","scope":1989,"src":"914:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1986,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:12"},"src":"864:66:12"},{"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"936:108:12","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1992,"name":"StringsInvalidChar","nameLocation":"1055:18:12","nodeType":"ErrorDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[],"src":"1073:2:12"},"src":"1049:27:12"},{"documentation":{"id":1993,"nodeType":"StructuredDocumentation","src":"1082:84:12","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1995,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:12","nodeType":"ErrorDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"1204:2:12"},"src":"1171:36:12"},{"body":{"id":2042,"nodeType":"Block","src":"1379:563:12","statements":[{"id":2041,"nodeType":"UncheckedBlock","src":"1389:547:12","statements":[{"assignments":[2004],"declarations":[{"constant":false,"id":2004,"mutability":"mutable","name":"length","nameLocation":"1421:6:12","nodeType":"VariableDeclaration","scope":2041,"src":"1413:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2011,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"1441:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2005,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"1430:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5649_$","typeString":"type(library Math)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5481,"src":"1430:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:12"},{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:12","nodeType":"VariableDeclaration","scope":2041,"src":"1465:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2012,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2018,"initialValue":{"arguments":[{"id":2016,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"1499:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2014,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:12"},{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:12","nodeType":"VariableDeclaration","scope":2041,"src":"1520:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2021,"nodeType":"VariableDeclarationStatement","src":"1520:11:12"},{"AST":{"nativeSrc":"1570:69:12","nodeType":"YulBlock","src":"1570:69:12","statements":[{"nativeSrc":"1588:37:12","nodeType":"YulAssignment","src":"1588:37:12","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:12","nodeType":"YulIdentifier","src":"1603:6:12"},{"kind":"number","nativeSrc":"1611:4:12","nodeType":"YulLiteral","src":"1611:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:12","nodeType":"YulIdentifier","src":"1599:3:12"},"nativeSrc":"1599:17:12","nodeType":"YulFunctionCall","src":"1599:17:12"},{"name":"length","nativeSrc":"1618:6:12","nodeType":"YulIdentifier","src":"1618:6:12"}],"functionName":{"name":"add","nativeSrc":"1595:3:12","nodeType":"YulIdentifier","src":"1595:3:12"},"nativeSrc":"1595:30:12","nodeType":"YulFunctionCall","src":"1595:30:12"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:12","nodeType":"YulIdentifier","src":"1588:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2013,"isOffset":false,"isSlot":false,"src":"1603:6:12","valueSize":1},{"declaration":2004,"isOffset":false,"isSlot":false,"src":"1618:6:12","valueSize":1},{"declaration":2020,"isOffset":false,"isSlot":false,"src":"1588:3:12","valueSize":1}],"flags":["memory-safe"],"id":2022,"nodeType":"InlineAssembly","src":"1545:94:12"},{"body":{"id":2037,"nodeType":"Block","src":"1665:234:12","statements":[{"expression":{"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:12","subExpression":{"id":2024,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"1683:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2026,"nodeType":"ExpressionStatement","src":"1683:5:12"},{"AST":{"nativeSrc":"1731:86:12","nodeType":"YulBlock","src":"1731:86:12","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:12","nodeType":"YulIdentifier","src":"1761:3:12"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:12","nodeType":"YulIdentifier","src":"1775:5:12"},{"kind":"number","nativeSrc":"1782:2:12","nodeType":"YulLiteral","src":"1782:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:12","nodeType":"YulIdentifier","src":"1771:3:12"},"nativeSrc":"1771:14:12","nodeType":"YulFunctionCall","src":"1771:14:12"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:12","nodeType":"YulIdentifier","src":"1787:10:12"}],"functionName":{"name":"byte","nativeSrc":"1766:4:12","nodeType":"YulIdentifier","src":"1766:4:12"},"nativeSrc":"1766:32:12","nodeType":"YulFunctionCall","src":"1766:32:12"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:12","nodeType":"YulIdentifier","src":"1753:7:12"},"nativeSrc":"1753:46:12","nodeType":"YulFunctionCall","src":"1753:46:12"},"nativeSrc":"1753:46:12","nodeType":"YulExpressionStatement","src":"1753:46:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":1943,"isOffset":false,"isSlot":false,"src":"1787:10:12","valueSize":1},{"declaration":2020,"isOffset":false,"isSlot":false,"src":"1761:3:12","valueSize":1},{"declaration":1998,"isOffset":false,"isSlot":false,"src":"1775:5:12","valueSize":1}],"flags":["memory-safe"],"id":2027,"nodeType":"InlineAssembly","src":"1706:111:12"},{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"1834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2031,"nodeType":"ExpressionStatement","src":"1834:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"1867:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2036,"nodeType":"IfStatement","src":"1863:21:12","trueBody":{"id":2035,"nodeType":"Break","src":"1879:5:12"}}]},"condition":{"hexValue":"74727565","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2038,"nodeType":"WhileStatement","src":"1652:247:12"},{"expression":{"id":2039,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"1919:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2002,"id":2040,"nodeType":"Return","src":"1912:13:12"}]}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"1213:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2043,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:12","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"value","nameLocation":"1334:5:12","nodeType":"VariableDeclaration","scope":2043,"src":"1326:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:12"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"1364:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2000,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:12"},"scope":3331,"src":"1308:634:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"2118:92:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"2149:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:12","trueExpression":{"hexValue":"2d","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"2195:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2061,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"2180:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7558_$","typeString":"type(library SignedMath)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7557,"src":"2180:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2060,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2171:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2051,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:12","typeDescriptions":{}}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:12","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:12","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2050,"id":2067,"nodeType":"Return","src":"2128:75:12"}]},"documentation":{"id":2044,"nodeType":"StructuredDocumentation","src":"1948:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:12","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"2073:5:12","nodeType":"VariableDeclaration","scope":2069,"src":"2066:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2045,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:12"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"2103:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2048,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:12"},"scope":3331,"src":"2042:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2088,"nodeType":"Block","src":"2389:100:12","statements":[{"id":2087,"nodeType":"UncheckedBlock","src":"2399:84:12","statements":[{"expression":{"arguments":[{"id":2078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2442:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"2461:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2079,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"2449:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5649_$","typeString":"type(library Math)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5592,"src":"2449:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2077,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2089,2172,2192],"referencedDeclaration":2172,"src":"2430:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2076,"id":2086,"nodeType":"Return","src":"2423:49:12"}]}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"2216:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2089,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:12","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"value","nameLocation":"2344:5:12","nodeType":"VariableDeclaration","scope":2089,"src":"2336:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:12"},"returnParameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2089,"src":"2374:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2074,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:12"},"scope":3331,"src":"2315:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2702:435:12","statements":[{"assignments":[2100],"declarations":[{"constant":false,"id":2100,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:12","nodeType":"VariableDeclaration","scope":2171,"src":"2712:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2102,"initialValue":{"id":2101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"2733:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:12"},{"assignments":[2104],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:12","nodeType":"VariableDeclaration","scope":2171,"src":"2748:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2103,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2113,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2108,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"2784:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2105,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:12"},{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2114,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"2805:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2116,"indexExpression":{"hexValue":"30","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2119,"nodeType":"ExpressionStatement","src":"2805:15:12"},{"expression":{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2120,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"2830:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2122,"indexExpression":{"hexValue":"31","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2125,"nodeType":"ExpressionStatement","src":"2830:15:12"},{"body":{"id":2154,"nodeType":"Block","src":"2900:95:12","statements":[{"expression":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2140,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"2914:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2142,"indexExpression":{"id":2141,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2921:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2143,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"2926:10:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2147,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2937:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2149,"nodeType":"ExpressionStatement","src":"2914:40:12"},{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2150,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"2968:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"2968:16:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"initializationExpression":{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"i","nameLocation":"2868:1:12","nodeType":"VariableDeclaration","scope":2155,"src":"2860:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2133,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2129,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"2876:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:12","subExpression":{"id":2137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2897:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2139,"nodeType":"ExpressionStatement","src":"2895:3:12"},"nodeType":"ForStatement","src":"2855:140:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"3008:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2165,"nodeType":"IfStatement","src":"3004:96:12","trueBody":{"id":2164,"nodeType":"Block","src":"3025:75:12","statements":[{"errorCall":{"arguments":[{"id":2160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"3075:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2161,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"3082:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2159,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3046:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2163,"nodeType":"RevertStatement","src":"3039:50:12"}]}},{"expression":{"arguments":[{"id":2168,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"3123:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2166,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:12","typeDescriptions":{}}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2098,"id":2170,"nodeType":"Return","src":"3109:21:12"}]},"documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"2495:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:12","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"value","nameLocation":"2641:5:12","nodeType":"VariableDeclaration","scope":2172,"src":"2633:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"length","nameLocation":"2656:6:12","nodeType":"VariableDeclaration","scope":2172,"src":"2648:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:12"},"returnParameters":{"id":2098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2172,"src":"2687:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2096,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:12"},"scope":3331,"src":"2612:525:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"3369:75:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2185,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"3414:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2183,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:12","typeDescriptions":{}}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:12","typeDescriptions":{}}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2188,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"3422:14:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2180,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2089,2172,2192],"referencedDeclaration":2172,"src":"3386:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2179,"id":2190,"nodeType":"Return","src":"3379:58:12"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"3143:148:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:12","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"addr","nameLocation":"3325:4:12","nodeType":"VariableDeclaration","scope":2192,"src":"3317:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:12"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"3354:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2177,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:12"},"scope":3331,"src":"3296:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2256,"nodeType":"Block","src":"3701:642:12","statements":[{"assignments":[2201],"declarations":[{"constant":false,"id":2201,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:12","nodeType":"VariableDeclaration","scope":2256,"src":"3711:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2208,"initialValue":{"arguments":[{"arguments":[{"id":2205,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"3751:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2204,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2089,2172,2192],"referencedDeclaration":2192,"src":"3739:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:12","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:12"},{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:12","nodeType":"VariableDeclaration","scope":2256,"src":"3842:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2211,"nodeType":"VariableDeclarationStatement","src":"3842:17:12"},{"AST":{"nativeSrc":"3894:78:12","nodeType":"YulBlock","src":"3894:78:12","statements":[{"nativeSrc":"3908:54:12","nodeType":"YulAssignment","src":"3908:54:12","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:12","nodeType":"YulLiteral","src":"3925:2:12","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:12","nodeType":"YulIdentifier","src":"3943:6:12"},{"kind":"number","nativeSrc":"3951:4:12","nodeType":"YulLiteral","src":"3951:4:12","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:12","nodeType":"YulIdentifier","src":"3939:3:12"},"nativeSrc":"3939:17:12","nodeType":"YulFunctionCall","src":"3939:17:12"},{"kind":"number","nativeSrc":"3958:2:12","nodeType":"YulLiteral","src":"3958:2:12","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:12","nodeType":"YulIdentifier","src":"3929:9:12"},"nativeSrc":"3929:32:12","nodeType":"YulFunctionCall","src":"3929:32:12"}],"functionName":{"name":"shr","nativeSrc":"3921:3:12","nodeType":"YulIdentifier","src":"3921:3:12"},"nativeSrc":"3921:41:12","nodeType":"YulFunctionCall","src":"3921:41:12"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:12","nodeType":"YulIdentifier","src":"3908:9:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":false,"src":"3943:6:12","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"3908:9:12","valueSize":1}],"flags":["memory-safe"],"id":2212,"nodeType":"InlineAssembly","src":"3869:103:12"},{"body":{"id":2249,"nodeType":"Block","src":"4015:291:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4121:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2230,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"4150:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2232,"indexExpression":{"id":2231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4157:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2228,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:12","typeDescriptions":{}}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2244,"nodeType":"IfStatement","src":"4117:150:12","trueBody":{"id":2243,"nodeType":"Block","src":"4167:100:12","statements":[{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2237,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"4235:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2239,"indexExpression":{"id":2238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4242:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2242,"nodeType":"ExpressionStatement","src":"4235:17:12"}]}},{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2245,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"4280:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"nodeType":"ExpressionStatement","src":"4280:15:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4003:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2250,"initializationExpression":{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"i","nameLocation":"3995:1:12","nodeType":"VariableDeclaration","scope":2250,"src":"3987:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2216,"initialValue":{"hexValue":"3431","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:12","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:12","subExpression":{"id":2220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4012:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"4010:3:12"},"nodeType":"ForStatement","src":"3982:324:12"},{"expression":{"arguments":[{"id":2253,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"4329:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2251,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:12","typeDescriptions":{}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2199,"id":2255,"nodeType":"Return","src":"4315:21:12"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"3450:165:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2257,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:12","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"addr","nameLocation":"3657:4:12","nodeType":"VariableDeclaration","scope":2257,"src":"3649:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:12"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2257,"src":"3686:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2197,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:12"},"scope":3331,"src":"3620:723:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2293,"nodeType":"Block","src":"4498:104:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"4521:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:12","typeDescriptions":{}}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:12","memberName":"length","nodeType":"MemberAccess","src":"4515:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"4540:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2272,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:12","typeDescriptions":{}}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:12","memberName":"length","nodeType":"MemberAccess","src":"4534:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"4569:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2279,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:12","typeDescriptions":{}}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2278,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"4592:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:12","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2266,"id":2292,"nodeType":"Return","src":"4508:87:12"}]},"documentation":{"id":2258,"nodeType":"StructuredDocumentation","src":"4349:66:12","text":" @dev Returns true if the two strings are equal."},"id":2294,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:12","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"a","nameLocation":"4449:1:12","nodeType":"VariableDeclaration","scope":2294,"src":"4435:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2259,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"b","nameLocation":"4466:1:12","nodeType":"VariableDeclaration","scope":2294,"src":"4452:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2261,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:12"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2294,"src":"4492:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2264,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:12"},"scope":3331,"src":"4420:182:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"4899:64:12","statements":[{"expression":{"arguments":[{"id":2303,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"4926:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2307,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"4942:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2305,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:12","typeDescriptions":{}}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:12","memberName":"length","nodeType":"MemberAccess","src":"4936:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2302,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2313,2344],"referencedDeclaration":2344,"src":"4916:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2301,"id":2311,"nodeType":"Return","src":"4909:47:12"}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"4608:214:12","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:12","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"input","nameLocation":"4860:5:12","nodeType":"VariableDeclaration","scope":2313,"src":"4846:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2296,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:12"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"4890:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:12"},"scope":3331,"src":"4827:136:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"5368:153:12","statements":[{"assignments":[2326,2328],"declarations":[{"constant":false,"id":2326,"mutability":"mutable","name":"success","nameLocation":"5384:7:12","nodeType":"VariableDeclaration","scope":2343,"src":"5379:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2325,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"value","nameLocation":"5401:5:12","nodeType":"VariableDeclaration","scope":2343,"src":"5393:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2334,"initialValue":{"arguments":[{"id":2330,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5423:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2331,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5430:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2332,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"5437:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2329,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2365,2402],"referencedDeclaration":2402,"src":"5410:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:12"},{"condition":{"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:12","subExpression":{"id":2335,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"5456:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2340,"nodeType":"IfStatement","src":"5451:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2337,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5472:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2339,"nodeType":"RevertStatement","src":"5465:27:12"}},{"expression":{"id":2341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5509:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2324,"id":2342,"nodeType":"Return","src":"5502:12:12"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"4969:294:12","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:12","nodeType":"FunctionDefinition","parameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"input","nameLocation":"5301:5:12","nodeType":"VariableDeclaration","scope":2344,"src":"5287:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2315,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"begin","nameLocation":"5316:5:12","nodeType":"VariableDeclaration","scope":2344,"src":"5308:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"end","nameLocation":"5331:3:12","nodeType":"VariableDeclaration","scope":2344,"src":"5323:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2319,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:12"},"returnParameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"5359:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2322,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:12"},"scope":3331,"src":"5268:253:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"5842:83:12","statements":[{"expression":{"arguments":[{"id":2355,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"5888:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2359,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"5904:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2357,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:12","typeDescriptions":{}}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:12","memberName":"length","nodeType":"MemberAccess","src":"5898:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"5859:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2353,"id":2363,"nodeType":"Return","src":"5852:66:12"}]},"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"5527:215:12","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:12","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"input","nameLocation":"5783:5:12","nodeType":"VariableDeclaration","scope":2365,"src":"5769:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2346,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:12"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"success","nameLocation":"5818:7:12","nodeType":"VariableDeclaration","scope":2365,"src":"5813:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2349,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"value","nameLocation":"5835:5:12","nodeType":"VariableDeclaration","scope":2365,"src":"5827:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:12"},"scope":3331,"src":"5747:178:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2401,"nodeType":"Block","src":"6327:144:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"6341:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2382,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"6353:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:12","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:12","memberName":"length","nodeType":"MemberAccess","src":"6347:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"6370:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2387,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"6378:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2394,"nodeType":"IfStatement","src":"6337:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2378,"id":2393,"nodeType":"Return","src":"6383:17:12"}},{"expression":{"arguments":[{"id":2396,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"6446:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2397,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"6453:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2398,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"6460:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2395,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"6417:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2378,"id":2400,"nodeType":"Return","src":"6410:54:12"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"5931:238:12","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2402,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:12","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"input","nameLocation":"6219:5:12","nodeType":"VariableDeclaration","scope":2402,"src":"6205:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"begin","nameLocation":"6242:5:12","nodeType":"VariableDeclaration","scope":2402,"src":"6234:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"end","nameLocation":"6265:3:12","nodeType":"VariableDeclaration","scope":2402,"src":"6257:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:12"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"success","nameLocation":"6303:7:12","nodeType":"VariableDeclaration","scope":2402,"src":"6298:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2374,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"value","nameLocation":"6320:5:12","nodeType":"VariableDeclaration","scope":2402,"src":"6312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:12"},"scope":3331,"src":"6174:297:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2471,"nodeType":"Block","src":"6874:347:12","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:12","nodeType":"VariableDeclaration","scope":2471,"src":"6884:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2416,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2422,"initialValue":{"arguments":[{"id":2420,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"6912:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:12","typeDescriptions":{}}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:12"},{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"result","nameLocation":"6937:6:12","nodeType":"VariableDeclaration","scope":2471,"src":"6929:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2426,"initialValue":{"hexValue":"30","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:12"},{"body":{"id":2465,"nodeType":"Block","src":"6995:189:12","statements":[{"assignments":[2438],"declarations":[{"constant":false,"id":2438,"mutability":"mutable","name":"chr","nameLocation":"7015:3:12","nodeType":"VariableDeclaration","scope":2465,"src":"7009:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2437,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2443,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"7064:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"7072:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2442,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"7041:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2440,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:12","typeDescriptions":{}}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2439,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"7021:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"7094:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2456,"nodeType":"IfStatement","src":"7090:30:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2415,"id":2455,"nodeType":"Return","src":"7103:17:12"}},{"expression":{"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7134:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2460,"nodeType":"ExpressionStatement","src":"7134:12:12"},{"expression":{"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7160:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2462,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"7170:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"nodeType":"ExpressionStatement","src":"7160:13:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"6981:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2432,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"6985:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2466,"initializationExpression":{"assignments":[2428],"declarations":[{"constant":false,"id":2428,"mutability":"mutable","name":"i","nameLocation":"6970:1:12","nodeType":"VariableDeclaration","scope":2466,"src":"6962:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2430,"initialValue":{"id":2429,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"6974:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:12","subExpression":{"id":2434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"6992:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2436,"nodeType":"ExpressionStatement","src":"6990:3:12"},"nodeType":"ForStatement","src":"6957:227:12"},{"expression":{"components":[{"hexValue":"74727565","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7207:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2415,"id":2470,"nodeType":"Return","src":"7193:21:12"}]},"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"6477:224:12","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2472,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:12","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"input","nameLocation":"6767:5:12","nodeType":"VariableDeclaration","scope":2472,"src":"6753:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2404,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"begin","nameLocation":"6790:5:12","nodeType":"VariableDeclaration","scope":2472,"src":"6782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"end","nameLocation":"6813:3:12","nodeType":"VariableDeclaration","scope":2472,"src":"6805:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:12"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"success","nameLocation":"6850:7:12","nodeType":"VariableDeclaration","scope":2472,"src":"6845:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2411,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"value","nameLocation":"6867:5:12","nodeType":"VariableDeclaration","scope":2472,"src":"6859:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:12"},"scope":3331,"src":"6706:515:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2490,"nodeType":"Block","src":"7518:63:12","statements":[{"expression":{"arguments":[{"id":2481,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"7544:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2485,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"7560:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2483,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:12","typeDescriptions":{}}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:12","memberName":"length","nodeType":"MemberAccess","src":"7554:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2491,2522],"referencedDeclaration":2522,"src":"7535:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2479,"id":2489,"nodeType":"Return","src":"7528:46:12"}]},"documentation":{"id":2473,"nodeType":"StructuredDocumentation","src":"7227:216:12","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:12","nodeType":"FunctionDefinition","parameters":{"id":2476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2475,"mutability":"mutable","name":"input","nameLocation":"7480:5:12","nodeType":"VariableDeclaration","scope":2491,"src":"7466:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2474,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:12"},"returnParameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"7510:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2477,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:12"},"scope":3331,"src":"7448:133:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2521,"nodeType":"Block","src":"7986:151:12","statements":[{"assignments":[2504,2506],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"success","nameLocation":"8002:7:12","nodeType":"VariableDeclaration","scope":2521,"src":"7997:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2503,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"value","nameLocation":"8018:5:12","nodeType":"VariableDeclaration","scope":2521,"src":"8011:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2505,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2512,"initialValue":{"arguments":[{"id":2508,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"8039:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2509,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8046:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2510,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"8053:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2507,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2543,2585],"referencedDeclaration":2585,"src":"8027:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:12"},{"condition":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:12","subExpression":{"id":2513,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"8072:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2518,"nodeType":"IfStatement","src":"8067:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2515,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8088:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2517,"nodeType":"RevertStatement","src":"8081:27:12"}},{"expression":{"id":2519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"8125:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2502,"id":2520,"nodeType":"Return","src":"8118:12:12"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"7587:296:12","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2522,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:12","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"input","nameLocation":"7920:5:12","nodeType":"VariableDeclaration","scope":2522,"src":"7906:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2493,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2496,"mutability":"mutable","name":"begin","nameLocation":"7935:5:12","nodeType":"VariableDeclaration","scope":2522,"src":"7927:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"end","nameLocation":"7950:3:12","nodeType":"VariableDeclaration","scope":2522,"src":"7942:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:12"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2522,"src":"7978:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2500,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:12"},"scope":3331,"src":"7888:249:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"8528:82:12","statements":[{"expression":{"arguments":[{"id":2533,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8573:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2537,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8589:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2535,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:12","typeDescriptions":{}}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:12","memberName":"length","nodeType":"MemberAccess","src":"8583:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2532,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"8545:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2531,"id":2541,"nodeType":"Return","src":"8538:65:12"}]},"documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"8143:287:12","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:12","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"input","nameLocation":"8470:5:12","nodeType":"VariableDeclaration","scope":2543,"src":"8456:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2524,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:12"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"success","nameLocation":"8505:7:12","nodeType":"VariableDeclaration","scope":2543,"src":"8500:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"value","nameLocation":"8521:5:12","nodeType":"VariableDeclaration","scope":2543,"src":"8514:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2529,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:12"},"scope":3331,"src":"8435:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2548,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:12","nodeType":"VariableDeclaration","scope":3331,"src":"8616:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2584,"nodeType":"Block","src":"9132:143:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"9146:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2565,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"9158:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2563,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:12","typeDescriptions":{}}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:12","memberName":"length","nodeType":"MemberAccess","src":"9152:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2569,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"9175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2570,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"9183:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2577,"nodeType":"IfStatement","src":"9142:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2561,"id":2576,"nodeType":"Return","src":"9188:17:12"}},{"expression":{"arguments":[{"id":2579,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"9250:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2580,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"9257:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2581,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"9264:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2578,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"9222:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2561,"id":2583,"nodeType":"Return","src":"9215:53:12"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"8673:303:12","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2585,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:12","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"input","nameLocation":"9025:5:12","nodeType":"VariableDeclaration","scope":2585,"src":"9011:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2550,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"begin","nameLocation":"9048:5:12","nodeType":"VariableDeclaration","scope":2585,"src":"9040:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"end","nameLocation":"9071:3:12","nodeType":"VariableDeclaration","scope":2585,"src":"9063:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:12"},"returnParameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"success","nameLocation":"9109:7:12","nodeType":"VariableDeclaration","scope":2585,"src":"9104:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2557,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"value","nameLocation":"9125:5:12","nodeType":"VariableDeclaration","scope":2585,"src":"9118:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2559,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:12"},"scope":3331,"src":"8981:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2705,"nodeType":"Block","src":"9675:812:12","statements":[{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:12","nodeType":"VariableDeclaration","scope":2705,"src":"9685:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2599,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"id":2603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"9713:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:12","typeDescriptions":{}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:12"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"sign","nameLocation":"9783:4:12","nodeType":"VariableDeclaration","scope":2705,"src":"9776:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2606,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2623,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"9790:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2609,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"9799:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2618,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9847:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2619,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"9855:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2617,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"9824:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2615,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:12","typeDescriptions":{}}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:12","trueExpression":{"arguments":[{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2611,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:12","typeDescriptions":{}}},"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:12"},{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:12","nodeType":"VariableDeclaration","scope":2705,"src":"9943:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2624,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2632,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"9963:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2627,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:12","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:12"},{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:12","nodeType":"VariableDeclaration","scope":2705,"src":"9992:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2633,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2641,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"10012:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2636,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:12","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:12"},{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"offset","nameLocation":"10049:6:12","nodeType":"VariableDeclaration","scope":2705,"src":"10041:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2650,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"10059:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2645,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"10075:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"10058:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:12"},{"assignments":[2652,2654],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:12","nodeType":"VariableDeclaration","scope":2705,"src":"10109:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2651,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:12","nodeType":"VariableDeclaration","scope":2705,"src":"10126:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2662,"initialValue":{"arguments":[{"id":2656,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"10159:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"10166:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2658,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"10174:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2660,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"10182:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2365,2402],"referencedDeclaration":2402,"src":"10146:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"10215:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2665,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"10226:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"10343:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2684,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"10357:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"10373:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2687,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"10385:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2598,"id":2702,"nodeType":"Return","src":"10463:17:12"},"id":2703,"nodeType":"IfStatement","src":"10339:141:12","trueBody":{"id":2698,"nodeType":"Block","src":"10401:56:12","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2692,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2691,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:12","memberName":"min","nodeType":"MemberAccess","src":"10429:16:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2598,"id":2697,"nodeType":"Return","src":"10415:31:12"}]}},"id":2704,"nodeType":"IfStatement","src":"10197:283:12","trueBody":{"id":2682,"nodeType":"Block","src":"10242:91:12","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2669,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"10270:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2677,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"10312:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2675,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:12","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:12","trueExpression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:12","subExpression":{"arguments":[{"id":2672,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"10293:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2670,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:12","typeDescriptions":{}}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2598,"id":2681,"nodeType":"Return","src":"10256:66:12"}]}}]},"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"9281:223:12","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2706,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:12","nodeType":"FunctionDefinition","parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"input","nameLocation":"9569:5:12","nodeType":"VariableDeclaration","scope":2706,"src":"9555:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2587,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"begin","nameLocation":"9592:5:12","nodeType":"VariableDeclaration","scope":2706,"src":"9584:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"end","nameLocation":"9615:3:12","nodeType":"VariableDeclaration","scope":2706,"src":"9607:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:12"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"success","nameLocation":"9652:7:12","nodeType":"VariableDeclaration","scope":2706,"src":"9647:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2594,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"value","nameLocation":"9668:5:12","nodeType":"VariableDeclaration","scope":2706,"src":"9661:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2596,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:12"},"scope":3331,"src":"9509:978:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2724,"nodeType":"Block","src":"10832:67:12","statements":[{"expression":{"arguments":[{"id":2715,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"10862:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2719,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"10878:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2717,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:12","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:12","memberName":"length","nodeType":"MemberAccess","src":"10872:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2714,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2725,2756],"referencedDeclaration":2756,"src":"10849:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2713,"id":2723,"nodeType":"Return","src":"10842:50:12"}]},"documentation":{"id":2707,"nodeType":"StructuredDocumentation","src":"10493:259:12","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:12","nodeType":"FunctionDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"input","nameLocation":"10793:5:12","nodeType":"VariableDeclaration","scope":2725,"src":"10779:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2708,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:12"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2725,"src":"10823:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:12"},"scope":3331,"src":"10757:142:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2755,"nodeType":"Block","src":"11320:156:12","statements":[{"assignments":[2738,2740],"declarations":[{"constant":false,"id":2738,"mutability":"mutable","name":"success","nameLocation":"11336:7:12","nodeType":"VariableDeclaration","scope":2755,"src":"11331:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2737,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"value","nameLocation":"11353:5:12","nodeType":"VariableDeclaration","scope":2755,"src":"11345:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2746,"initialValue":{"arguments":[{"id":2742,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"11378:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2743,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"11385:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2744,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"11392:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2741,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2777,2814],"referencedDeclaration":2814,"src":"11362:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:12"},{"condition":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:12","subExpression":{"id":2747,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"11411:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"IfStatement","src":"11406:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2749,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"11427:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2751,"nodeType":"RevertStatement","src":"11420:27:12"}},{"expression":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"11464:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2736,"id":2754,"nodeType":"Return","src":"11457:12:12"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"10905:307:12","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:12","nodeType":"FunctionDefinition","parameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"input","nameLocation":"11253:5:12","nodeType":"VariableDeclaration","scope":2756,"src":"11239:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2727,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"begin","nameLocation":"11268:5:12","nodeType":"VariableDeclaration","scope":2756,"src":"11260:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"end","nameLocation":"11283:3:12","nodeType":"VariableDeclaration","scope":2756,"src":"11275:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:12"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2756,"src":"11311:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:12"},"scope":3331,"src":"11217:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2776,"nodeType":"Block","src":"11803:86:12","statements":[{"expression":{"arguments":[{"id":2767,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"11852:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2771,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"11868:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:12","typeDescriptions":{}}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:12","memberName":"length","nodeType":"MemberAccess","src":"11862:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"11820:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2765,"id":2775,"nodeType":"Return","src":"11813:69:12"}]},"documentation":{"id":2757,"nodeType":"StructuredDocumentation","src":"11482:218:12","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2777,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:12","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2759,"mutability":"mutable","name":"input","nameLocation":"11744:5:12","nodeType":"VariableDeclaration","scope":2777,"src":"11730:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2758,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:12"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"success","nameLocation":"11779:7:12","nodeType":"VariableDeclaration","scope":2777,"src":"11774:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2761,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"value","nameLocation":"11796:5:12","nodeType":"VariableDeclaration","scope":2777,"src":"11788:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:12"},"scope":3331,"src":"11705:184:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"12297:147:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2791,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12311:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2794,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"12323:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2792,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:12","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:12","memberName":"length","nodeType":"MemberAccess","src":"12317:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"12340:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2799,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12348:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2806,"nodeType":"IfStatement","src":"12307:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2790,"id":2805,"nodeType":"Return","src":"12353:17:12"}},{"expression":{"arguments":[{"id":2808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"12419:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2809,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"12426:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2810,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"12433:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2807,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"12387:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2790,"id":2812,"nodeType":"Return","src":"12380:57:12"}]},"documentation":{"id":2778,"nodeType":"StructuredDocumentation","src":"11895:241:12","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:12","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"input","nameLocation":"12189:5:12","nodeType":"VariableDeclaration","scope":2814,"src":"12175:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2779,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"begin","nameLocation":"12212:5:12","nodeType":"VariableDeclaration","scope":2814,"src":"12204:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"end","nameLocation":"12235:3:12","nodeType":"VariableDeclaration","scope":2814,"src":"12227:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2783,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:12"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"success","nameLocation":"12273:7:12","nodeType":"VariableDeclaration","scope":2814,"src":"12268:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2786,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"12290:5:12","nodeType":"VariableDeclaration","scope":2814,"src":"12282:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:12"},"scope":3331,"src":"12141:303:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2916,"nodeType":"Block","src":"12853:881:12","statements":[{"assignments":[2829],"declarations":[{"constant":false,"id":2829,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:12","nodeType":"VariableDeclaration","scope":2916,"src":"12863:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2828,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2834,"initialValue":{"arguments":[{"id":2832,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"12891:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2830,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:12","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:12"},{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:12","nodeType":"VariableDeclaration","scope":2916,"src":"12945:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2835,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2856,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"12963:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"12969:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2846,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"13013:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2847,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"13021:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2845,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"12990:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2843,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:12","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2850,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:12","typeDescriptions":{}}},"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:12"},{"assignments":[2858],"declarations":[{"constant":false,"id":2858,"mutability":"mutable","name":"offset","nameLocation":"13133:6:12","nodeType":"VariableDeclaration","scope":2916,"src":"13125:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2864,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2859,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13142:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"13142:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:12"},{"assignments":[2866],"declarations":[{"constant":false,"id":2866,"mutability":"mutable","name":"result","nameLocation":"13183:6:12","nodeType":"VariableDeclaration","scope":2916,"src":"13175:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2868,"initialValue":{"hexValue":"30","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:12"},{"body":{"id":2910,"nodeType":"Block","src":"13250:447:12","statements":[{"assignments":[2882],"declarations":[{"constant":false,"id":2882,"mutability":"mutable","name":"chr","nameLocation":"13270:3:12","nodeType":"VariableDeclaration","scope":2910,"src":"13264:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2881,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2892,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2887,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"13319:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2888,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"13327:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2886,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"13296:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2884,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:12","typeDescriptions":{}}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2883,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"13276:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"13349:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"13345:31:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2827,"id":2899,"nodeType":"Return","src":"13359:17:12"}},{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"13390:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"13390:12:12"},{"id":2909,"nodeType":"UncheckedBlock","src":"13416:271:12","statements":[{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"13659:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2906,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"13669:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"13659:13:12"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"13236:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2876,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"13240:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2911,"initializationExpression":{"assignments":[2870],"declarations":[{"constant":false,"id":2870,"mutability":"mutable","name":"i","nameLocation":"13216:1:12","nodeType":"VariableDeclaration","scope":2911,"src":"13208:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"13220:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2872,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"13228:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:12","subExpression":{"id":2878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"13247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2880,"nodeType":"ExpressionStatement","src":"13245:3:12"},"nodeType":"ForStatement","src":"13203:494:12"},{"expression":{"components":[{"hexValue":"74727565","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"13720:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2827,"id":2915,"nodeType":"Return","src":"13706:21:12"}]},"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"12450:227:12","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:12","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"input","nameLocation":"12746:5:12","nodeType":"VariableDeclaration","scope":2917,"src":"12732:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2816,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2819,"mutability":"mutable","name":"begin","nameLocation":"12769:5:12","nodeType":"VariableDeclaration","scope":2917,"src":"12761:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"end","nameLocation":"12792:3:12","nodeType":"VariableDeclaration","scope":2917,"src":"12784:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2820,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:12"},"returnParameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2824,"mutability":"mutable","name":"success","nameLocation":"12829:7:12","nodeType":"VariableDeclaration","scope":2917,"src":"12824:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2823,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"value","nameLocation":"12846:5:12","nodeType":"VariableDeclaration","scope":2917,"src":"12838:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:12"},"scope":3331,"src":"12682:1052:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2935,"nodeType":"Block","src":"14032:67:12","statements":[{"expression":{"arguments":[{"id":2926,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"14062:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2930,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"14078:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2928,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:12","typeDescriptions":{}}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:12","memberName":"length","nodeType":"MemberAccess","src":"14072:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2936,2967],"referencedDeclaration":2967,"src":"14049:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2924,"id":2934,"nodeType":"Return","src":"14042:50:12"}]},"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"13740:212:12","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2936,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:12","nodeType":"FunctionDefinition","parameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"input","nameLocation":"13993:5:12","nodeType":"VariableDeclaration","scope":2936,"src":"13979:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2919,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:12"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2936,"src":"14023:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:12"},"scope":3331,"src":"13957:142:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2966,"nodeType":"Block","src":"14472:165:12","statements":[{"assignments":[2949,2951],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"success","nameLocation":"14488:7:12","nodeType":"VariableDeclaration","scope":2966,"src":"14483:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2948,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"value","nameLocation":"14505:5:12","nodeType":"VariableDeclaration","scope":2966,"src":"14497:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2957,"initialValue":{"arguments":[{"id":2953,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"14530:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2954,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"14537:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2955,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"14544:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2952,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2988,3092],"referencedDeclaration":3092,"src":"14514:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:12"},{"condition":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:12","subExpression":{"id":2958,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"14563:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2963,"nodeType":"IfStatement","src":"14558:50:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2960,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"14579:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2962,"nodeType":"RevertStatement","src":"14572:36:12"}},{"expression":{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"14625:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2947,"id":2965,"nodeType":"Return","src":"14618:12:12"}]},"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"14105:259:12","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:12","nodeType":"FunctionDefinition","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"input","nameLocation":"14405:5:12","nodeType":"VariableDeclaration","scope":2967,"src":"14391:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2938,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"begin","nameLocation":"14420:5:12","nodeType":"VariableDeclaration","scope":2967,"src":"14412:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"end","nameLocation":"14435:3:12","nodeType":"VariableDeclaration","scope":2967,"src":"14427:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:12"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"14463:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2945,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:12"},"scope":3331,"src":"14369:268:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2987,"nodeType":"Block","src":"14944:70:12","statements":[{"expression":{"arguments":[{"id":2978,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"14977:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2982,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"14993:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2980,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:12","typeDescriptions":{}}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:12","memberName":"length","nodeType":"MemberAccess","src":"14987:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2988,3092],"referencedDeclaration":3092,"src":"14961:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2976,"id":2986,"nodeType":"Return","src":"14954:53:12"}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"14643:198:12","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:12","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"input","nameLocation":"14885:5:12","nodeType":"VariableDeclaration","scope":2988,"src":"14871:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:12"},"returnParameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"success","nameLocation":"14920:7:12","nodeType":"VariableDeclaration","scope":2988,"src":"14915:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2972,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"value","nameLocation":"14937:5:12","nodeType":"VariableDeclaration","scope":2988,"src":"14929:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2974,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:12"},"scope":3331,"src":"14846:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"15407:733:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3002,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"15421:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3005,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"15433:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:12","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:12","memberName":"length","nodeType":"MemberAccess","src":"15427:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3009,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"15450:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3010,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"15458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3020,"nodeType":"IfStatement","src":"15417:72:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3014,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:12","typeDescriptions":{}}},"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3001,"id":3019,"nodeType":"Return","src":"15463:26:12"}},{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:12","nodeType":"VariableDeclaration","scope":3091,"src":"15500:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3045,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"15518:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"15524:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3034,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"15574:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3032,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:12","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3036,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"15582:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3031,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"15545:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3029,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:12","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3039,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:12","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:12"},{"assignments":[3047],"declarations":[{"constant":false,"id":3047,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:12","nodeType":"VariableDeclaration","scope":3091,"src":"15686:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3049,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"15716:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"15716:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3056,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"15803:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3057,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"15809:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3059,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"15818:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3089,"nodeType":"Block","src":"16083:51:12","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:12","typeDescriptions":{}}},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3001,"id":3088,"nodeType":"Return","src":"16097:26:12"}]},"id":3090,"nodeType":"IfStatement","src":"15799:335:12","trueBody":{"id":3081,"nodeType":"Block","src":"15834:243:12","statements":[{"assignments":[3062,3064],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"s","nameLocation":"15955:1:12","nodeType":"VariableDeclaration","scope":3081,"src":"15950:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3061,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"v","nameLocation":"15966:1:12","nodeType":"VariableDeclaration","scope":3081,"src":"15958:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3070,"initialValue":{"arguments":[{"id":3066,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"16003:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3067,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"16010:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3068,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"16017:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3065,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"15971:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:12"},{"expression":{"components":[{"id":3071,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"16043:1:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3076,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"16062:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3074,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:12","typeDescriptions":{}}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:12","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3001,"id":3080,"nodeType":"Return","src":"16035:31:12"}]}}]},"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"15020:226:12","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:12","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"input","nameLocation":"15299:5:12","nodeType":"VariableDeclaration","scope":3092,"src":"15285:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2990,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"begin","nameLocation":"15322:5:12","nodeType":"VariableDeclaration","scope":3092,"src":"15314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"end","nameLocation":"15345:3:12","nodeType":"VariableDeclaration","scope":3092,"src":"15337:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:12"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"success","nameLocation":"15383:7:12","nodeType":"VariableDeclaration","scope":3092,"src":"15378:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2997,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3000,"mutability":"mutable","name":"value","nameLocation":"15400:5:12","nodeType":"VariableDeclaration","scope":3092,"src":"15392:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:12"},"scope":3331,"src":"15251:889:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3151,"nodeType":"Block","src":"16209:461:12","statements":[{"assignments":[3100],"declarations":[{"constant":false,"id":3100,"mutability":"mutable","name":"value","nameLocation":"16225:5:12","nodeType":"VariableDeclaration","scope":3151,"src":"16219:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3099,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3105,"initialValue":{"arguments":[{"id":3103,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"16239:3:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3101,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:12","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:12"},{"id":3148,"nodeType":"UncheckedBlock","src":"16403:238:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16431:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:12","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16445:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:12","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16491:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16505:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:12","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16552:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16566:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:12","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3140,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:12","memberName":"max","nodeType":"MemberAccess","src":"16615:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3098,"id":3144,"nodeType":"Return","src":"16608:22:12"},"id":3145,"nodeType":"IfStatement","src":"16548:82:12","trueBody":{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16578:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:12","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3138,"nodeType":"ExpressionStatement","src":"16578:11:12"}},"id":3146,"nodeType":"IfStatement","src":"16487:143:12","trueBody":{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16518:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:12","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3127,"nodeType":"ExpressionStatement","src":"16518:11:12"}},"id":3147,"nodeType":"IfStatement","src":"16427:203:12","trueBody":{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16457:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3116,"nodeType":"ExpressionStatement","src":"16457:11:12"}}]},{"expression":{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"16658:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3098,"id":3150,"nodeType":"Return","src":"16651:12:12"}]},"id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:12","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"chr","nameLocation":"16175:3:12","nodeType":"VariableDeclaration","scope":3152,"src":"16168:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3093,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:12"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"16202:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3096,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:12"},"scope":3331,"src":"16146:524:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3317,"nodeType":"Block","src":"17336:1331:12","statements":[{"assignments":[3161],"declarations":[{"constant":false,"id":3161,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:12","nodeType":"VariableDeclaration","scope":3317,"src":"17346:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3160,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3166,"initialValue":{"arguments":[{"id":3164,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"17374:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3162,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:12","typeDescriptions":{}}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:12"},{"assignments":[3168],"declarations":[{"constant":false,"id":3168,"mutability":"mutable","name":"output","nameLocation":"17403:6:12","nodeType":"VariableDeclaration","scope":3317,"src":"17390:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3167,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3176,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3172,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"17426:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:12","memberName":"length","nodeType":"MemberAccess","src":"17426:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3169,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:12"},{"assignments":[3178],"declarations":[{"constant":false,"id":3178,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:12","nodeType":"VariableDeclaration","scope":3317,"src":"17473:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3180,"initialValue":{"hexValue":"30","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:12"},{"body":{"id":3309,"nodeType":"Block","src":"17548:854:12","statements":[{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"char","nameLocation":"17569:4:12","nodeType":"VariableDeclaration","scope":3309,"src":"17562:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3191,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3200,"initialValue":{"arguments":[{"arguments":[{"id":3196,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"17606:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"17614:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3195,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"17583:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3193,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:12","typeDescriptions":{}}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:12"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3201,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"17637:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3205,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"17672:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3203,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:12","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3307,"nodeType":"Block","src":"18330:62:12","statements":[{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3300,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"18348:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3303,"indexExpression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:12","subExpression":{"id":3301,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"18355:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3304,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"18373:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3306,"nodeType":"ExpressionStatement","src":"18348:29:12"}]},"id":3308,"nodeType":"IfStatement","src":"17631:761:12","trueBody":{"id":3299,"nodeType":"Block","src":"17687:637:12","statements":[{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3214,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"17705:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3217,"indexExpression":{"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:12","subExpression":{"id":3215,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"17712:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3220,"nodeType":"ExpressionStatement","src":"17705:29:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"17756:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"17825:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3241,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"17894:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"17963:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:12","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3261,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"18032:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:12","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3271,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"18101:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:12","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"18171:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3292,"nodeType":"IfStatement","src":"18167:143:12","trueBody":{"id":3291,"nodeType":"Block","src":"18185:125:12","statements":[{"expression":{"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3284,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"18263:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3287,"indexExpression":{"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:12","subExpression":{"id":3285,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"18270:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3290,"nodeType":"ExpressionStatement","src":"18263:28:12"}]}},"id":3293,"nodeType":"IfStatement","src":"18097:213:12","trueBody":{"expression":{"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3274,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"18115:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3277,"indexExpression":{"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:12","subExpression":{"id":3275,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"18122:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3280,"nodeType":"ExpressionStatement","src":"18115:29:12"}},"id":3294,"nodeType":"IfStatement","src":"18028:282:12","trueBody":{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3264,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"18046:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3267,"indexExpression":{"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:12","subExpression":{"id":3265,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"18053:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3270,"nodeType":"ExpressionStatement","src":"18046:28:12"}},"id":3295,"nodeType":"IfStatement","src":"17959:351:12","trueBody":{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3254,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"17977:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3257,"indexExpression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:12","subExpression":{"id":3255,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"17984:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3260,"nodeType":"ExpressionStatement","src":"17977:28:12"}},"id":3296,"nodeType":"IfStatement","src":"17890:420:12","trueBody":{"expression":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3244,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"17908:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3247,"indexExpression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:12","subExpression":{"id":3245,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"17915:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3250,"nodeType":"ExpressionStatement","src":"17908:28:12"}},"id":3297,"nodeType":"IfStatement","src":"17821:489:12","trueBody":{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3234,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"17839:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3237,"indexExpression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:12","subExpression":{"id":3235,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"17846:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3240,"nodeType":"ExpressionStatement","src":"17839:28:12"}},"id":3298,"nodeType":"IfStatement","src":"17752:558:12","trueBody":{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3224,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"17770:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3227,"indexExpression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:12","subExpression":{"id":3225,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"17777:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3230,"nodeType":"ExpressionStatement","src":"17770:28:12"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"17524:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3185,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"17528:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:12","memberName":"length","nodeType":"MemberAccess","src":"17528:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3310,"initializationExpression":{"assignments":[3182],"declarations":[{"constant":false,"id":3182,"mutability":"mutable","name":"i","nameLocation":"17521:1:12","nodeType":"VariableDeclaration","scope":3310,"src":"17513:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3183,"nodeType":"VariableDeclarationStatement","src":"17513:9:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:12","subExpression":{"id":3188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"17545:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"17543:3:12"},"nodeType":"ForStatement","src":"17508:894:12"},{"AST":{"nativeSrc":"18500:129:12","nodeType":"YulBlock","src":"18500:129:12","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:12","nodeType":"YulIdentifier","src":"18521:6:12"},{"name":"outputLength","nativeSrc":"18529:12:12","nodeType":"YulIdentifier","src":"18529:12:12"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:12","nodeType":"YulIdentifier","src":"18514:6:12"},"nativeSrc":"18514:28:12","nodeType":"YulFunctionCall","src":"18514:28:12"},"nativeSrc":"18514:28:12","nodeType":"YulExpressionStatement","src":"18514:28:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:12","nodeType":"YulLiteral","src":"18562:4:12","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:12","nodeType":"YulIdentifier","src":"18572:6:12"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:12","nodeType":"YulLiteral","src":"18584:1:12","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:12","nodeType":"YulLiteral","src":"18591:1:12","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:12","nodeType":"YulIdentifier","src":"18598:12:12"},{"kind":"number","nativeSrc":"18612:2:12","nodeType":"YulLiteral","src":"18612:2:12","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:12","nodeType":"YulIdentifier","src":"18594:3:12"},"nativeSrc":"18594:21:12","nodeType":"YulFunctionCall","src":"18594:21:12"}],"functionName":{"name":"shr","nativeSrc":"18587:3:12","nodeType":"YulIdentifier","src":"18587:3:12"},"nativeSrc":"18587:29:12","nodeType":"YulFunctionCall","src":"18587:29:12"}],"functionName":{"name":"shl","nativeSrc":"18580:3:12","nodeType":"YulIdentifier","src":"18580:3:12"},"nativeSrc":"18580:37:12","nodeType":"YulFunctionCall","src":"18580:37:12"}],"functionName":{"name":"add","nativeSrc":"18568:3:12","nodeType":"YulIdentifier","src":"18568:3:12"},"nativeSrc":"18568:50:12","nodeType":"YulFunctionCall","src":"18568:50:12"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:12","nodeType":"YulIdentifier","src":"18555:6:12"},"nativeSrc":"18555:64:12","nodeType":"YulFunctionCall","src":"18555:64:12"},"nativeSrc":"18555:64:12","nodeType":"YulExpressionStatement","src":"18555:64:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3168,"isOffset":false,"isSlot":false,"src":"18521:6:12","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"18572:6:12","valueSize":1},{"declaration":3178,"isOffset":false,"isSlot":false,"src":"18529:12:12","valueSize":1},{"declaration":3178,"isOffset":false,"isSlot":false,"src":"18598:12:12","valueSize":1}],"flags":["memory-safe"],"id":3311,"nodeType":"InlineAssembly","src":"18475:154:12"},{"expression":{"arguments":[{"id":3314,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"18653:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3312,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:12","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3159,"id":3316,"nodeType":"Return","src":"18639:21:12"}]},"documentation":{"id":3153,"nodeType":"StructuredDocumentation","src":"16676:576:12","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3318,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:12","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"input","nameLocation":"17291:5:12","nodeType":"VariableDeclaration","scope":3318,"src":"17277:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:12"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3318,"src":"17321:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3157,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:12"},"scope":3331,"src":"17257:1410:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3329,"nodeType":"Block","src":"19052:225:12","statements":[{"AST":{"nativeSrc":"19201:70:12","nodeType":"YulBlock","src":"19201:70:12","statements":[{"nativeSrc":"19215:46:12","nodeType":"YulAssignment","src":"19215:46:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:12","nodeType":"YulIdentifier","src":"19238:6:12"},{"kind":"number","nativeSrc":"19246:4:12","nodeType":"YulLiteral","src":"19246:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:12","nodeType":"YulIdentifier","src":"19234:3:12"},"nativeSrc":"19234:17:12","nodeType":"YulFunctionCall","src":"19234:17:12"},{"name":"offset","nativeSrc":"19253:6:12","nodeType":"YulIdentifier","src":"19253:6:12"}],"functionName":{"name":"add","nativeSrc":"19230:3:12","nodeType":"YulIdentifier","src":"19230:3:12"},"nativeSrc":"19230:30:12","nodeType":"YulFunctionCall","src":"19230:30:12"}],"functionName":{"name":"mload","nativeSrc":"19224:5:12","nodeType":"YulIdentifier","src":"19224:5:12"},"nativeSrc":"19224:37:12","nodeType":"YulFunctionCall","src":"19224:37:12"},"variableNames":[{"name":"value","nativeSrc":"19215:5:12","nodeType":"YulIdentifier","src":"19215:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3321,"isOffset":false,"isSlot":false,"src":"19238:6:12","valueSize":1},{"declaration":3323,"isOffset":false,"isSlot":false,"src":"19253:6:12","valueSize":1},{"declaration":3326,"isOffset":false,"isSlot":false,"src":"19215:5:12","valueSize":1}],"flags":["memory-safe"],"id":3328,"nodeType":"InlineAssembly","src":"19176:95:12"}]},"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"18673:268:12","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3330,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:12","nodeType":"FunctionDefinition","parameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:12","nodeType":"VariableDeclaration","scope":3330,"src":"18978:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3320,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"offset","nameLocation":"19007:6:12","nodeType":"VariableDeclaration","scope":3330,"src":"18999:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:12"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"value","nameLocation":"19045:5:12","nodeType":"VariableDeclaration","scope":3330,"src":"19037:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:12"},"scope":3331,"src":"18946:331:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3332,"src":"297:18982:12","usedErrors":[1989,1992,1995],"usedEvents":[]}],"src":"101:19179:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3679]},"id":3680,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3333,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"138:205:13","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3679,"linearizedBaseContracts":[3679],"name":"ECDSA","nameLocation":"352:5:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3339,"members":[{"id":3335,"name":"NoError","nameLocation":"392:7:13","nodeType":"EnumValue","src":"392:7:13"},{"id":3336,"name":"InvalidSignature","nameLocation":"409:16:13","nodeType":"EnumValue","src":"409:16:13"},{"id":3337,"name":"InvalidSignatureLength","nameLocation":"435:22:13","nodeType":"EnumValue","src":"435:22:13"},{"id":3338,"name":"InvalidSignatureS","nameLocation":"467:17:13","nodeType":"EnumValue","src":"467:17:13"}],"name":"RecoverError","nameLocation":"369:12:13","nodeType":"EnumDefinition","src":"364:126:13"},{"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"496:63:13","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3342,"name":"ECDSAInvalidSignature","nameLocation":"570:21:13","nodeType":"ErrorDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[],"src":"591:2:13"},"src":"564:30:13"},{"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"600:60:13","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3347,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:13","nodeType":"ErrorDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"length","nameLocation":"707:6:13","nodeType":"VariableDeclaration","scope":3347,"src":"699:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:13"},"src":"665:50:13"},{"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"721:85:13","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3352,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:13","nodeType":"ErrorDefinition","parameters":{"id":3351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"s","nameLocation":"848:1:13","nodeType":"VariableDeclaration","scope":3352,"src":"840:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3349,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:13"},"src":"811:40:13"},{"body":{"id":3404,"nodeType":"Block","src":"2285:622:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3367,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2299:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:13","memberName":"length","nodeType":"MemberAccess","src":"2299:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3402,"nodeType":"Block","src":"2793:108:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3389,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:13","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3393,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"2827:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3337,"src":"2827:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3397,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"2872:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:13","memberName":"length","nodeType":"MemberAccess","src":"2872:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:13","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3366,"id":3401,"nodeType":"Return","src":"2807:83:13"}]},"id":3403,"nodeType":"IfStatement","src":"2295:606:13","trueBody":{"id":3388,"nodeType":"Block","src":"2323:464:13","statements":[{"assignments":[3372],"declarations":[{"constant":false,"id":3372,"mutability":"mutable","name":"r","nameLocation":"2345:1:13","nodeType":"VariableDeclaration","scope":3388,"src":"2337:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3373,"nodeType":"VariableDeclarationStatement","src":"2337:9:13"},{"assignments":[3375],"declarations":[{"constant":false,"id":3375,"mutability":"mutable","name":"s","nameLocation":"2368:1:13","nodeType":"VariableDeclaration","scope":3388,"src":"2360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3376,"nodeType":"VariableDeclarationStatement","src":"2360:9:13"},{"assignments":[3378],"declarations":[{"constant":false,"id":3378,"mutability":"mutable","name":"v","nameLocation":"2389:1:13","nodeType":"VariableDeclaration","scope":3388,"src":"2383:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3377,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3379,"nodeType":"VariableDeclarationStatement","src":"2383:7:13"},{"AST":{"nativeSrc":"2560:171:13","nodeType":"YulBlock","src":"2560:171:13","statements":[{"nativeSrc":"2578:32:13","nodeType":"YulAssignment","src":"2578:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:13","nodeType":"YulIdentifier","src":"2593:9:13"},{"kind":"number","nativeSrc":"2604:4:13","nodeType":"YulLiteral","src":"2604:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:13","nodeType":"YulIdentifier","src":"2589:3:13"},"nativeSrc":"2589:20:13","nodeType":"YulFunctionCall","src":"2589:20:13"}],"functionName":{"name":"mload","nativeSrc":"2583:5:13","nodeType":"YulIdentifier","src":"2583:5:13"},"nativeSrc":"2583:27:13","nodeType":"YulFunctionCall","src":"2583:27:13"},"variableNames":[{"name":"r","nativeSrc":"2578:1:13","nodeType":"YulIdentifier","src":"2578:1:13"}]},{"nativeSrc":"2627:32:13","nodeType":"YulAssignment","src":"2627:32:13","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:13","nodeType":"YulIdentifier","src":"2642:9:13"},{"kind":"number","nativeSrc":"2653:4:13","nodeType":"YulLiteral","src":"2653:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:13","nodeType":"YulIdentifier","src":"2638:3:13"},"nativeSrc":"2638:20:13","nodeType":"YulFunctionCall","src":"2638:20:13"}],"functionName":{"name":"mload","nativeSrc":"2632:5:13","nodeType":"YulIdentifier","src":"2632:5:13"},"nativeSrc":"2632:27:13","nodeType":"YulFunctionCall","src":"2632:27:13"},"variableNames":[{"name":"s","nativeSrc":"2627:1:13","nodeType":"YulIdentifier","src":"2627:1:13"}]},{"nativeSrc":"2676:41:13","nodeType":"YulAssignment","src":"2676:41:13","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:13","nodeType":"YulLiteral","src":"2686:1:13","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:13","nodeType":"YulIdentifier","src":"2699:9:13"},{"kind":"number","nativeSrc":"2710:4:13","nodeType":"YulLiteral","src":"2710:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:13","nodeType":"YulIdentifier","src":"2695:3:13"},"nativeSrc":"2695:20:13","nodeType":"YulFunctionCall","src":"2695:20:13"}],"functionName":{"name":"mload","nativeSrc":"2689:5:13","nodeType":"YulIdentifier","src":"2689:5:13"},"nativeSrc":"2689:27:13","nodeType":"YulFunctionCall","src":"2689:27:13"}],"functionName":{"name":"byte","nativeSrc":"2681:4:13","nodeType":"YulIdentifier","src":"2681:4:13"},"nativeSrc":"2681:36:13","nodeType":"YulFunctionCall","src":"2681:36:13"},"variableNames":[{"name":"v","nativeSrc":"2676:1:13","nodeType":"YulIdentifier","src":"2676:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3372,"isOffset":false,"isSlot":false,"src":"2578:1:13","valueSize":1},{"declaration":3375,"isOffset":false,"isSlot":false,"src":"2627:1:13","valueSize":1},{"declaration":3357,"isOffset":false,"isSlot":false,"src":"2593:9:13","valueSize":1},{"declaration":3357,"isOffset":false,"isSlot":false,"src":"2642:9:13","valueSize":1},{"declaration":3357,"isOffset":false,"isSlot":false,"src":"2699:9:13","valueSize":1},{"declaration":3378,"isOffset":false,"isSlot":false,"src":"2676:1:13","valueSize":1}],"flags":["memory-safe"],"id":3380,"nodeType":"InlineAssembly","src":"2535:196:13"},{"expression":{"arguments":[{"id":3382,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"2762:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3383,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2768:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3384,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2771:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3385,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"2774:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3381,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3405,3485,3593],"referencedDeclaration":3593,"src":"2751:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3366,"id":3387,"nodeType":"Return","src":"2744:32:13"}]}}]},"documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"857:1267:13","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3405,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:13","nodeType":"FunctionDefinition","parameters":{"id":3358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"hash","nameLocation":"2166:4:13","nodeType":"VariableDeclaration","scope":3405,"src":"2158:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"signature","nameLocation":"2193:9:13","nodeType":"VariableDeclaration","scope":3405,"src":"2180:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3356,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:13"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3360,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:13","nodeType":"VariableDeclaration","scope":3405,"src":"2232:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3363,"mutability":"mutable","name":"err","nameLocation":"2264:3:13","nodeType":"VariableDeclaration","scope":3405,"src":"2251:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3362,"nodeType":"UserDefinedTypeName","pathNode":{"id":3361,"name":"RecoverError","nameLocations":["2251:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"2251:12:13"},"referencedDeclaration":3339,"src":"2251:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3365,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:13","nodeType":"VariableDeclaration","scope":3405,"src":"2269:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:13"},"scope":3679,"src":"2129:778:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3434,"nodeType":"Block","src":"3801:168:13","statements":[{"assignments":[3416,3419,3421],"declarations":[{"constant":false,"id":3416,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:13","nodeType":"VariableDeclaration","scope":3434,"src":"3812:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"error","nameLocation":"3844:5:13","nodeType":"VariableDeclaration","scope":3434,"src":"3831:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3418,"nodeType":"UserDefinedTypeName","pathNode":{"id":3417,"name":"RecoverError","nameLocations":["3831:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"3831:12:13"},"referencedDeclaration":3339,"src":"3831:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:13","nodeType":"VariableDeclaration","scope":3434,"src":"3851:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3426,"initialValue":{"arguments":[{"id":3423,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"3882:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3424,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"3888:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3422,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3405,3485,3593],"referencedDeclaration":3405,"src":"3871:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:13"},{"expression":{"arguments":[{"id":3428,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"3920:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"id":3429,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"3927:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3427,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"3908:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3339_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"3908:28:13"},{"expression":{"id":3432,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3953:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3414,"id":3433,"nodeType":"Return","src":"3946:16:13"}]},"documentation":{"id":3406,"nodeType":"StructuredDocumentation","src":"2913:796:13","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3435,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:13","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"hash","nameLocation":"3739:4:13","nodeType":"VariableDeclaration","scope":3435,"src":"3731:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"signature","nameLocation":"3758:9:13","nodeType":"VariableDeclaration","scope":3435,"src":"3745:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3409,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:13"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3435,"src":"3792:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:13"},"scope":3679,"src":"3714:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3484,"nodeType":"Block","src":"4348:342:13","statements":[{"id":3483,"nodeType":"UncheckedBlock","src":"4358:326:13","statements":[{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"s","nameLocation":"4390:1:13","nodeType":"VariableDeclaration","scope":3483,"src":"4382:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3460,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4394:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:13","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:13"},{"assignments":[3462],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"v","nameLocation":"4591:1:13","nodeType":"VariableDeclaration","scope":3483,"src":"4585:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3461,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3475,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3467,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"4610:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:13","typeDescriptions":{}}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:13","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3463,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:13","typeDescriptions":{}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:13"},{"expression":{"arguments":[{"id":3477,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4659:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3478,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"4665:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3479,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"4668:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3480,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"4671:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3476,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3405,3485,3593],"referencedDeclaration":3593,"src":"4648:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3451,"id":3482,"nodeType":"Return","src":"4641:32:13"}]}]},"documentation":{"id":3436,"nodeType":"StructuredDocumentation","src":"3975:205:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3485,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:13","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"hash","nameLocation":"4222:4:13","nodeType":"VariableDeclaration","scope":3485,"src":"4214:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"r","nameLocation":"4244:1:13","nodeType":"VariableDeclaration","scope":3485,"src":"4236:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"vs","nameLocation":"4263:2:13","nodeType":"VariableDeclaration","scope":3485,"src":"4255:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:13"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3445,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:13","nodeType":"VariableDeclaration","scope":3485,"src":"4295:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3444,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"err","nameLocation":"4327:3:13","nodeType":"VariableDeclaration","scope":3485,"src":"4314:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3447,"nodeType":"UserDefinedTypeName","pathNode":{"id":3446,"name":"RecoverError","nameLocations":["4314:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"4314:12:13"},"referencedDeclaration":3339,"src":"4314:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:13","nodeType":"VariableDeclaration","scope":3485,"src":"4332:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:13"},"scope":3679,"src":"4185:505:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"4903:164:13","statements":[{"assignments":[3498,3501,3503],"declarations":[{"constant":false,"id":3498,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:13","nodeType":"VariableDeclaration","scope":3517,"src":"4914:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3497,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3501,"mutability":"mutable","name":"error","nameLocation":"4946:5:13","nodeType":"VariableDeclaration","scope":3517,"src":"4933:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3500,"nodeType":"UserDefinedTypeName","pathNode":{"id":3499,"name":"RecoverError","nameLocations":["4933:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"4933:12:13"},"referencedDeclaration":3339,"src":"4933:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:13","nodeType":"VariableDeclaration","scope":3517,"src":"4953:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3509,"initialValue":{"arguments":[{"id":3505,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"4984:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3506,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"4990:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3507,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"4993:2:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3504,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3405,3485,3593],"referencedDeclaration":3485,"src":"4973:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:13"},{"expression":{"arguments":[{"id":3511,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"5018:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"id":3512,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"5025:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3510,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"5006:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3339_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3514,"nodeType":"ExpressionStatement","src":"5006:28:13"},{"expression":{"id":3515,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"5051:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3496,"id":3516,"nodeType":"Return","src":"5044:16:13"}]},"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"4696:116:13","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:13","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"hash","nameLocation":"4842:4:13","nodeType":"VariableDeclaration","scope":3518,"src":"4834:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"r","nameLocation":"4856:1:13","nodeType":"VariableDeclaration","scope":3518,"src":"4848:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"vs","nameLocation":"4867:2:13","nodeType":"VariableDeclaration","scope":3518,"src":"4859:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:13"},"returnParameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3518,"src":"4894:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3494,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:13"},"scope":3679,"src":"4817:250:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3592,"nodeType":"Block","src":"5382:1372:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3539,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6278:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:13","typeDescriptions":{}}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3553,"nodeType":"IfStatement","src":"6266:164:13","trueBody":{"id":3552,"nodeType":"Block","src":"6351:79:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:13","typeDescriptions":{}}},"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3547,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6385:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3338,"src":"6385:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"id":3549,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6417:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3536,"id":3551,"nodeType":"Return","src":"6365:54:13"}]}},{"assignments":[3555],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"signer","nameLocation":"6532:6:13","nodeType":"VariableDeclaration","scope":3592,"src":"6524:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3554,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3562,"initialValue":{"arguments":[{"id":3557,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"6551:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3558,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"6557:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3559,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"6560:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3560,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"6563:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3556,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:13","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"6579:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3564,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:13","typeDescriptions":{}}},"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3582,"nodeType":"IfStatement","src":"6575:113:13","trueBody":{"id":3581,"nodeType":"Block","src":"6601:87:13","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3569,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:13","typeDescriptions":{}}},"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3573,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6635:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3336,"src":"6635:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3575,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:13","typeDescriptions":{}}},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3536,"id":3580,"nodeType":"Return","src":"6615:62:13"}]}},{"expression":{"components":[{"id":3583,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"6706:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3584,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"6714:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3335,"src":"6714:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:13","typeDescriptions":{}}},"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3536,"id":3591,"nodeType":"Return","src":"6698:49:13"}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"5073:125:13","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:13","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"hash","nameLocation":"5240:4:13","nodeType":"VariableDeclaration","scope":3593,"src":"5232:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"v","nameLocation":"5260:1:13","nodeType":"VariableDeclaration","scope":3593,"src":"5254:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3522,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"r","nameLocation":"5279:1:13","nodeType":"VariableDeclaration","scope":3593,"src":"5271:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"s","nameLocation":"5298:1:13","nodeType":"VariableDeclaration","scope":3593,"src":"5290:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:13"},"returnParameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:13","nodeType":"VariableDeclaration","scope":3593,"src":"5329:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"err","nameLocation":"5361:3:13","nodeType":"VariableDeclaration","scope":3593,"src":"5348:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3532,"nodeType":"UserDefinedTypeName","pathNode":{"id":3531,"name":"RecoverError","nameLocations":["5348:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"5348:12:13"},"referencedDeclaration":3339,"src":"5348:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:13","nodeType":"VariableDeclaration","scope":3593,"src":"5366:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:13"},"scope":3679,"src":"5203:1551:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3628,"nodeType":"Block","src":"6981:166:13","statements":[{"assignments":[3608,3611,3613],"declarations":[{"constant":false,"id":3608,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:13","nodeType":"VariableDeclaration","scope":3628,"src":"6992:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3607,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"error","nameLocation":"7024:5:13","nodeType":"VariableDeclaration","scope":3628,"src":"7011:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3610,"nodeType":"UserDefinedTypeName","pathNode":{"id":3609,"name":"RecoverError","nameLocations":["7011:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"7011:12:13"},"referencedDeclaration":3339,"src":"7011:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:13","nodeType":"VariableDeclaration","scope":3628,"src":"7031:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3620,"initialValue":{"arguments":[{"id":3615,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"7062:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3616,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"7068:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3617,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"7071:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3618,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"7074:1:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3614,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3405,3485,3593],"referencedDeclaration":3593,"src":"7051:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3339_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:13"},{"expression":{"arguments":[{"id":3622,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"7098:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},{"id":3623,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"7105:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3621,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"7086:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3339_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3625,"nodeType":"ExpressionStatement","src":"7086:28:13"},{"expression":{"id":3626,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"7131:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3606,"id":3627,"nodeType":"Return","src":"7124:16:13"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"6760:122:13","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3629,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:13","nodeType":"FunctionDefinition","parameters":{"id":3603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"hash","nameLocation":"6912:4:13","nodeType":"VariableDeclaration","scope":3629,"src":"6904:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3598,"mutability":"mutable","name":"v","nameLocation":"6924:1:13","nodeType":"VariableDeclaration","scope":3629,"src":"6918:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3597,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3600,"mutability":"mutable","name":"r","nameLocation":"6935:1:13","nodeType":"VariableDeclaration","scope":3629,"src":"6927:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3602,"mutability":"mutable","name":"s","nameLocation":"6946:1:13","nodeType":"VariableDeclaration","scope":3629,"src":"6938:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:13"},"returnParameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3629,"src":"6972:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3604,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:13"},"scope":3679,"src":"6887:260:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3677,"nodeType":"Block","src":"7352:460:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"7366:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3639,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"7375:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:13","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3335,"src":"7375:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"7462:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3645,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"7471:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:13","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3336,"src":"7471:29:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"7567:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3653,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"7576:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:13","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3337,"src":"7576:35:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"7701:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3665,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"7710:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3339_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:13","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3338,"src":"7710:30:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3673,"nodeType":"IfStatement","src":"7697:109:13","trueBody":{"id":3672,"nodeType":"Block","src":"7742:64:13","statements":[{"errorCall":{"arguments":[{"id":3669,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"7786:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3668,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7763:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3671,"nodeType":"RevertStatement","src":"7756:39:13"}]}},"id":3674,"nodeType":"IfStatement","src":"7563:243:13","trueBody":{"id":3663,"nodeType":"Block","src":"7613:78:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3659,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"7670:8:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:13","typeDescriptions":{}}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3656,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"7634:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"RevertStatement","src":"7627:53:13"}]}},"id":3675,"nodeType":"IfStatement","src":"7458:348:13","trueBody":{"id":3651,"nodeType":"Block","src":"7502:55:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3648,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"7523:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3650,"nodeType":"RevertStatement","src":"7516:30:13"}]}},"id":3676,"nodeType":"IfStatement","src":"7362:444:13","trueBody":{"id":3643,"nodeType":"Block","src":"7397:55:13","statements":[{"functionReturnParameters":3637,"id":3642,"nodeType":"Return","src":"7411:7:13"}]}}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"7153:122:13","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3678,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:13","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"error","nameLocation":"7314:5:13","nodeType":"VariableDeclaration","scope":3678,"src":"7301:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3632,"nodeType":"UserDefinedTypeName","pathNode":{"id":3631,"name":"RecoverError","nameLocations":["7301:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3339,"src":"7301:12:13"},"referencedDeclaration":3339,"src":"7301:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3339","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:13","nodeType":"VariableDeclaration","scope":3678,"src":"7321:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:13"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"7352:0:13"},"scope":3679,"src":"7280:532:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3680,"src":"344:7470:13","usedErrors":[3342,3347,3352],"usedEvents":[]}],"src":"112:7703:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3906],"IERC5267":[172],"MessageHashUtils":[3992],"ShortString":[1594],"ShortStrings":[1805]},"id":3907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3681,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3907,"sourceUnit":3993,"src":"139:56:14","symbolAliases":[{"foreign":{"id":3682,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"147:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3686,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3907,"sourceUnit":1806,"src":"196:62:14","symbolAliases":[{"foreign":{"id":3684,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"204:12:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3685,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"218:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3907,"sourceUnit":173,"src":"259:55:14","symbolAliases":[{"foreign":{"id":3687,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"267:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3690,"name":"IERC5267","nameLocations":["1988:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":172,"src":"1988:8:14"},"id":3691,"nodeType":"InheritanceSpecifier","src":"1988:8:14"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"316:1643:14","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3906,"linearizedBaseContracts":[3906,172],"name":"EIP712","nameLocation":"1978:6:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3693,"libraryName":{"id":3692,"name":"ShortStrings","nameLocations":["2009:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1805,"src":"2009:12:14"},"nodeType":"UsingForDirective","src":"2003:25:14"},{"constant":true,"id":3698,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:14","nodeType":"VariableDeclaration","scope":3906,"src":"2034:140:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3695,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3700,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:14","nodeType":"VariableDeclaration","scope":3906,"src":"2373:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3702,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:14","nodeType":"VariableDeclaration","scope":3906,"src":"2427:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3704,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:14","nodeType":"VariableDeclaration","scope":3906,"src":"2473:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3703,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3706,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:14","nodeType":"VariableDeclaration","scope":3906,"src":"2517:37:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3708,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:14","nodeType":"VariableDeclaration","scope":3906,"src":"2560:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3711,"mutability":"immutable","name":"_name","nameLocation":"2637:5:14","nodeType":"VariableDeclaration","scope":3906,"src":"2607:35:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":3710,"nodeType":"UserDefinedTypeName","pathNode":{"id":3709,"name":"ShortString","nameLocations":["2607:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2607:11:14"},"referencedDeclaration":1594,"src":"2607:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3714,"mutability":"immutable","name":"_version","nameLocation":"2678:8:14","nodeType":"VariableDeclaration","scope":3906,"src":"2648:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"},"typeName":{"id":3713,"nodeType":"UserDefinedTypeName","pathNode":{"id":3712,"name":"ShortString","nameLocations":["2648:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"2648:11:14"},"referencedDeclaration":1594,"src":"2648:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3716,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:14","nodeType":"VariableDeclaration","scope":3906,"src":"2742:28:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3715,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3718,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:14","nodeType":"VariableDeclaration","scope":3906,"src":"2826:31:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3717,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3775,"nodeType":"Block","src":"3483:376:14","statements":[{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"3493:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3729,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"3532:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3727,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"3501:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1746,"src":"3501:30:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1594_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"src":"3493:53:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"id":3732,"nodeType":"ExpressionStatement","src":"3493:53:14"},{"expression":{"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3733,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"3556:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3736,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"3601:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3734,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3567:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:14","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1746,"src":"3567:33:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1594_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"src":"3556:62:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"id":3739,"nodeType":"ExpressionStatement","src":"3556:62:14"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3740,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3628:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3744,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"3658:4:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3742,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:14","typeDescriptions":{}}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3741,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3748,"nodeType":"ExpressionStatement","src":"3628:36:14"},{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"3674:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3753,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3707:7:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3751,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:14","typeDescriptions":{}}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3750,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3757,"nodeType":"ExpressionStatement","src":"3674:42:14"},{"expression":{"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3758,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"3727:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3759,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3762,"nodeType":"ExpressionStatement","src":"3727:30:14"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3763,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"3767:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3764,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"3792:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3767,"nodeType":"ExpressionStatement","src":"3767:48:14"},{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3768,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"3825:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3771,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}],"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3769,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:14","typeDescriptions":{}}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3774,"nodeType":"ExpressionStatement","src":"3825:27:14"}]},"documentation":{"id":3719,"nodeType":"StructuredDocumentation","src":"2864:559:14","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3776,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"name","nameLocation":"3454:4:14","nodeType":"VariableDeclaration","scope":3776,"src":"3440:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3720,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3723,"mutability":"mutable","name":"version","nameLocation":"3474:7:14","nodeType":"VariableDeclaration","scope":3776,"src":"3460:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3722,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:14"},"returnParameters":{"id":3725,"nodeType":"ParameterList","parameters":[],"src":"3483:0:14"},"scope":3906,"src":"3428:431:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3801,"nodeType":"Block","src":"4007:200:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3784,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}],"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3782,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:14","typeDescriptions":{}}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3786,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"4038:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3788,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3790,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"4070:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3799,"nodeType":"Block","src":"4146:55:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3796,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"4167:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3781,"id":3798,"nodeType":"Return","src":"4160:30:14"}]},"id":3800,"nodeType":"IfStatement","src":"4017:184:14","trueBody":{"id":3795,"nodeType":"Block","src":"4086:54:14","statements":[{"expression":{"id":3793,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"4107:22:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3781,"id":3794,"nodeType":"Return","src":"4100:29:14"}]}}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"3865:75:14","text":" @dev Returns the domain separator for the current chain."},"id":3802,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:14","nodeType":"FunctionDefinition","parameters":{"id":3778,"nodeType":"ParameterList","parameters":[],"src":"3972:2:14"},"returnParameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3802,"src":"3998:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:14"},"scope":3906,"src":"3945:262:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3822,"nodeType":"Block","src":"4277:115:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":3810,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"4315:9:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3811,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"4326:11:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3812,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"4339:14:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3813,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3817,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}],"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3815,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:14","typeDescriptions":{}}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3808,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:14","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:14","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3806,"id":3821,"nodeType":"Return","src":"4287:98:14"}]},"id":3823,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:14","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[],"src":"4243:2:14"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3823,"src":"4268:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:14"},"scope":3906,"src":"4213:179:14","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3838,"nodeType":"Block","src":"5103:90:14","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3833,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"5153:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3835,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"5175:10:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3831,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"5120:16:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3992_$","typeString":"type(library MessageHashUtils)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:14","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3991,"src":"5120:32:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3830,"id":3837,"nodeType":"Return","src":"5113:73:14"}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"4398:614:14","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3839,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:14","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:14","nodeType":"VariableDeclaration","scope":3839,"src":"5043:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:14"},"returnParameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3839,"src":"5094:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:14"},"scope":3906,"src":"5017:176:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[171],"body":{"id":3880,"nodeType":"Block","src":"5556:229:14","statements":[{"expression":{"components":[{"hexValue":"0f","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3859,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"5617:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3861,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"5644:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3863,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:14","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3867,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3906","typeString":"contract EIP712"}],"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3865,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:14","typeDescriptions":{}}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:14","typeDescriptions":{}}},"id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3874,"nodeType":"ArrayTypeName","src":"5756:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3857,"id":3879,"nodeType":"Return","src":"5566:212:14"}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"5199:24:14","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3881,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:14","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[],"src":"5249:2:14"},"returnParameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"fields","nameLocation":"5333:6:14","nodeType":"VariableDeclaration","scope":3881,"src":"5326:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3842,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"name","nameLocation":"5367:4:14","nodeType":"VariableDeclaration","scope":3881,"src":"5353:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3844,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"version","nameLocation":"5399:7:14","nodeType":"VariableDeclaration","scope":3881,"src":"5385:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3846,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:14","nodeType":"VariableDeclaration","scope":3881,"src":"5420:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:14","nodeType":"VariableDeclaration","scope":3881,"src":"5449:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3850,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"salt","nameLocation":"5496:4:14","nodeType":"VariableDeclaration","scope":3881,"src":"5488:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:14","nodeType":"VariableDeclaration","scope":3881,"src":"5514:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ArrayTypeName","src":"5514:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:14"},"scope":3906,"src":"5228:557:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3892,"nodeType":"Block","src":"6166:65:14","statements":[{"expression":{"arguments":[{"id":3889,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"6210:13:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3887,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"6183:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1773,"src":"6183:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1594_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3886,"id":3891,"nodeType":"Return","src":"6176:48:14"}]},"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"5791:256:14","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3893,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:14","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[],"src":"6125:2:14"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3893,"src":"6151:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3884,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:14"},"scope":3906,"src":"6105:126:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"6621:71:14","statements":[{"expression":{"arguments":[{"id":3901,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"6668:16:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3899,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"6638:8:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1594","typeString":"ShortString"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:14","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1773,"src":"6638:29:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1594_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1594_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3898,"id":3903,"nodeType":"Return","src":"6631:54:14"}]},"documentation":{"id":3894,"nodeType":"StructuredDocumentation","src":"6237:262:14","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:14","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[],"src":"6580:2:14"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"6606:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3896,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:14"},"scope":3906,"src":"6557:135:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3907,"src":"1960:4734:14","usedErrors":[1602,1604],"usedEvents":[152]}],"src":"113:6582:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3992],"Strings":[3331]},"id":3993,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3908,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3993,"sourceUnit":3332,"src":"149:39:15","symbolAliases":[{"foreign":{"id":3909,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"157:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"190:330:15","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3992,"linearizedBaseContracts":[3992],"name":"MessageHashUtils","nameLocation":"529:16:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3920,"nodeType":"Block","src":"1339:341:15","statements":[{"AST":{"nativeSrc":"1374:300:15","nodeType":"YulBlock","src":"1374:300:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:15","nodeType":"YulLiteral","src":"1395:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:15","nodeType":"YulLiteral","src":"1401:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:15","nodeType":"YulIdentifier","src":"1388:6:15"},"nativeSrc":"1388:48:15","nodeType":"YulFunctionCall","src":"1388:48:15"},"nativeSrc":"1388:48:15","nodeType":"YulExpressionStatement","src":"1388:48:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:15","nodeType":"YulLiteral","src":"1497:4:15","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:15","nodeType":"YulIdentifier","src":"1503:11:15"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:15","nodeType":"YulIdentifier","src":"1490:6:15"},"nativeSrc":"1490:25:15","nodeType":"YulFunctionCall","src":"1490:25:15"},"nativeSrc":"1490:25:15","nodeType":"YulExpressionStatement","src":"1490:25:15"},{"nativeSrc":"1569:31:15","nodeType":"YulAssignment","src":"1569:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:15","nodeType":"YulLiteral","src":"1589:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:15","nodeType":"YulLiteral","src":"1595:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:15","nodeType":"YulIdentifier","src":"1579:9:15"},"nativeSrc":"1579:21:15","nodeType":"YulFunctionCall","src":"1579:21:15"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:15","nodeType":"YulIdentifier","src":"1569:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3917,"isOffset":false,"isSlot":false,"src":"1569:6:15","valueSize":1},{"declaration":3914,"isOffset":false,"isSlot":false,"src":"1503:11:15","valueSize":1}],"flags":["memory-safe"],"id":3919,"nodeType":"InlineAssembly","src":"1349:325:15"}]},"documentation":{"id":3912,"nodeType":"StructuredDocumentation","src":"552:690:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:15","nodeType":"FunctionDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:15","nodeType":"VariableDeclaration","scope":3921,"src":"1279:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:15"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"digest","nameLocation":"1331:6:15","nodeType":"VariableDeclaration","scope":3921,"src":"1323:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:15"},"scope":3992,"src":"1247:433:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3946,"nodeType":"Block","src":"2257:143:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3938,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"2366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:15","memberName":"length","nodeType":"MemberAccess","src":"2366:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3936,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"2349:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3331_$","typeString":"type(library Strings)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"2349:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3934,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:15","typeDescriptions":{}}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3942,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"2384:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3930,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:15","typeDescriptions":{}}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:15","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3929,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3928,"id":3945,"nodeType":"Return","src":"2267:126:15"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"1686:480:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3947,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:15","nodeType":"FunctionDefinition","parameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"message","nameLocation":"2216:7:15","nodeType":"VariableDeclaration","scope":3947,"src":"2203:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3923,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:15"},"returnParameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3947,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:15"},"scope":3992,"src":"2171:229:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"2854:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3961,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2910:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3962,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"2921:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3958,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3957,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3956,"id":3965,"nodeType":"Return","src":"2864:63:15"}]},"documentation":{"id":3948,"nodeType":"StructuredDocumentation","src":"2406:332:15","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:15","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"validator","nameLocation":"2792:9:15","nodeType":"VariableDeclaration","scope":3967,"src":"2784:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3949,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"data","nameLocation":"2816:4:15","nodeType":"VariableDeclaration","scope":3967,"src":"2803:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3951,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:15"},"returnParameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3967,"src":"2845:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:15"},"scope":3992,"src":"2743:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"3216:216:15","statements":[{"AST":{"nativeSrc":"3251:175:15","nodeType":"YulBlock","src":"3251:175:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:15","nodeType":"YulLiteral","src":"3272:4:15","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:15","nodeType":"YulLiteral","src":"3278:10:15","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:15","nodeType":"YulIdentifier","src":"3265:6:15"},"nativeSrc":"3265:24:15","nodeType":"YulFunctionCall","src":"3265:24:15"},"nativeSrc":"3265:24:15","nodeType":"YulExpressionStatement","src":"3265:24:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:15","nodeType":"YulLiteral","src":"3309:4:15","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:15","nodeType":"YulLiteral","src":"3319:2:15","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:15","nodeType":"YulIdentifier","src":"3323:9:15"}],"functionName":{"name":"shl","nativeSrc":"3315:3:15","nodeType":"YulIdentifier","src":"3315:3:15"},"nativeSrc":"3315:18:15","nodeType":"YulFunctionCall","src":"3315:18:15"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:15","nodeType":"YulIdentifier","src":"3302:6:15"},"nativeSrc":"3302:32:15","nodeType":"YulFunctionCall","src":"3302:32:15"},"nativeSrc":"3302:32:15","nodeType":"YulExpressionStatement","src":"3302:32:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:15","nodeType":"YulLiteral","src":"3354:4:15","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:15","nodeType":"YulIdentifier","src":"3360:11:15"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:15","nodeType":"YulIdentifier","src":"3347:6:15"},"nativeSrc":"3347:25:15","nodeType":"YulFunctionCall","src":"3347:25:15"},"nativeSrc":"3347:25:15","nodeType":"YulExpressionStatement","src":"3347:25:15"},{"nativeSrc":"3385:31:15","nodeType":"YulAssignment","src":"3385:31:15","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:15","nodeType":"YulLiteral","src":"3405:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:15","nodeType":"YulLiteral","src":"3411:4:15","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:15","nodeType":"YulIdentifier","src":"3395:9:15"},"nativeSrc":"3395:21:15","nodeType":"YulFunctionCall","src":"3395:21:15"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:15","nodeType":"YulIdentifier","src":"3385:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3975,"isOffset":false,"isSlot":false,"src":"3385:6:15","valueSize":1},{"declaration":3972,"isOffset":false,"isSlot":false,"src":"3360:11:15","valueSize":1},{"declaration":3970,"isOffset":false,"isSlot":false,"src":"3323:9:15","valueSize":1}],"flags":["memory-safe"],"id":3977,"nodeType":"InlineAssembly","src":"3226:200:15"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"2940:129:15","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:15","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"validator","nameLocation":"3132:9:15","nodeType":"VariableDeclaration","scope":3979,"src":"3124:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3969,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3972,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:15","nodeType":"VariableDeclaration","scope":3979,"src":"3151:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:15"},"returnParameters":{"id":3976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"digest","nameLocation":"3208:6:15","nodeType":"VariableDeclaration","scope":3979,"src":"3200:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:15"},"scope":3992,"src":"3074:358:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3990,"nodeType":"Block","src":"3983:265:15","statements":[{"AST":{"nativeSrc":"4018:224:15","nodeType":"YulBlock","src":"4018:224:15","statements":[{"nativeSrc":"4032:22:15","nodeType":"YulVariableDeclaration","src":"4032:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:15","nodeType":"YulLiteral","src":"4049:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:15","nodeType":"YulIdentifier","src":"4043:5:15"},"nativeSrc":"4043:11:15","nodeType":"YulFunctionCall","src":"4043:11:15"},"variables":[{"name":"ptr","nativeSrc":"4036:3:15","nodeType":"YulTypedName","src":"4036:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:15","nodeType":"YulIdentifier","src":"4074:3:15"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:15","nodeType":"YulLiteral","src":"4079:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:15","nodeType":"YulIdentifier","src":"4067:6:15"},"nativeSrc":"4067:23:15","nodeType":"YulFunctionCall","src":"4067:23:15"},"nativeSrc":"4067:23:15","nodeType":"YulExpressionStatement","src":"4067:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:15","nodeType":"YulIdentifier","src":"4114:3:15"},{"kind":"number","nativeSrc":"4119:4:15","nodeType":"YulLiteral","src":"4119:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:15","nodeType":"YulIdentifier","src":"4110:3:15"},"nativeSrc":"4110:14:15","nodeType":"YulFunctionCall","src":"4110:14:15"},{"name":"domainSeparator","nativeSrc":"4126:15:15","nodeType":"YulIdentifier","src":"4126:15:15"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:15","nodeType":"YulIdentifier","src":"4103:6:15"},"nativeSrc":"4103:39:15","nodeType":"YulFunctionCall","src":"4103:39:15"},"nativeSrc":"4103:39:15","nodeType":"YulExpressionStatement","src":"4103:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:15","nodeType":"YulIdentifier","src":"4166:3:15"},{"kind":"number","nativeSrc":"4171:4:15","nodeType":"YulLiteral","src":"4171:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:15","nodeType":"YulIdentifier","src":"4162:3:15"},"nativeSrc":"4162:14:15","nodeType":"YulFunctionCall","src":"4162:14:15"},{"name":"structHash","nativeSrc":"4178:10:15","nodeType":"YulIdentifier","src":"4178:10:15"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:15","nodeType":"YulIdentifier","src":"4155:6:15"},"nativeSrc":"4155:34:15","nodeType":"YulFunctionCall","src":"4155:34:15"},"nativeSrc":"4155:34:15","nodeType":"YulExpressionStatement","src":"4155:34:15"},{"nativeSrc":"4202:30:15","nodeType":"YulAssignment","src":"4202:30:15","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:15","nodeType":"YulIdentifier","src":"4222:3:15"},{"kind":"number","nativeSrc":"4227:4:15","nodeType":"YulLiteral","src":"4227:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:15","nodeType":"YulIdentifier","src":"4212:9:15"},"nativeSrc":"4212:20:15","nodeType":"YulFunctionCall","src":"4212:20:15"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:15","nodeType":"YulIdentifier","src":"4202:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3987,"isOffset":false,"isSlot":false,"src":"4202:6:15","valueSize":1},{"declaration":3982,"isOffset":false,"isSlot":false,"src":"4126:15:15","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"4178:10:15","valueSize":1}],"flags":["memory-safe"],"id":3989,"nodeType":"InlineAssembly","src":"3993:249:15"}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"3438:431:15","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:15","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:15","nodeType":"VariableDeclaration","scope":3991,"src":"3899:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:15","nodeType":"VariableDeclaration","scope":3991,"src":"3924:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:15"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"digest","nameLocation":"3975:6:15","nodeType":"VariableDeclaration","scope":3991,"src":"3967:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:15"},"scope":3992,"src":"3874:374:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3993,"src":"521:3729:15","usedErrors":[],"usedEvents":[]}],"src":"123:4128:15"},"id":15},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4016],"IERC165":[4028]},"id":4017,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3994,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3996,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4017,"sourceUnit":4029,"src":"140:38:16","symbolAliases":[{"foreign":{"id":3995,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"148:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3998,"name":"IERC165","nameLocations":["688:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"688:7:16"},"id":3999,"nodeType":"InheritanceSpecifier","src":"688:7:16"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3997,"nodeType":"StructuredDocumentation","src":"180:479:16","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4016,"linearizedBaseContracts":[4016,4028],"name":"ERC165","nameLocation":"678:6:16","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4027],"body":{"id":4014,"nodeType":"Block","src":"812:64:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4007,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"829:11:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4009,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"849:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4028_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4028_$","typeString":"type(contract IERC165)"}],"id":4008,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4028","typeString":"type(contract IERC165)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:16","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4006,"id":4013,"nodeType":"Return","src":"822:47:16"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"702:23:16","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4015,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:16","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4002,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:16","nodeType":"VariableDeclaration","scope":4015,"src":"757:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4001,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:16"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4015,"src":"806:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4004,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:16"},"scope":4016,"src":"730:146:16","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4017,"src":"660:218:16","usedErrors":[],"usedEvents":[]}],"src":"114:765:16"},"id":16},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4028]},"id":4029,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4018,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"142:280:17","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4028,"linearizedBaseContracts":[4028],"name":"IERC165","nameLocation":"433:7:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"447:340:17","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4027,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:17","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:17","nodeType":"VariableDeclaration","scope":4027,"src":"819:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4021,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:17"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4027,"src":"862:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4024,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:17"},"scope":4028,"src":"792:76:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4029,"src":"423:447:17","usedErrors":[],"usedEvents":[]}],"src":"115:756:17"},"id":17},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5649],"Panic":[1588],"SafeCast":[7414]},"id":5650,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4030,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4032,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5650,"sourceUnit":1589,"src":"129:35:18","symbolAliases":[{"foreign":{"id":4031,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"137:5:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4034,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5650,"sourceUnit":7415,"src":"165:40:18","symbolAliases":[{"foreign":{"id":4033,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"207:73:18","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5649,"linearizedBaseContracts":[5649],"name":"Math","nameLocation":"289:4:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4040,"members":[{"id":4036,"name":"Floor","nameLocation":"324:5:18","nodeType":"EnumValue","src":"324:5:18"},{"id":4037,"name":"Ceil","nameLocation":"367:4:18","nodeType":"EnumValue","src":"367:4:18"},{"id":4038,"name":"Trunc","nameLocation":"409:5:18","nodeType":"EnumValue","src":"409:5:18"},{"id":4039,"name":"Expand","nameLocation":"439:6:18","nodeType":"EnumValue","src":"439:6:18"}],"name":"Rounding","nameLocation":"305:8:18","nodeType":"EnumDefinition","src":"300:169:18"},{"body":{"id":4053,"nodeType":"Block","src":"731:112:18","statements":[{"AST":{"nativeSrc":"766:71:18","nodeType":"YulBlock","src":"766:71:18","statements":[{"nativeSrc":"780:16:18","nodeType":"YulAssignment","src":"780:16:18","value":{"arguments":[{"name":"a","nativeSrc":"791:1:18","nodeType":"YulIdentifier","src":"791:1:18"},{"name":"b","nativeSrc":"794:1:18","nodeType":"YulIdentifier","src":"794:1:18"}],"functionName":{"name":"add","nativeSrc":"787:3:18","nodeType":"YulIdentifier","src":"787:3:18"},"nativeSrc":"787:9:18","nodeType":"YulFunctionCall","src":"787:9:18"},"variableNames":[{"name":"low","nativeSrc":"780:3:18","nodeType":"YulIdentifier","src":"780:3:18"}]},{"nativeSrc":"809:18:18","nodeType":"YulAssignment","src":"809:18:18","value":{"arguments":[{"name":"low","nativeSrc":"820:3:18","nodeType":"YulIdentifier","src":"820:3:18"},{"name":"a","nativeSrc":"825:1:18","nodeType":"YulIdentifier","src":"825:1:18"}],"functionName":{"name":"lt","nativeSrc":"817:2:18","nodeType":"YulIdentifier","src":"817:2:18"},"nativeSrc":"817:10:18","nodeType":"YulFunctionCall","src":"817:10:18"},"variableNames":[{"name":"high","nativeSrc":"809:4:18","nodeType":"YulIdentifier","src":"809:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4043,"isOffset":false,"isSlot":false,"src":"791:1:18","valueSize":1},{"declaration":4043,"isOffset":false,"isSlot":false,"src":"825:1:18","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"794:1:18","valueSize":1},{"declaration":4048,"isOffset":false,"isSlot":false,"src":"809:4:18","valueSize":1},{"declaration":4050,"isOffset":false,"isSlot":false,"src":"780:3:18","valueSize":1},{"declaration":4050,"isOffset":false,"isSlot":false,"src":"820:3:18","valueSize":1}],"flags":["memory-safe"],"id":4052,"nodeType":"InlineAssembly","src":"741:96:18"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"475:163:18","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4054,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:18","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"a","nameLocation":"667:1:18","nodeType":"VariableDeclaration","scope":4054,"src":"659:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"b","nameLocation":"678:1:18","nodeType":"VariableDeclaration","scope":4054,"src":"670:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:18"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"high","nameLocation":"712:4:18","nodeType":"VariableDeclaration","scope":4054,"src":"704:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"low","nameLocation":"726:3:18","nodeType":"VariableDeclaration","scope":4054,"src":"718:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:18"},"scope":5649,"src":"643:200:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4067,"nodeType":"Block","src":"1115:462:18","statements":[{"AST":{"nativeSrc":"1437:134:18","nodeType":"YulBlock","src":"1437:134:18","statements":[{"nativeSrc":"1451:30:18","nodeType":"YulVariableDeclaration","src":"1451:30:18","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:18","nodeType":"YulIdentifier","src":"1468:1:18"},{"name":"b","nativeSrc":"1471:1:18","nodeType":"YulIdentifier","src":"1471:1:18"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:18","nodeType":"YulLiteral","src":"1478:1:18","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:18","nodeType":"YulIdentifier","src":"1474:3:18"},"nativeSrc":"1474:6:18","nodeType":"YulFunctionCall","src":"1474:6:18"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:18","nodeType":"YulIdentifier","src":"1461:6:18"},"nativeSrc":"1461:20:18","nodeType":"YulFunctionCall","src":"1461:20:18"},"variables":[{"name":"mm","nativeSrc":"1455:2:18","nodeType":"YulTypedName","src":"1455:2:18","type":""}]},{"nativeSrc":"1494:16:18","nodeType":"YulAssignment","src":"1494:16:18","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:18","nodeType":"YulIdentifier","src":"1505:1:18"},{"name":"b","nativeSrc":"1508:1:18","nodeType":"YulIdentifier","src":"1508:1:18"}],"functionName":{"name":"mul","nativeSrc":"1501:3:18","nodeType":"YulIdentifier","src":"1501:3:18"},"nativeSrc":"1501:9:18","nodeType":"YulFunctionCall","src":"1501:9:18"},"variableNames":[{"name":"low","nativeSrc":"1494:3:18","nodeType":"YulIdentifier","src":"1494:3:18"}]},{"nativeSrc":"1523:38:18","nodeType":"YulAssignment","src":"1523:38:18","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:18","nodeType":"YulIdentifier","src":"1539:2:18"},{"name":"low","nativeSrc":"1543:3:18","nodeType":"YulIdentifier","src":"1543:3:18"}],"functionName":{"name":"sub","nativeSrc":"1535:3:18","nodeType":"YulIdentifier","src":"1535:3:18"},"nativeSrc":"1535:12:18","nodeType":"YulFunctionCall","src":"1535:12:18"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:18","nodeType":"YulIdentifier","src":"1552:2:18"},{"name":"low","nativeSrc":"1556:3:18","nodeType":"YulIdentifier","src":"1556:3:18"}],"functionName":{"name":"lt","nativeSrc":"1549:2:18","nodeType":"YulIdentifier","src":"1549:2:18"},"nativeSrc":"1549:11:18","nodeType":"YulFunctionCall","src":"1549:11:18"}],"functionName":{"name":"sub","nativeSrc":"1531:3:18","nodeType":"YulIdentifier","src":"1531:3:18"},"nativeSrc":"1531:30:18","nodeType":"YulFunctionCall","src":"1531:30:18"},"variableNames":[{"name":"high","nativeSrc":"1523:4:18","nodeType":"YulIdentifier","src":"1523:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4057,"isOffset":false,"isSlot":false,"src":"1468:1:18","valueSize":1},{"declaration":4057,"isOffset":false,"isSlot":false,"src":"1505:1:18","valueSize":1},{"declaration":4059,"isOffset":false,"isSlot":false,"src":"1471:1:18","valueSize":1},{"declaration":4059,"isOffset":false,"isSlot":false,"src":"1508:1:18","valueSize":1},{"declaration":4062,"isOffset":false,"isSlot":false,"src":"1523:4:18","valueSize":1},{"declaration":4064,"isOffset":false,"isSlot":false,"src":"1494:3:18","valueSize":1},{"declaration":4064,"isOffset":false,"isSlot":false,"src":"1543:3:18","valueSize":1},{"declaration":4064,"isOffset":false,"isSlot":false,"src":"1556:3:18","valueSize":1}],"flags":["memory-safe"],"id":4066,"nodeType":"InlineAssembly","src":"1412:159:18"}]},"documentation":{"id":4055,"nodeType":"StructuredDocumentation","src":"849:173:18","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4068,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:18","nodeType":"FunctionDefinition","parameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"a","nameLocation":"1051:1:18","nodeType":"VariableDeclaration","scope":4068,"src":"1043:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"b","nameLocation":"1062:1:18","nodeType":"VariableDeclaration","scope":4068,"src":"1054:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:18"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"high","nameLocation":"1096:4:18","nodeType":"VariableDeclaration","scope":4068,"src":"1088:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"low","nameLocation":"1110:3:18","nodeType":"VariableDeclaration","scope":4068,"src":"1102:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:18"},"scope":5649,"src":"1027:550:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4102,"nodeType":"Block","src":"1784:149:18","statements":[{"id":4101,"nodeType":"UncheckedBlock","src":"1794:133:18","statements":[{"assignments":[4081],"declarations":[{"constant":false,"id":4081,"mutability":"mutable","name":"c","nameLocation":"1826:1:18","nodeType":"VariableDeclaration","scope":4101,"src":"1818:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4085,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"1830:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4083,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"1834:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:18"},{"expression":{"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4086,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"1849:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"1859:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"1864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4091,"nodeType":"ExpressionStatement","src":"1849:16:18"},{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4092,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"1879:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4093,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"1888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4096,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"1908:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4094,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"1892:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"1892:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4100,"nodeType":"ExpressionStatement","src":"1879:37:18"}]}]},"documentation":{"id":4069,"nodeType":"StructuredDocumentation","src":"1583:105:18","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:18","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4071,"mutability":"mutable","name":"a","nameLocation":"1717:1:18","nodeType":"VariableDeclaration","scope":4103,"src":"1709:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4070,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4073,"mutability":"mutable","name":"b","nameLocation":"1728:1:18","nodeType":"VariableDeclaration","scope":4103,"src":"1720:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:18"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"success","nameLocation":"1759:7:18","nodeType":"VariableDeclaration","scope":4103,"src":"1754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4075,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"result","nameLocation":"1776:6:18","nodeType":"VariableDeclaration","scope":4103,"src":"1768:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:18"},"scope":5649,"src":"1693:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4137,"nodeType":"Block","src":"2143:149:18","statements":[{"id":4136,"nodeType":"UncheckedBlock","src":"2153:133:18","statements":[{"assignments":[4116],"declarations":[{"constant":false,"id":4116,"mutability":"mutable","name":"c","nameLocation":"2185:1:18","nodeType":"VariableDeclaration","scope":4136,"src":"2177:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4120,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"2189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4118,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"2193:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:18"},{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4121,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"2208:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"2218:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"2223:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4126,"nodeType":"ExpressionStatement","src":"2208:16:18"},{"expression":{"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"2238:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"2247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4131,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"2267:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4129,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"2251:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"2251:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4135,"nodeType":"ExpressionStatement","src":"2238:37:18"}]}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"1939:108:18","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4138,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:18","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"a","nameLocation":"2076:1:18","nodeType":"VariableDeclaration","scope":4138,"src":"2068:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4108,"mutability":"mutable","name":"b","nameLocation":"2087:1:18","nodeType":"VariableDeclaration","scope":4138,"src":"2079:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:18"},"returnParameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"success","nameLocation":"2118:7:18","nodeType":"VariableDeclaration","scope":4138,"src":"2113:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4110,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4113,"mutability":"mutable","name":"result","nameLocation":"2135:6:18","nodeType":"VariableDeclaration","scope":4138,"src":"2127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:18"},"scope":5649,"src":"2052:240:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4167,"nodeType":"Block","src":"2505:391:18","statements":[{"id":4166,"nodeType":"UncheckedBlock","src":"2515:375:18","statements":[{"assignments":[4151],"declarations":[{"constant":false,"id":4151,"mutability":"mutable","name":"c","nameLocation":"2547:1:18","nodeType":"VariableDeclaration","scope":4166,"src":"2539:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4155,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"2551:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:18"},{"AST":{"nativeSrc":"2595:188:18","nodeType":"YulBlock","src":"2595:188:18","statements":[{"nativeSrc":"2727:42:18","nodeType":"YulAssignment","src":"2727:42:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:18","nodeType":"YulIdentifier","src":"2748:1:18"},{"name":"a","nativeSrc":"2751:1:18","nodeType":"YulIdentifier","src":"2751:1:18"}],"functionName":{"name":"div","nativeSrc":"2744:3:18","nodeType":"YulIdentifier","src":"2744:3:18"},"nativeSrc":"2744:9:18","nodeType":"YulFunctionCall","src":"2744:9:18"},{"name":"b","nativeSrc":"2755:1:18","nodeType":"YulIdentifier","src":"2755:1:18"}],"functionName":{"name":"eq","nativeSrc":"2741:2:18","nodeType":"YulIdentifier","src":"2741:2:18"},"nativeSrc":"2741:16:18","nodeType":"YulFunctionCall","src":"2741:16:18"},{"arguments":[{"name":"a","nativeSrc":"2766:1:18","nodeType":"YulIdentifier","src":"2766:1:18"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:18","nodeType":"YulIdentifier","src":"2759:6:18"},"nativeSrc":"2759:9:18","nodeType":"YulFunctionCall","src":"2759:9:18"}],"functionName":{"name":"or","nativeSrc":"2738:2:18","nodeType":"YulIdentifier","src":"2738:2:18"},"nativeSrc":"2738:31:18","nodeType":"YulFunctionCall","src":"2738:31:18"},"variableNames":[{"name":"success","nativeSrc":"2727:7:18","nodeType":"YulIdentifier","src":"2727:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4141,"isOffset":false,"isSlot":false,"src":"2751:1:18","valueSize":1},{"declaration":4141,"isOffset":false,"isSlot":false,"src":"2766:1:18","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"2755:1:18","valueSize":1},{"declaration":4151,"isOffset":false,"isSlot":false,"src":"2748:1:18","valueSize":1},{"declaration":4146,"isOffset":false,"isSlot":false,"src":"2727:7:18","valueSize":1}],"flags":["memory-safe"],"id":4156,"nodeType":"InlineAssembly","src":"2570:213:18"},{"expression":{"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"2842:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4158,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"2851:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4161,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"2871:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4159,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"2855:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"2855:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4165,"nodeType":"ExpressionStatement","src":"2842:37:18"}]}]},"documentation":{"id":4139,"nodeType":"StructuredDocumentation","src":"2298:111:18","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4168,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:18","nodeType":"FunctionDefinition","parameters":{"id":4144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"a","nameLocation":"2438:1:18","nodeType":"VariableDeclaration","scope":4168,"src":"2430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4143,"mutability":"mutable","name":"b","nameLocation":"2449:1:18","nodeType":"VariableDeclaration","scope":4168,"src":"2441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:18"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"success","nameLocation":"2480:7:18","nodeType":"VariableDeclaration","scope":4168,"src":"2475:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4145,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"result","nameLocation":"2497:6:18","nodeType":"VariableDeclaration","scope":4168,"src":"2489:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:18"},"scope":5649,"src":"2414:482:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4188,"nodeType":"Block","src":"3111:231:18","statements":[{"id":4187,"nodeType":"UncheckedBlock","src":"3121:215:18","statements":[{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"3145:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4181,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"3155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4185,"nodeType":"ExpressionStatement","src":"3145:15:18"},{"AST":{"nativeSrc":"3199:127:18","nodeType":"YulBlock","src":"3199:127:18","statements":[{"nativeSrc":"3293:19:18","nodeType":"YulAssignment","src":"3293:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:18","nodeType":"YulIdentifier","src":"3307:1:18"},{"name":"b","nativeSrc":"3310:1:18","nodeType":"YulIdentifier","src":"3310:1:18"}],"functionName":{"name":"div","nativeSrc":"3303:3:18","nodeType":"YulIdentifier","src":"3303:3:18"},"nativeSrc":"3303:9:18","nodeType":"YulFunctionCall","src":"3303:9:18"},"variableNames":[{"name":"result","nativeSrc":"3293:6:18","nodeType":"YulIdentifier","src":"3293:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4171,"isOffset":false,"isSlot":false,"src":"3307:1:18","valueSize":1},{"declaration":4173,"isOffset":false,"isSlot":false,"src":"3310:1:18","valueSize":1},{"declaration":4178,"isOffset":false,"isSlot":false,"src":"3293:6:18","valueSize":1}],"flags":["memory-safe"],"id":4186,"nodeType":"InlineAssembly","src":"3174:152:18"}]}]},"documentation":{"id":4169,"nodeType":"StructuredDocumentation","src":"2902:113:18","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:18","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"a","nameLocation":"3044:1:18","nodeType":"VariableDeclaration","scope":4189,"src":"3036:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4170,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"b","nameLocation":"3055:1:18","nodeType":"VariableDeclaration","scope":4189,"src":"3047:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:18"},"returnParameters":{"id":4179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"success","nameLocation":"3086:7:18","nodeType":"VariableDeclaration","scope":4189,"src":"3081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4175,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"result","nameLocation":"3103:6:18","nodeType":"VariableDeclaration","scope":4189,"src":"3095:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:18"},"scope":5649,"src":"3020:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4209,"nodeType":"Block","src":"3567:231:18","statements":[{"id":4208,"nodeType":"UncheckedBlock","src":"3577:215:18","statements":[{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"3601:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4202,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3611:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4206,"nodeType":"ExpressionStatement","src":"3601:15:18"},{"AST":{"nativeSrc":"3655:127:18","nodeType":"YulBlock","src":"3655:127:18","statements":[{"nativeSrc":"3749:19:18","nodeType":"YulAssignment","src":"3749:19:18","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:18","nodeType":"YulIdentifier","src":"3763:1:18"},{"name":"b","nativeSrc":"3766:1:18","nodeType":"YulIdentifier","src":"3766:1:18"}],"functionName":{"name":"mod","nativeSrc":"3759:3:18","nodeType":"YulIdentifier","src":"3759:3:18"},"nativeSrc":"3759:9:18","nodeType":"YulFunctionCall","src":"3759:9:18"},"variableNames":[{"name":"result","nativeSrc":"3749:6:18","nodeType":"YulIdentifier","src":"3749:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4192,"isOffset":false,"isSlot":false,"src":"3763:1:18","valueSize":1},{"declaration":4194,"isOffset":false,"isSlot":false,"src":"3766:1:18","valueSize":1},{"declaration":4199,"isOffset":false,"isSlot":false,"src":"3749:6:18","valueSize":1}],"flags":["memory-safe"],"id":4207,"nodeType":"InlineAssembly","src":"3630:152:18"}]}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"3348:123:18","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4210,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:18","nodeType":"FunctionDefinition","parameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"a","nameLocation":"3500:1:18","nodeType":"VariableDeclaration","scope":4210,"src":"3492:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4194,"mutability":"mutable","name":"b","nameLocation":"3511:1:18","nodeType":"VariableDeclaration","scope":4210,"src":"3503:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:18"},"returnParameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"success","nameLocation":"3542:7:18","nodeType":"VariableDeclaration","scope":4210,"src":"3537:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4196,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"result","nameLocation":"3559:6:18","nodeType":"VariableDeclaration","scope":4210,"src":"3551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:18"},"scope":5649,"src":"3476:322:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4239,"nodeType":"Block","src":"3989:122:18","statements":[{"assignments":[4221,4223],"declarations":[{"constant":false,"id":4221,"mutability":"mutable","name":"success","nameLocation":"4005:7:18","nodeType":"VariableDeclaration","scope":4239,"src":"4000:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4220,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"result","nameLocation":"4022:6:18","nodeType":"VariableDeclaration","scope":4239,"src":"4014:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4228,"initialValue":{"arguments":[{"id":4225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"4039:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4226,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"4042:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4224,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:18"},{"expression":{"arguments":[{"id":4230,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"4069:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"4078:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4232,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:18","memberName":"max","nodeType":"MemberAccess","src":"4086:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4229,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"4061:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4219,"id":4238,"nodeType":"Return","src":"4054:50:18"}]},"documentation":{"id":4211,"nodeType":"StructuredDocumentation","src":"3804:103:18","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4240,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:18","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"a","nameLocation":"3943:1:18","nodeType":"VariableDeclaration","scope":4240,"src":"3935:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"b","nameLocation":"3954:1:18","nodeType":"VariableDeclaration","scope":4240,"src":"3946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:18"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4240,"src":"3980:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:18"},"scope":5649,"src":"3912:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"4294:73:18","statements":[{"assignments":[null,4251],"declarations":[null,{"constant":false,"id":4251,"mutability":"mutable","name":"result","nameLocation":"4315:6:18","nodeType":"VariableDeclaration","scope":4259,"src":"4307:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4256,"initialValue":{"arguments":[{"id":4253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"4332:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4254,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"4335:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4252,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"4325:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:18"},{"expression":{"id":4257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"4354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4249,"id":4258,"nodeType":"Return","src":"4347:13:18"}]},"documentation":{"id":4241,"nodeType":"StructuredDocumentation","src":"4117:95:18","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:18","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"a","nameLocation":"4248:1:18","nodeType":"VariableDeclaration","scope":4260,"src":"4240:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4245,"mutability":"mutable","name":"b","nameLocation":"4259:1:18","nodeType":"VariableDeclaration","scope":4260,"src":"4251:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:18"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"4285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:18"},"scope":5649,"src":"4217:150:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4289,"nodeType":"Block","src":"4564:122:18","statements":[{"assignments":[4271,4273],"declarations":[{"constant":false,"id":4271,"mutability":"mutable","name":"success","nameLocation":"4580:7:18","nodeType":"VariableDeclaration","scope":4289,"src":"4575:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4270,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"result","nameLocation":"4597:6:18","nodeType":"VariableDeclaration","scope":4289,"src":"4589:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4278,"initialValue":{"arguments":[{"id":4275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"4614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4276,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"4617:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4274,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"4607:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:18"},{"expression":{"arguments":[{"id":4280,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"4653:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:18","memberName":"max","nodeType":"MemberAccess","src":"4661:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4279,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"4636:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4269,"id":4288,"nodeType":"Return","src":"4629:50:18"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"4373:109:18","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4290,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:18","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"a","nameLocation":"4518:1:18","nodeType":"VariableDeclaration","scope":4290,"src":"4510:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"b","nameLocation":"4529:1:18","nodeType":"VariableDeclaration","scope":4290,"src":"4521:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:18"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4290,"src":"4555:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:18"},"scope":5649,"src":"4487:199:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"5158:207:18","statements":[{"id":4315,"nodeType":"UncheckedBlock","src":"5168:191:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"5306:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"5312:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"5316:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4309,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"5337:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4307,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"5321:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"5321:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4301,"id":4314,"nodeType":"Return","src":"5299:49:18"}]}]},"documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"4692:374:18","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:18","nodeType":"FunctionDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"condition","nameLocation":"5093:9:18","nodeType":"VariableDeclaration","scope":4317,"src":"5088:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4292,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4295,"mutability":"mutable","name":"a","nameLocation":"5112:1:18","nodeType":"VariableDeclaration","scope":4317,"src":"5104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4297,"mutability":"mutable","name":"b","nameLocation":"5123:1:18","nodeType":"VariableDeclaration","scope":4317,"src":"5115:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:18"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"5149:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:18"},"scope":5649,"src":"5071:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4335,"nodeType":"Block","src":"5502:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"5527:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"5531:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"5534:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4332,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"5537:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4327,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"5519:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4326,"id":4334,"nodeType":"Return","src":"5512:27:18"}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"5371:59:18","text":" @dev Returns the largest of two numbers."},"id":4336,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:18","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"a","nameLocation":"5456:1:18","nodeType":"VariableDeclaration","scope":4336,"src":"5448:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"b","nameLocation":"5467:1:18","nodeType":"VariableDeclaration","scope":4336,"src":"5459:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:18"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4336,"src":"5493:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:18"},"scope":5649,"src":"5435:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"5684:44:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"5709:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4348,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5713:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"5716:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5719:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4346,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"5701:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4345,"id":4353,"nodeType":"Return","src":"5694:27:18"}]},"documentation":{"id":4337,"nodeType":"StructuredDocumentation","src":"5552:60:18","text":" @dev Returns the smallest of two numbers."},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:18","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"a","nameLocation":"5638:1:18","nodeType":"VariableDeclaration","scope":4355,"src":"5630:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"b","nameLocation":"5649:1:18","nodeType":"VariableDeclaration","scope":4355,"src":"5641:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:18"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4355,"src":"5675:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:18"},"scope":5649,"src":"5617:111:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4377,"nodeType":"Block","src":"5912:82:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"5967:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"5971:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"5977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"5981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4364,"id":4376,"nodeType":"Return","src":"5959:28:18"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"5734:102:18","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4378,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:18","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"a","nameLocation":"5866:1:18","nodeType":"VariableDeclaration","scope":4378,"src":"5858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"b","nameLocation":"5877:1:18","nodeType":"VariableDeclaration","scope":4378,"src":"5869:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:18"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4378,"src":"5903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:18"},"scope":5649,"src":"5841:153:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"6286:633:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"6300:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4399,"nodeType":"IfStatement","src":"6296:150:18","trueBody":{"id":4398,"nodeType":"Block","src":"6308:138:18","statements":[{"expression":{"arguments":[{"expression":{"id":4394,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"6412:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"6412:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4391,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"6400:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"6400:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4397,"nodeType":"ExpressionStatement","src":"6400:35:18"}]}},{"id":4417,"nodeType":"UncheckedBlock","src":"6829:84:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"6876:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"6860:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"6860:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"6887:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4410,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"6896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4387,"id":4416,"nodeType":"Return","src":"6853:49:18"}]}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"6000:210:18","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:18","nodeType":"FunctionDefinition","parameters":{"id":4384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"a","nameLocation":"6240:1:18","nodeType":"VariableDeclaration","scope":4419,"src":"6232:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4380,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4383,"mutability":"mutable","name":"b","nameLocation":"6251:1:18","nodeType":"VariableDeclaration","scope":4419,"src":"6243:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:18"},"returnParameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4419,"src":"6277:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:18"},"scope":5649,"src":"6215:704:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4554,"nodeType":"Block","src":"7340:3585:18","statements":[{"id":4553,"nodeType":"UncheckedBlock","src":"7350:3569:18","statements":[{"assignments":[4432,4434],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"high","nameLocation":"7383:4:18","nodeType":"VariableDeclaration","scope":4553,"src":"7375:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4434,"mutability":"mutable","name":"low","nameLocation":"7397:3:18","nodeType":"VariableDeclaration","scope":4553,"src":"7389:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4433,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4439,"initialValue":{"arguments":[{"id":4436,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"7411:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4437,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"7414:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4435,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"7404:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"7498:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4448,"nodeType":"IfStatement","src":"7494:365:18","trueBody":{"id":4447,"nodeType":"Block","src":"7509:350:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"7827:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4444,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"7833:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4430,"id":4446,"nodeType":"Return","src":"7820:24:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"7969:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4450,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"7984:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"7965:142:18","trueBody":{"id":4466,"nodeType":"Block","src":"7990:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4456,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"8028:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4459,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"8046:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4461,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"8070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1551,"src":"8070:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4455,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"8020:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4452,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"8008:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"8008:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4465,"nodeType":"ExpressionStatement","src":"8008:84:18"}]}},{"assignments":[4469],"declarations":[{"constant":false,"id":4469,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:18","nodeType":"VariableDeclaration","scope":4553,"src":"8359:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4470,"nodeType":"VariableDeclarationStatement","src":"8359:17:18"},{"AST":{"nativeSrc":"8415:283:18","nodeType":"YulBlock","src":"8415:283:18","statements":[{"nativeSrc":"8484:38:18","nodeType":"YulAssignment","src":"8484:38:18","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:18","nodeType":"YulIdentifier","src":"8504:1:18"},{"name":"y","nativeSrc":"8507:1:18","nodeType":"YulIdentifier","src":"8507:1:18"},{"name":"denominator","nativeSrc":"8510:11:18","nodeType":"YulIdentifier","src":"8510:11:18"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:18","nodeType":"YulIdentifier","src":"8497:6:18"},"nativeSrc":"8497:25:18","nodeType":"YulFunctionCall","src":"8497:25:18"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:18","nodeType":"YulIdentifier","src":"8484:9:18"}]},{"nativeSrc":"8604:37:18","nodeType":"YulAssignment","src":"8604:37:18","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:18","nodeType":"YulIdentifier","src":"8616:4:18"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:18","nodeType":"YulIdentifier","src":"8625:9:18"},{"name":"low","nativeSrc":"8636:3:18","nodeType":"YulIdentifier","src":"8636:3:18"}],"functionName":{"name":"gt","nativeSrc":"8622:2:18","nodeType":"YulIdentifier","src":"8622:2:18"},"nativeSrc":"8622:18:18","nodeType":"YulFunctionCall","src":"8622:18:18"}],"functionName":{"name":"sub","nativeSrc":"8612:3:18","nodeType":"YulIdentifier","src":"8612:3:18"},"nativeSrc":"8612:29:18","nodeType":"YulFunctionCall","src":"8612:29:18"},"variableNames":[{"name":"high","nativeSrc":"8604:4:18","nodeType":"YulIdentifier","src":"8604:4:18"}]},{"nativeSrc":"8658:26:18","nodeType":"YulAssignment","src":"8658:26:18","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:18","nodeType":"YulIdentifier","src":"8669:3:18"},{"name":"remainder","nativeSrc":"8674:9:18","nodeType":"YulIdentifier","src":"8674:9:18"}],"functionName":{"name":"sub","nativeSrc":"8665:3:18","nodeType":"YulIdentifier","src":"8665:3:18"},"nativeSrc":"8665:19:18","nodeType":"YulFunctionCall","src":"8665:19:18"},"variableNames":[{"name":"low","nativeSrc":"8658:3:18","nodeType":"YulIdentifier","src":"8658:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4426,"isOffset":false,"isSlot":false,"src":"8510:11:18","valueSize":1},{"declaration":4432,"isOffset":false,"isSlot":false,"src":"8604:4:18","valueSize":1},{"declaration":4432,"isOffset":false,"isSlot":false,"src":"8616:4:18","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":false,"src":"8636:3:18","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":false,"src":"8658:3:18","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":false,"src":"8669:3:18","valueSize":1},{"declaration":4469,"isOffset":false,"isSlot":false,"src":"8484:9:18","valueSize":1},{"declaration":4469,"isOffset":false,"isSlot":false,"src":"8625:9:18","valueSize":1},{"declaration":4469,"isOffset":false,"isSlot":false,"src":"8674:9:18","valueSize":1},{"declaration":4422,"isOffset":false,"isSlot":false,"src":"8504:1:18","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"8507:1:18","valueSize":1}],"flags":["memory-safe"],"id":4471,"nodeType":"InlineAssembly","src":"8390:308:18"},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"twos","nameLocation":"8910:4:18","nodeType":"VariableDeclaration","scope":4553,"src":"8902:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4480,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"8917:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4476,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"8936:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:18"},{"AST":{"nativeSrc":"8987:359:18","nodeType":"YulBlock","src":"8987:359:18","statements":[{"nativeSrc":"9052:37:18","nodeType":"YulAssignment","src":"9052:37:18","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:18","nodeType":"YulIdentifier","src":"9071:11:18"},{"name":"twos","nativeSrc":"9084:4:18","nodeType":"YulIdentifier","src":"9084:4:18"}],"functionName":{"name":"div","nativeSrc":"9067:3:18","nodeType":"YulIdentifier","src":"9067:3:18"},"nativeSrc":"9067:22:18","nodeType":"YulFunctionCall","src":"9067:22:18"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:18","nodeType":"YulIdentifier","src":"9052:11:18"}]},{"nativeSrc":"9153:21:18","nodeType":"YulAssignment","src":"9153:21:18","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:18","nodeType":"YulIdentifier","src":"9164:3:18"},{"name":"twos","nativeSrc":"9169:4:18","nodeType":"YulIdentifier","src":"9169:4:18"}],"functionName":{"name":"div","nativeSrc":"9160:3:18","nodeType":"YulIdentifier","src":"9160:3:18"},"nativeSrc":"9160:14:18","nodeType":"YulFunctionCall","src":"9160:14:18"},"variableNames":[{"name":"low","nativeSrc":"9153:3:18","nodeType":"YulIdentifier","src":"9153:3:18"}]},{"nativeSrc":"9293:39:18","nodeType":"YulAssignment","src":"9293:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:18","nodeType":"YulLiteral","src":"9313:1:18","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:18","nodeType":"YulIdentifier","src":"9316:4:18"}],"functionName":{"name":"sub","nativeSrc":"9309:3:18","nodeType":"YulIdentifier","src":"9309:3:18"},"nativeSrc":"9309:12:18","nodeType":"YulFunctionCall","src":"9309:12:18"},{"name":"twos","nativeSrc":"9323:4:18","nodeType":"YulIdentifier","src":"9323:4:18"}],"functionName":{"name":"div","nativeSrc":"9305:3:18","nodeType":"YulIdentifier","src":"9305:3:18"},"nativeSrc":"9305:23:18","nodeType":"YulFunctionCall","src":"9305:23:18"},{"kind":"number","nativeSrc":"9330:1:18","nodeType":"YulLiteral","src":"9330:1:18","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:18","nodeType":"YulIdentifier","src":"9301:3:18"},"nativeSrc":"9301:31:18","nodeType":"YulFunctionCall","src":"9301:31:18"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:18","nodeType":"YulIdentifier","src":"9293:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4426,"isOffset":false,"isSlot":false,"src":"9052:11:18","valueSize":1},{"declaration":4426,"isOffset":false,"isSlot":false,"src":"9071:11:18","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":false,"src":"9153:3:18","valueSize":1},{"declaration":4434,"isOffset":false,"isSlot":false,"src":"9164:3:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"9084:4:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"9169:4:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"9293:4:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"9316:4:18","valueSize":1},{"declaration":4473,"isOffset":false,"isSlot":false,"src":"9323:4:18","valueSize":1}],"flags":["memory-safe"],"id":4481,"nodeType":"InlineAssembly","src":"8962:384:18"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4482,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"9409:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"9416:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4484,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"9423:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"9409:18:18"},{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:18","nodeType":"VariableDeclaration","scope":4553,"src":"9762:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4496,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4491,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"9785:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:18"},{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4497,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10018:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10033:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4500,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4504,"nodeType":"ExpressionStatement","src":"10018:36:18"},{"expression":{"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10088:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4507,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10103:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4508,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10117:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4512,"nodeType":"ExpressionStatement","src":"10088:36:18"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4513,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10160:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10175:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4516,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10189:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"10160:36:18"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10231:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10246:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4524,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"10231:36:18"},{"expression":{"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4529,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10304:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10319:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4532,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10333:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4536,"nodeType":"ExpressionStatement","src":"10304:36:18"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4537,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10378:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4539,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"10393:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4540,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10407:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"10378:36:18"},{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"10859:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4434,"src":"10868:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4547,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"10874:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4550,"nodeType":"ExpressionStatement","src":"10859:22:18"},{"expression":{"id":4551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"10902:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4430,"id":4552,"nodeType":"Return","src":"10895:13:18"}]}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"6925:312:18","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4555,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:18","nodeType":"FunctionDefinition","parameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"x","nameLocation":"7266:1:18","nodeType":"VariableDeclaration","scope":4555,"src":"7258:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"y","nameLocation":"7277:1:18","nodeType":"VariableDeclaration","scope":4555,"src":"7269:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4426,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:18","nodeType":"VariableDeclaration","scope":4555,"src":"7280:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:18"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"result","nameLocation":"7332:6:18","nodeType":"VariableDeclaration","scope":4555,"src":"7324:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:18"},"scope":5649,"src":"7242:3683:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4591,"nodeType":"Block","src":"11164:128:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4571,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"11188:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4572,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"11191:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4573,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"11194:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4570,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4555,4592],"referencedDeclaration":4555,"src":"11181:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4578,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"11242:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":4577,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"11225:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4040_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4581,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"11262:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4582,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"11265:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4583,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"11268:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4580,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4575,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"11209:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"11209:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4569,"id":4590,"nodeType":"Return","src":"11174:111:18"}]},"documentation":{"id":4556,"nodeType":"StructuredDocumentation","src":"10931:118:18","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4592,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:18","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"mutability":"mutable","name":"x","nameLocation":"11078:1:18","nodeType":"VariableDeclaration","scope":4592,"src":"11070:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4560,"mutability":"mutable","name":"y","nameLocation":"11089:1:18","nodeType":"VariableDeclaration","scope":4592,"src":"11081:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:18","nodeType":"VariableDeclaration","scope":4592,"src":"11092:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:18","nodeType":"VariableDeclaration","scope":4592,"src":"11113:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":4564,"nodeType":"UserDefinedTypeName","pathNode":{"id":4563,"name":"Rounding","nameLocations":["11113:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"11113:8:18"},"referencedDeclaration":4040,"src":"11113:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:18"},"returnParameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4592,"src":"11155:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:18"},"scope":5649,"src":"11054:238:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4641,"nodeType":"Block","src":"11500:245:18","statements":[{"id":4640,"nodeType":"UncheckedBlock","src":"11510:229:18","statements":[{"assignments":[4605,4607],"declarations":[{"constant":false,"id":4605,"mutability":"mutable","name":"high","nameLocation":"11543:4:18","nodeType":"VariableDeclaration","scope":4640,"src":"11535:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"low","nameLocation":"11557:3:18","nodeType":"VariableDeclaration","scope":4640,"src":"11549:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4606,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4612,"initialValue":{"arguments":[{"id":4609,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"11571:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4610,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11574:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4608,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"11564:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"11594:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4615,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"11607:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4626,"nodeType":"IfStatement","src":"11590:86:18","trueBody":{"id":4625,"nodeType":"Block","src":"11610:66:18","statements":[{"expression":{"arguments":[{"expression":{"id":4621,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"11640:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:18","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1551,"src":"11640:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4618,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"11628:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"11628:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4624,"nodeType":"ExpressionStatement","src":"11628:33:18"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"11697:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4629,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"11712:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4633,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"11719:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4635,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"11726:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4603,"id":4639,"nodeType":"Return","src":"11689:39:18"}]}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"11298:111:18","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:18","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"x","nameLocation":"11438:1:18","nodeType":"VariableDeclaration","scope":4642,"src":"11430:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"y","nameLocation":"11449:1:18","nodeType":"VariableDeclaration","scope":4642,"src":"11441:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"n","nameLocation":"11458:1:18","nodeType":"VariableDeclaration","scope":4642,"src":"11452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4598,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:18"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"result","nameLocation":"11492:6:18","nodeType":"VariableDeclaration","scope":4642,"src":"11484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:18"},"scope":5649,"src":"11414:331:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4680,"nodeType":"Block","src":"11963:113:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4658,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"11987:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4659,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"11990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4660,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"11993:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4657,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4642,4681],"referencedDeclaration":4642,"src":"11980:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4665,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"12031:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":4664,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"12014:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4040_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4668,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"12051:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4669,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"12054:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4671,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"12062:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4667,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4662,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"11998:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"11998:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4656,"id":4679,"nodeType":"Return","src":"11973:96:18"}]},"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"11751:109:18","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4681,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:18","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"x","nameLocation":"11889:1:18","nodeType":"VariableDeclaration","scope":4681,"src":"11881:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"y","nameLocation":"11900:1:18","nodeType":"VariableDeclaration","scope":4681,"src":"11892:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"n","nameLocation":"11909:1:18","nodeType":"VariableDeclaration","scope":4681,"src":"11903:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4648,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:18","nodeType":"VariableDeclaration","scope":4681,"src":"11912:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":4651,"nodeType":"UserDefinedTypeName","pathNode":{"id":4650,"name":"Rounding","nameLocations":["11912:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"11912:8:18"},"referencedDeclaration":4040,"src":"11912:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:18"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4681,"src":"11954:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:18"},"scope":5649,"src":"11865:211:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"12710:1849:18","statements":[{"id":4776,"nodeType":"UncheckedBlock","src":"12720:1833:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4691,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"12748:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4696,"nodeType":"IfStatement","src":"12744:20:18","trueBody":{"expression":{"hexValue":"30","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4690,"id":4695,"nodeType":"Return","src":"12756:8:18"}},{"assignments":[4698],"declarations":[{"constant":false,"id":4698,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:18","nodeType":"VariableDeclaration","scope":4776,"src":"13235:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4702,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"13255:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4700,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"13259:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:18"},{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:18","nodeType":"VariableDeclaration","scope":4776,"src":"13274:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4706,"initialValue":{"id":4705,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"13288:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:18"},{"assignments":[4708],"declarations":[{"constant":false,"id":4708,"mutability":"mutable","name":"x","nameLocation":"13432:1:18","nodeType":"VariableDeclaration","scope":4776,"src":"13425:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4707,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4710,"initialValue":{"hexValue":"30","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:18"},{"assignments":[4712],"declarations":[{"constant":false,"id":4712,"mutability":"mutable","name":"y","nameLocation":"13458:1:18","nodeType":"VariableDeclaration","scope":4776,"src":"13451:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4711,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4714,"initialValue":{"hexValue":"31","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:18"},{"body":{"id":4751,"nodeType":"Block","src":"13501:882:18","statements":[{"assignments":[4719],"declarations":[{"constant":false,"id":4719,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:18","nodeType":"VariableDeclaration","scope":4751,"src":"13519:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4723,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"13538:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4721,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"13544:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:18"},{"expression":{"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4724,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"13573:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4725,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"13578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4726,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4727,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"13678:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"13923:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4729,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"13929:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4730,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"13941:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4735,"nodeType":"ExpressionStatement","src":"13572:395:18"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4736,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"13987:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4737,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"13990:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4739,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"14072:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"14326:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"14330:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4744,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"14341:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4742,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:18","typeDescriptions":{}}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4750,"nodeType":"ExpressionStatement","src":"13986:382:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"13485:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4752,"nodeType":"WhileStatement","src":"13478:905:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"14401:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4758,"nodeType":"IfStatement","src":"14397:22:18","trueBody":{"expression":{"hexValue":"30","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4690,"id":4757,"nodeType":"Return","src":"14411:8:18"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"14470:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"14477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:18","subExpression":{"id":4766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"14490:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:18","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4772,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"14502:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:18","typeDescriptions":{}}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4759,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"14462:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4690,"id":4775,"nodeType":"Return","src":"14455:50:18"}]}]},"documentation":{"id":4682,"nodeType":"StructuredDocumentation","src":"12082:553:18","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:18","nodeType":"FunctionDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"mutability":"mutable","name":"a","nameLocation":"12664:1:18","nodeType":"VariableDeclaration","scope":4778,"src":"12656:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4686,"mutability":"mutable","name":"n","nameLocation":"12675:1:18","nodeType":"VariableDeclaration","scope":4778,"src":"12667:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:18"},"returnParameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"12701:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:18"},"scope":5649,"src":"12640:1919:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4798,"nodeType":"Block","src":"15159:82:18","statements":[{"id":4797,"nodeType":"UncheckedBlock","src":"15169:66:18","statements":[{"expression":{"arguments":[{"id":4790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"15212:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"15215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4794,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"15222:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4788,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"15200:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5649_$","typeString":"type(library Math)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:18","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4835,"src":"15200:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4787,"id":4796,"nodeType":"Return","src":"15193:31:18"}]}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"14565:514:18","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4799,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:18","nodeType":"FunctionDefinition","parameters":{"id":4784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"a","nameLocation":"15113:1:18","nodeType":"VariableDeclaration","scope":4799,"src":"15105:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4783,"mutability":"mutable","name":"p","nameLocation":"15124:1:18","nodeType":"VariableDeclaration","scope":4799,"src":"15116:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:18"},"returnParameters":{"id":4787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"15150:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:18"},"scope":5649,"src":"15084:157:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4834,"nodeType":"Block","src":"16011:174:18","statements":[{"assignments":[4812,4814],"declarations":[{"constant":false,"id":4812,"mutability":"mutable","name":"success","nameLocation":"16027:7:18","nodeType":"VariableDeclaration","scope":4834,"src":"16022:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4811,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4814,"mutability":"mutable","name":"result","nameLocation":"16044:6:18","nodeType":"VariableDeclaration","scope":4834,"src":"16036:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4820,"initialValue":{"arguments":[{"id":4816,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"16064:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4817,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"16067:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4818,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4806,"src":"16070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4815,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4859,4941],"referencedDeclaration":4859,"src":"16054:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:18"},{"condition":{"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:18","subExpression":{"id":4821,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"16087:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4831,"nodeType":"IfStatement","src":"16082:74:18","trueBody":{"id":4830,"nodeType":"Block","src":"16096:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4826,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"16122:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"16122:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4823,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"16110:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"16110:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4829,"nodeType":"ExpressionStatement","src":"16110:35:18"}]}},{"expression":{"id":4832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"16172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4810,"id":4833,"nodeType":"Return","src":"16165:13:18"}]},"documentation":{"id":4800,"nodeType":"StructuredDocumentation","src":"15247:678:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4835,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:18","nodeType":"FunctionDefinition","parameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"b","nameLocation":"15954:1:18","nodeType":"VariableDeclaration","scope":4835,"src":"15946:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4804,"mutability":"mutable","name":"e","nameLocation":"15965:1:18","nodeType":"VariableDeclaration","scope":4835,"src":"15957:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4806,"mutability":"mutable","name":"m","nameLocation":"15976:1:18","nodeType":"VariableDeclaration","scope":4835,"src":"15968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:18"},"returnParameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4835,"src":"16002:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:18"},"scope":5649,"src":"15930:255:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4858,"nodeType":"Block","src":"17039:1493:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"17053:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4856,"nodeType":"IfStatement","src":"17049:29:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4848,"id":4855,"nodeType":"Return","src":"17061:17:18"}},{"AST":{"nativeSrc":"17113:1413:18","nodeType":"YulBlock","src":"17113:1413:18","statements":[{"nativeSrc":"17127:22:18","nodeType":"YulVariableDeclaration","src":"17127:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:18","nodeType":"YulLiteral","src":"17144:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:18","nodeType":"YulIdentifier","src":"17138:5:18"},"nativeSrc":"17138:11:18","nodeType":"YulFunctionCall","src":"17138:11:18"},"variables":[{"name":"ptr","nativeSrc":"17131:3:18","nodeType":"YulTypedName","src":"17131:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:18","nodeType":"YulIdentifier","src":"18057:3:18"},{"kind":"number","nativeSrc":"18062:4:18","nodeType":"YulLiteral","src":"18062:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:18","nodeType":"YulIdentifier","src":"18050:6:18"},"nativeSrc":"18050:17:18","nodeType":"YulFunctionCall","src":"18050:17:18"},"nativeSrc":"18050:17:18","nodeType":"YulExpressionStatement","src":"18050:17:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:18","nodeType":"YulIdentifier","src":"18091:3:18"},{"kind":"number","nativeSrc":"18096:4:18","nodeType":"YulLiteral","src":"18096:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:18","nodeType":"YulIdentifier","src":"18087:3:18"},"nativeSrc":"18087:14:18","nodeType":"YulFunctionCall","src":"18087:14:18"},{"kind":"number","nativeSrc":"18103:4:18","nodeType":"YulLiteral","src":"18103:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:18","nodeType":"YulIdentifier","src":"18080:6:18"},"nativeSrc":"18080:28:18","nodeType":"YulFunctionCall","src":"18080:28:18"},"nativeSrc":"18080:28:18","nodeType":"YulExpressionStatement","src":"18080:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:18","nodeType":"YulIdentifier","src":"18132:3:18"},{"kind":"number","nativeSrc":"18137:4:18","nodeType":"YulLiteral","src":"18137:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:18","nodeType":"YulIdentifier","src":"18128:3:18"},"nativeSrc":"18128:14:18","nodeType":"YulFunctionCall","src":"18128:14:18"},{"kind":"number","nativeSrc":"18144:4:18","nodeType":"YulLiteral","src":"18144:4:18","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:18","nodeType":"YulIdentifier","src":"18121:6:18"},"nativeSrc":"18121:28:18","nodeType":"YulFunctionCall","src":"18121:28:18"},"nativeSrc":"18121:28:18","nodeType":"YulExpressionStatement","src":"18121:28:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:18","nodeType":"YulIdentifier","src":"18173:3:18"},{"kind":"number","nativeSrc":"18178:4:18","nodeType":"YulLiteral","src":"18178:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:18","nodeType":"YulIdentifier","src":"18169:3:18"},"nativeSrc":"18169:14:18","nodeType":"YulFunctionCall","src":"18169:14:18"},{"name":"b","nativeSrc":"18185:1:18","nodeType":"YulIdentifier","src":"18185:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:18","nodeType":"YulIdentifier","src":"18162:6:18"},"nativeSrc":"18162:25:18","nodeType":"YulFunctionCall","src":"18162:25:18"},"nativeSrc":"18162:25:18","nodeType":"YulExpressionStatement","src":"18162:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:18","nodeType":"YulIdentifier","src":"18211:3:18"},{"kind":"number","nativeSrc":"18216:4:18","nodeType":"YulLiteral","src":"18216:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:18","nodeType":"YulIdentifier","src":"18207:3:18"},"nativeSrc":"18207:14:18","nodeType":"YulFunctionCall","src":"18207:14:18"},{"name":"e","nativeSrc":"18223:1:18","nodeType":"YulIdentifier","src":"18223:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:18","nodeType":"YulIdentifier","src":"18200:6:18"},"nativeSrc":"18200:25:18","nodeType":"YulFunctionCall","src":"18200:25:18"},"nativeSrc":"18200:25:18","nodeType":"YulExpressionStatement","src":"18200:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:18","nodeType":"YulIdentifier","src":"18249:3:18"},{"kind":"number","nativeSrc":"18254:4:18","nodeType":"YulLiteral","src":"18254:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:18","nodeType":"YulIdentifier","src":"18245:3:18"},"nativeSrc":"18245:14:18","nodeType":"YulFunctionCall","src":"18245:14:18"},{"name":"m","nativeSrc":"18261:1:18","nodeType":"YulIdentifier","src":"18261:1:18"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:18","nodeType":"YulIdentifier","src":"18238:6:18"},"nativeSrc":"18238:25:18","nodeType":"YulFunctionCall","src":"18238:25:18"},"nativeSrc":"18238:25:18","nodeType":"YulExpressionStatement","src":"18238:25:18"},{"nativeSrc":"18425:57:18","nodeType":"YulAssignment","src":"18425:57:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:18","nodeType":"YulIdentifier","src":"18447:3:18"},"nativeSrc":"18447:5:18","nodeType":"YulFunctionCall","src":"18447:5:18"},{"kind":"number","nativeSrc":"18454:4:18","nodeType":"YulLiteral","src":"18454:4:18","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:18","nodeType":"YulIdentifier","src":"18460:3:18"},{"kind":"number","nativeSrc":"18465:4:18","nodeType":"YulLiteral","src":"18465:4:18","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:18","nodeType":"YulLiteral","src":"18471:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:18","nodeType":"YulLiteral","src":"18477:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:18","nodeType":"YulIdentifier","src":"18436:10:18"},"nativeSrc":"18436:46:18","nodeType":"YulFunctionCall","src":"18436:46:18"},"variableNames":[{"name":"success","nativeSrc":"18425:7:18","nodeType":"YulIdentifier","src":"18425:7:18"}]},{"nativeSrc":"18495:21:18","nodeType":"YulAssignment","src":"18495:21:18","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:18","nodeType":"YulLiteral","src":"18511:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:18","nodeType":"YulIdentifier","src":"18505:5:18"},"nativeSrc":"18505:11:18","nodeType":"YulFunctionCall","src":"18505:11:18"},"variableNames":[{"name":"result","nativeSrc":"18495:6:18","nodeType":"YulIdentifier","src":"18495:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4838,"isOffset":false,"isSlot":false,"src":"18185:1:18","valueSize":1},{"declaration":4840,"isOffset":false,"isSlot":false,"src":"18223:1:18","valueSize":1},{"declaration":4842,"isOffset":false,"isSlot":false,"src":"18261:1:18","valueSize":1},{"declaration":4847,"isOffset":false,"isSlot":false,"src":"18495:6:18","valueSize":1},{"declaration":4845,"isOffset":false,"isSlot":false,"src":"18425:7:18","valueSize":1}],"flags":["memory-safe"],"id":4857,"nodeType":"InlineAssembly","src":"17088:1438:18"}]},"documentation":{"id":4836,"nodeType":"StructuredDocumentation","src":"16191:738:18","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4859,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:18","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"b","nameLocation":"16961:1:18","nodeType":"VariableDeclaration","scope":4859,"src":"16953:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"e","nameLocation":"16972:1:18","nodeType":"VariableDeclaration","scope":4859,"src":"16964:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"m","nameLocation":"16983:1:18","nodeType":"VariableDeclaration","scope":4859,"src":"16975:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:18"},"returnParameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"success","nameLocation":"17014:7:18","nodeType":"VariableDeclaration","scope":4859,"src":"17009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4844,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4847,"mutability":"mutable","name":"result","nameLocation":"17031:6:18","nodeType":"VariableDeclaration","scope":4859,"src":"17023:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:18"},"scope":5649,"src":"16934:1598:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4894,"nodeType":"Block","src":"18729:179:18","statements":[{"assignments":[4872,4874],"declarations":[{"constant":false,"id":4872,"mutability":"mutable","name":"success","nameLocation":"18745:7:18","nodeType":"VariableDeclaration","scope":4894,"src":"18740:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4871,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"result","nameLocation":"18767:6:18","nodeType":"VariableDeclaration","scope":4894,"src":"18754:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4873,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4880,"initialValue":{"arguments":[{"id":4876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"18787:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4877,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"18790:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4878,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"18793:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4875,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4859,4941],"referencedDeclaration":4941,"src":"18777:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:18"},{"condition":{"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:18","subExpression":{"id":4881,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"18810:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4891,"nodeType":"IfStatement","src":"18805:74:18","trueBody":{"id":4890,"nodeType":"Block","src":"18819:60:18","statements":[{"expression":{"arguments":[{"expression":{"id":4886,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"18845:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:18","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1555,"src":"18845:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4883,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"18833:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1588_$","typeString":"type(library Panic)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:18","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1587,"src":"18833:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4889,"nodeType":"ExpressionStatement","src":"18833:35:18"}]}},{"expression":{"id":4892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"18895:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4870,"id":4893,"nodeType":"Return","src":"18888:13:18"}]},"documentation":{"id":4860,"nodeType":"StructuredDocumentation","src":"18538:85:18","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4895,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:18","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"b","nameLocation":"18657:1:18","nodeType":"VariableDeclaration","scope":4895,"src":"18644:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4861,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4864,"mutability":"mutable","name":"e","nameLocation":"18673:1:18","nodeType":"VariableDeclaration","scope":4895,"src":"18660:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4863,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"m","nameLocation":"18689:1:18","nodeType":"VariableDeclaration","scope":4895,"src":"18676:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4865,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:18"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4895,"src":"18715:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4868,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:18"},"scope":5649,"src":"18628:280:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4940,"nodeType":"Block","src":"19162:771:18","statements":[{"condition":{"arguments":[{"id":4910,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"19187:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4909,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"19176:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4919,"nodeType":"IfStatement","src":"19172:47:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4913,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4908,"id":4918,"nodeType":"Return","src":"19191:28:18"}},{"assignments":[4921],"declarations":[{"constant":false,"id":4921,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:18","nodeType":"VariableDeclaration","scope":4940,"src":"19230:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4920,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4924,"initialValue":{"expression":{"id":4922,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"19245:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:18","memberName":"length","nodeType":"MemberAccess","src":"19245:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:18"},{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"19335:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"19361:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:18","memberName":"length","nodeType":"MemberAccess","src":"19361:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4930,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"19371:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:18","memberName":"length","nodeType":"MemberAccess","src":"19371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4932,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"19381:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"19387:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4934,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"19390:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4935,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"19393:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4926,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4938,"nodeType":"ExpressionStatement","src":"19335:60:18"},{"AST":{"nativeSrc":"19431:496:18","nodeType":"YulBlock","src":"19431:496:18","statements":[{"nativeSrc":"19445:32:18","nodeType":"YulVariableDeclaration","src":"19445:32:18","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:18","nodeType":"YulIdentifier","src":"19464:6:18"},{"kind":"number","nativeSrc":"19472:4:18","nodeType":"YulLiteral","src":"19472:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:18","nodeType":"YulIdentifier","src":"19460:3:18"},"nativeSrc":"19460:17:18","nodeType":"YulFunctionCall","src":"19460:17:18"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:18","nodeType":"YulTypedName","src":"19449:7:18","type":""}]},{"nativeSrc":"19567:73:18","nodeType":"YulAssignment","src":"19567:73:18","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:18","nodeType":"YulIdentifier","src":"19589:3:18"},"nativeSrc":"19589:5:18","nodeType":"YulFunctionCall","src":"19589:5:18"},{"kind":"number","nativeSrc":"19596:4:18","nodeType":"YulLiteral","src":"19596:4:18","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:18","nodeType":"YulIdentifier","src":"19602:7:18"},{"arguments":[{"name":"result","nativeSrc":"19617:6:18","nodeType":"YulIdentifier","src":"19617:6:18"}],"functionName":{"name":"mload","nativeSrc":"19611:5:18","nodeType":"YulIdentifier","src":"19611:5:18"},"nativeSrc":"19611:13:18","nodeType":"YulFunctionCall","src":"19611:13:18"},{"name":"dataPtr","nativeSrc":"19626:7:18","nodeType":"YulIdentifier","src":"19626:7:18"},{"name":"mLen","nativeSrc":"19635:4:18","nodeType":"YulIdentifier","src":"19635:4:18"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:18","nodeType":"YulIdentifier","src":"19578:10:18"},"nativeSrc":"19578:62:18","nodeType":"YulFunctionCall","src":"19578:62:18"},"variableNames":[{"name":"success","nativeSrc":"19567:7:18","nodeType":"YulIdentifier","src":"19567:7:18"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:18","nodeType":"YulIdentifier","src":"19796:6:18"},{"name":"mLen","nativeSrc":"19804:4:18","nodeType":"YulIdentifier","src":"19804:4:18"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:18","nodeType":"YulIdentifier","src":"19789:6:18"},"nativeSrc":"19789:20:18","nodeType":"YulFunctionCall","src":"19789:20:18"},"nativeSrc":"19789:20:18","nodeType":"YulExpressionStatement","src":"19789:20:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:18","nodeType":"YulLiteral","src":"19892:4:18","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:18","nodeType":"YulIdentifier","src":"19902:7:18"},{"name":"mLen","nativeSrc":"19911:4:18","nodeType":"YulIdentifier","src":"19911:4:18"}],"functionName":{"name":"add","nativeSrc":"19898:3:18","nodeType":"YulIdentifier","src":"19898:3:18"},"nativeSrc":"19898:18:18","nodeType":"YulFunctionCall","src":"19898:18:18"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:18","nodeType":"YulIdentifier","src":"19885:6:18"},"nativeSrc":"19885:32:18","nodeType":"YulFunctionCall","src":"19885:32:18"},"nativeSrc":"19885:32:18","nodeType":"YulExpressionStatement","src":"19885:32:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4921,"isOffset":false,"isSlot":false,"src":"19635:4:18","valueSize":1},{"declaration":4921,"isOffset":false,"isSlot":false,"src":"19804:4:18","valueSize":1},{"declaration":4921,"isOffset":false,"isSlot":false,"src":"19911:4:18","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"19464:6:18","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"19617:6:18","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"19796:6:18","valueSize":1},{"declaration":4905,"isOffset":false,"isSlot":false,"src":"19567:7:18","valueSize":1}],"flags":["memory-safe"],"id":4939,"nodeType":"InlineAssembly","src":"19406:521:18"}]},"documentation":{"id":4896,"nodeType":"StructuredDocumentation","src":"18914:88:18","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:18","nodeType":"FunctionDefinition","parameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"b","nameLocation":"19048:1:18","nodeType":"VariableDeclaration","scope":4941,"src":"19035:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4897,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4900,"mutability":"mutable","name":"e","nameLocation":"19072:1:18","nodeType":"VariableDeclaration","scope":4941,"src":"19059:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4899,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4902,"mutability":"mutable","name":"m","nameLocation":"19096:1:18","nodeType":"VariableDeclaration","scope":4941,"src":"19083:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4901,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:18"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"success","nameLocation":"19132:7:18","nodeType":"VariableDeclaration","scope":4941,"src":"19127:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4904,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"result","nameLocation":"19154:6:18","nodeType":"VariableDeclaration","scope":4941,"src":"19141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4906,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:18"},"scope":5649,"src":"19007:926:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4973,"nodeType":"Block","src":"20088:176:18","statements":[{"body":{"id":4969,"nodeType":"Block","src":"20145:92:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4960,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"20163:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4962,"indexExpression":{"id":4961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"20173:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4968,"nodeType":"IfStatement","src":"20159:68:18","trueBody":{"id":4967,"nodeType":"Block","src":"20182:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4948,"id":4966,"nodeType":"Return","src":"20200:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"20118:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4954,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"20122:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:18","memberName":"length","nodeType":"MemberAccess","src":"20122:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"initializationExpression":{"assignments":[4950],"declarations":[{"constant":false,"id":4950,"mutability":"mutable","name":"i","nameLocation":"20111:1:18","nodeType":"VariableDeclaration","scope":4970,"src":"20103:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4952,"initialValue":{"hexValue":"30","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:18","subExpression":{"id":4957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"20142:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4959,"nodeType":"ExpressionStatement","src":"20140:3:18"},"nodeType":"ForStatement","src":"20098:139:18"},{"expression":{"hexValue":"74727565","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4948,"id":4972,"nodeType":"Return","src":"20246:11:18"}]},"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"19939:72:18","text":" @dev Returns whether the provided byte array is zero."},"id":4974,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:18","nodeType":"FunctionDefinition","parameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:18","nodeType":"VariableDeclaration","scope":4974,"src":"20036:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4943,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:18"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4974,"src":"20082:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4946,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:18"},"scope":5649,"src":"20016:248:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5192,"nodeType":"Block","src":"20624:5124:18","statements":[{"id":5191,"nodeType":"UncheckedBlock","src":"20634:5108:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"20728:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"20724:53:18","trueBody":{"id":4987,"nodeType":"Block","src":"20736:41:18","statements":[{"expression":{"id":4985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"20761:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4981,"id":4986,"nodeType":"Return","src":"20754:8:18"}]}},{"assignments":[4990],"declarations":[{"constant":false,"id":4990,"mutability":"mutable","name":"aa","nameLocation":"21712:2:18","nodeType":"VariableDeclaration","scope":5191,"src":"21704:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4992,"initialValue":{"id":4991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"21717:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:18"},{"assignments":[4994],"declarations":[{"constant":false,"id":4994,"mutability":"mutable","name":"xn","nameLocation":"21740:2:18","nodeType":"VariableDeclaration","scope":5191,"src":"21732:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4996,"initialValue":{"hexValue":"31","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"21765:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5012,"nodeType":"IfStatement","src":"21761:92:18","trueBody":{"id":5011,"nodeType":"Block","src":"21783:70:18","statements":[{"expression":{"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5003,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"21801:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5006,"nodeType":"ExpressionStatement","src":"21801:10:18"},{"expression":{"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5007,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"21829:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5010,"nodeType":"ExpressionStatement","src":"21829:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"21870:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5028,"nodeType":"IfStatement","src":"21866:90:18","trueBody":{"id":5027,"nodeType":"Block","src":"21887:69:18","statements":[{"expression":{"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5019,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"21905:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5022,"nodeType":"ExpressionStatement","src":"21905:9:18"},{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5023,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"21932:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5026,"nodeType":"ExpressionStatement","src":"21932:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"21973:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"21969:90:18","trueBody":{"id":5043,"nodeType":"Block","src":"21990:69:18","statements":[{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5035,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22008:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5038,"nodeType":"ExpressionStatement","src":"22008:9:18"},{"expression":{"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5039,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22035:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5042,"nodeType":"ExpressionStatement","src":"22035:9:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22076:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:18","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5060,"nodeType":"IfStatement","src":"22072:89:18","trueBody":{"id":5059,"nodeType":"Block","src":"22093:68:18","statements":[{"expression":{"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5051,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22111:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5054,"nodeType":"ExpressionStatement","src":"22111:9:18"},{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5055,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22138:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5058,"nodeType":"ExpressionStatement","src":"22138:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22178:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5076,"nodeType":"IfStatement","src":"22174:87:18","trueBody":{"id":5075,"nodeType":"Block","src":"22194:67:18","statements":[{"expression":{"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5067,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22212:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5070,"nodeType":"ExpressionStatement","src":"22212:8:18"},{"expression":{"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5071,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22238:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5074,"nodeType":"ExpressionStatement","src":"22238:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22278:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5092,"nodeType":"IfStatement","src":"22274:87:18","trueBody":{"id":5091,"nodeType":"Block","src":"22294:67:18","statements":[{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5083,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5086,"nodeType":"ExpressionStatement","src":"22312:8:18"},{"expression":{"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5087,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22338:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5090,"nodeType":"ExpressionStatement","src":"22338:8:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"22378:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5104,"nodeType":"IfStatement","src":"22374:61:18","trueBody":{"id":5103,"nodeType":"Block","src":"22394:41:18","statements":[{"expression":{"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5099,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22412:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5102,"nodeType":"ExpressionStatement","src":"22412:8:18"}]}},{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22855:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5107,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"22865:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5113,"nodeType":"ExpressionStatement","src":"22855:18:18"},{"expression":{"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5114,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24760:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24766:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5116,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"24771:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5117,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24775:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5124,"nodeType":"ExpressionStatement","src":"24760:23:18"},{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5125,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24869:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24875:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"24880:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5128,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24884:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"24869:23:18"},{"expression":{"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24980:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24986:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"24991:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5139,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"24995:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5146,"nodeType":"ExpressionStatement","src":"24980:23:18"},{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5147,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25089:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5148,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25095:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"25100:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5150,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25104:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"25089:23:18"},{"expression":{"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25199:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25205:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"25210:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5161,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25214:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5168,"nodeType":"ExpressionStatement","src":"25199:23:18"},{"expression":{"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25309:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25315:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"25320:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5172,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25324:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5179,"nodeType":"ExpressionStatement","src":"25309:23:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5180,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25698:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25719:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"25724:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"25728:2:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5181,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"25703:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"25703:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4981,"id":5190,"nodeType":"Return","src":"25691:40:18"}]}]},"documentation":{"id":4975,"nodeType":"StructuredDocumentation","src":"20270:292:18","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5193,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:18","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"a","nameLocation":"20589:1:18","nodeType":"VariableDeclaration","scope":5193,"src":"20581:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:18"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5193,"src":"20615:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:18"},"scope":5649,"src":"20567:5181:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"25921:171:18","statements":[{"id":5225,"nodeType":"UncheckedBlock","src":"25931:155:18","statements":[{"assignments":[5205],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"result","nameLocation":"25963:6:18","nodeType":"VariableDeclaration","scope":5225,"src":"25955:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5209,"initialValue":{"arguments":[{"id":5207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"25977:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5193,5227],"referencedDeclaration":5193,"src":"25972:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"26000:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5214,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"26042:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":5213,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"26025:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4040_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"26055:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"26064:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"26073:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5211,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26009:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26009:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5203,"id":5224,"nodeType":"Return","src":"25993:82:18"}]}]},"documentation":{"id":5194,"nodeType":"StructuredDocumentation","src":"25754:86:18","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:18","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"a","nameLocation":"25867:1:18","nodeType":"VariableDeclaration","scope":5227,"src":"25859:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5195,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5199,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:18","nodeType":"VariableDeclaration","scope":5227,"src":"25870:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":5198,"nodeType":"UserDefinedTypeName","pathNode":{"id":5197,"name":"Rounding","nameLocations":["25870:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"25870:8:18"},"referencedDeclaration":4040,"src":"25870:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:18"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5227,"src":"25912:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5201,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:18"},"scope":5649,"src":"25845:247:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5317,"nodeType":"Block","src":"26281:2334:18","statements":[{"expression":{"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5235,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26363:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26383:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5236,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26367:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26367:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5245,"nodeType":"ExpressionStatement","src":"26363:64:18"},{"expression":{"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5246,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26503:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26525:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5250,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26530:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5247,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26508:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26508:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5259,"nodeType":"ExpressionStatement","src":"26503:56:18"},{"expression":{"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5260,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26634:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5264,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26661:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5261,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26639:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26639:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5273,"nodeType":"ExpressionStatement","src":"26634:48:18"},{"expression":{"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26757:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5277,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26779:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5278,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26784:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5275,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26762:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26762:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5287,"nodeType":"ExpressionStatement","src":"26757:44:18"},{"expression":{"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5288,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26874:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5291,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"26896:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5292,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26901:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5289,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26879:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26879:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5301,"nodeType":"ExpressionStatement","src":"26874:42:18"},{"expression":{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5302,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"26988:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5305,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"27010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5306,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"27015:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5303,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"26993:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"26993:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5315,"nodeType":"ExpressionStatement","src":"26988:41:18"},{"AST":{"nativeSrc":"28490:119:18","nodeType":"YulBlock","src":"28490:119:18","statements":[{"nativeSrc":"28504:95:18","nodeType":"YulAssignment","src":"28504:95:18","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:18","nodeType":"YulIdentifier","src":"28512:1:18"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:18","nodeType":"YulIdentifier","src":"28524:1:18"},{"name":"x","nativeSrc":"28527:1:18","nodeType":"YulIdentifier","src":"28527:1:18"}],"functionName":{"name":"shr","nativeSrc":"28520:3:18","nodeType":"YulIdentifier","src":"28520:3:18"},"nativeSrc":"28520:9:18","nodeType":"YulFunctionCall","src":"28520:9:18"},{"kind":"number","nativeSrc":"28531:66:18","nodeType":"YulLiteral","src":"28531:66:18","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:18","nodeType":"YulIdentifier","src":"28515:4:18"},"nativeSrc":"28515:83:18","nodeType":"YulFunctionCall","src":"28515:83:18"}],"functionName":{"name":"or","nativeSrc":"28509:2:18","nodeType":"YulIdentifier","src":"28509:2:18"},"nativeSrc":"28509:90:18","nodeType":"YulFunctionCall","src":"28509:90:18"},"variableNames":[{"name":"r","nativeSrc":"28504:1:18","nodeType":"YulIdentifier","src":"28504:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5233,"isOffset":false,"isSlot":false,"src":"28504:1:18","valueSize":1},{"declaration":5233,"isOffset":false,"isSlot":false,"src":"28512:1:18","valueSize":1},{"declaration":5233,"isOffset":false,"isSlot":false,"src":"28524:1:18","valueSize":1},{"declaration":5230,"isOffset":false,"isSlot":false,"src":"28527:1:18","valueSize":1}],"flags":["memory-safe"],"id":5316,"nodeType":"InlineAssembly","src":"28465:144:18"}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"26098:119:18","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5318,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:18","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"x","nameLocation":"26244:1:18","nodeType":"VariableDeclaration","scope":5318,"src":"26236:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:18"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"r","nameLocation":"26278:1:18","nodeType":"VariableDeclaration","scope":5318,"src":"26270:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5232,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:18"},"scope":5649,"src":"26222:2393:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5351,"nodeType":"Block","src":"28848:175:18","statements":[{"id":5350,"nodeType":"UncheckedBlock","src":"28858:159:18","statements":[{"assignments":[5330],"declarations":[{"constant":false,"id":5330,"mutability":"mutable","name":"result","nameLocation":"28890:6:18","nodeType":"VariableDeclaration","scope":5350,"src":"28882:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5329,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5334,"initialValue":{"arguments":[{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"28904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5331,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5318,5352],"referencedDeclaration":5318,"src":"28899:4:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"28931:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5339,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"28973:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":5338,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"28956:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4040_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5330,"src":"28991:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"29000:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5336,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"28940:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"28940:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5328,"id":5349,"nodeType":"Return","src":"28924:82:18"}]}]},"documentation":{"id":5319,"nodeType":"StructuredDocumentation","src":"28621:142:18","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5352,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:18","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"value","nameLocation":"28790:5:18","nodeType":"VariableDeclaration","scope":5352,"src":"28782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5324,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:18","nodeType":"VariableDeclaration","scope":5352,"src":"28797:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":5323,"nodeType":"UserDefinedTypeName","pathNode":{"id":5322,"name":"Rounding","nameLocations":["28797:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"28797:8:18"},"referencedDeclaration":4040,"src":"28797:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:18"},"returnParameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5352,"src":"28839:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5326,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:18"},"scope":5649,"src":"28768:255:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5480,"nodeType":"Block","src":"29216:854:18","statements":[{"assignments":[5361],"declarations":[{"constant":false,"id":5361,"mutability":"mutable","name":"result","nameLocation":"29234:6:18","nodeType":"VariableDeclaration","scope":5480,"src":"29226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5363,"initialValue":{"hexValue":"30","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:18"},{"id":5477,"nodeType":"UncheckedBlock","src":"29254:787:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29282:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5380,"nodeType":"IfStatement","src":"29278:103:18","trueBody":{"id":5379,"nodeType":"Block","src":"29301:80:18","statements":[{"expression":{"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29319:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5374,"nodeType":"ExpressionStatement","src":"29319:17:18"},{"expression":{"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"29354:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5378,"nodeType":"ExpressionStatement","src":"29354:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29398:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5397,"nodeType":"IfStatement","src":"29394:103:18","trueBody":{"id":5396,"nodeType":"Block","src":"29417:80:18","statements":[{"expression":{"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29435:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5391,"nodeType":"ExpressionStatement","src":"29435:17:18"},{"expression":{"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"29470:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5395,"nodeType":"ExpressionStatement","src":"29470:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29514:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"IfStatement","src":"29510:103:18","trueBody":{"id":5413,"nodeType":"Block","src":"29533:80:18","statements":[{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29551:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:18","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5408,"nodeType":"ExpressionStatement","src":"29551:17:18"},{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"29586:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5412,"nodeType":"ExpressionStatement","src":"29586:12:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29630:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5431,"nodeType":"IfStatement","src":"29626:100:18","trueBody":{"id":5430,"nodeType":"Block","src":"29648:78:18","statements":[{"expression":{"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29666:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5425,"nodeType":"ExpressionStatement","src":"29666:16:18"},{"expression":{"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"29700:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5429,"nodeType":"ExpressionStatement","src":"29700:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"29739:100:18","trueBody":{"id":5447,"nodeType":"Block","src":"29761:78:18","statements":[{"expression":{"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29779:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5442,"nodeType":"ExpressionStatement","src":"29779:16:18"},{"expression":{"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"29813:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5446,"nodeType":"ExpressionStatement","src":"29813:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29856:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5465,"nodeType":"IfStatement","src":"29852:100:18","trueBody":{"id":5464,"nodeType":"Block","src":"29874:78:18","statements":[{"expression":{"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29892:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5459,"nodeType":"ExpressionStatement","src":"29892:16:18"},{"expression":{"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"29926:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5463,"nodeType":"ExpressionStatement","src":"29926:11:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"29969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"29965:66:18","trueBody":{"id":5475,"nodeType":"Block","src":"29987:44:18","statements":[{"expression":{"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"30005:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5474,"nodeType":"ExpressionStatement","src":"30005:11:18"}]}}]},{"expression":{"id":5478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"30057:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5359,"id":5479,"nodeType":"Return","src":"30050:13:18"}]},"documentation":{"id":5353,"nodeType":"StructuredDocumentation","src":"29029:120:18","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5481,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:18","nodeType":"FunctionDefinition","parameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"value","nameLocation":"29177:5:18","nodeType":"VariableDeclaration","scope":5481,"src":"29169:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5354,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:18"},"returnParameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5481,"src":"29207:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:18"},"scope":5649,"src":"29154:916:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5514,"nodeType":"Block","src":"30305:177:18","statements":[{"id":5513,"nodeType":"UncheckedBlock","src":"30315:161:18","statements":[{"assignments":[5493],"declarations":[{"constant":false,"id":5493,"mutability":"mutable","name":"result","nameLocation":"30347:6:18","nodeType":"VariableDeclaration","scope":5513,"src":"30339:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5497,"initialValue":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5481,5515],"referencedDeclaration":5481,"src":"30356:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"30389:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5502,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"30431:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":5501,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"30414:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4040_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"30450:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"30459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5499,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"30398:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"30398:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5491,"id":5512,"nodeType":"Return","src":"30382:83:18"}]}]},"documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"30076:143:18","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5515,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:18","nodeType":"FunctionDefinition","parameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"value","nameLocation":"30247:5:18","nodeType":"VariableDeclaration","scope":5515,"src":"30239:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5487,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:18","nodeType":"VariableDeclaration","scope":5515,"src":"30254:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":5486,"nodeType":"UserDefinedTypeName","pathNode":{"id":5485,"name":"Rounding","nameLocations":["30254:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"30254:8:18"},"referencedDeclaration":4040,"src":"30254:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:18"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5515,"src":"30296:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5489,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:18"},"scope":5649,"src":"30224:258:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"30800:675:18","statements":[{"expression":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5523,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"30882:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5526,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"30902:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:18","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"30886:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"30886:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5533,"nodeType":"ExpressionStatement","src":"30882:64:18"},{"expression":{"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31022:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5537,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"31044:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5538,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31049:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:18","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5535,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"31027:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"31027:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:18","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5547,"nodeType":"ExpressionStatement","src":"31022:56:18"},{"expression":{"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5548,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31153:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"31175:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5552,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31180:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5549,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"31158:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"31158:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:18","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5561,"nodeType":"ExpressionStatement","src":"31153:48:18"},{"expression":{"id":5574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5562,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31276:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"31298:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5566,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31303:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:18","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5563,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"31281:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"31281:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5575,"nodeType":"ExpressionStatement","src":"31276:44:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31426:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5518,"src":"31453:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5583,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"31458:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5580,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"31436:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"31436:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5522,"id":5590,"nodeType":"Return","src":"31418:50:18"}]},"documentation":{"id":5516,"nodeType":"StructuredDocumentation","src":"30488:246:18","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:18","nodeType":"FunctionDefinition","parameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"x","nameLocation":"30763:1:18","nodeType":"VariableDeclaration","scope":5592,"src":"30755:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:18"},"returnParameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5521,"mutability":"mutable","name":"r","nameLocation":"30797:1:18","nodeType":"VariableDeclaration","scope":5592,"src":"30789:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:18"},"scope":5649,"src":"30739:736:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5628,"nodeType":"Block","src":"31712:184:18","statements":[{"id":5627,"nodeType":"UncheckedBlock","src":"31722:168:18","statements":[{"assignments":[5604],"declarations":[{"constant":false,"id":5604,"mutability":"mutable","name":"result","nameLocation":"31754:6:18","nodeType":"VariableDeclaration","scope":5627,"src":"31746:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5608,"initialValue":{"arguments":[{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"31770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5605,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5592,5629],"referencedDeclaration":5592,"src":"31763:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:18"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"31797:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5613,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"31839:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":5612,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"31822:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4040_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"31873:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5610,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"31806:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"31806:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5602,"id":5626,"nodeType":"Return","src":"31790:89:18"}]}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"31481:144:18","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:18","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"31654:5:18","nodeType":"VariableDeclaration","scope":5629,"src":"31646:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5594,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5598,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:18","nodeType":"VariableDeclaration","scope":5629,"src":"31661:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":5597,"nodeType":"UserDefinedTypeName","pathNode":{"id":5596,"name":"Rounding","nameLocations":["31661:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"31661:8:18"},"referencedDeclaration":4040,"src":"31661:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:18"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"31703:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:18"},"scope":5649,"src":"31630:266:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5647,"nodeType":"Block","src":"32094:48:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5640,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"32117:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}],"id":5639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5638,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:18","typeDescriptions":{}}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5637,"id":5646,"nodeType":"Return","src":"32104:31:18"}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"31902:113:18","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5648,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:18","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:18","nodeType":"VariableDeclaration","scope":5648,"src":"32046:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"},"typeName":{"id":5632,"nodeType":"UserDefinedTypeName","pathNode":{"id":5631,"name":"Rounding","nameLocations":["32046:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":4040,"src":"32046:8:18"},"referencedDeclaration":4040,"src":"32046:8:18","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4040","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:18"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5648,"src":"32088:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5635,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:18"},"scope":5649,"src":"32020:122:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5650,"src":"281:31863:18","usedErrors":[],"usedEvents":[]}],"src":"103:32042:18"},"id":18},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7414]},"id":7415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5651,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"218:550:19","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7414,"linearizedBaseContracts":[7414],"name":"SafeCast","nameLocation":"777:8:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"792:68:19","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5659,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:19","nodeType":"ErrorDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"bits","nameLocation":"908:4:19","nodeType":"VariableDeclaration","scope":5659,"src":"902:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5654,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5657,"mutability":"mutable","name":"value","nameLocation":"922:5:19","nodeType":"VariableDeclaration","scope":5659,"src":"914:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:19"},"src":"865:64:19"},{"documentation":{"id":5660,"nodeType":"StructuredDocumentation","src":"935:75:19","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5664,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:19","nodeType":"ErrorDefinition","parameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"value","nameLocation":"1056:5:19","nodeType":"VariableDeclaration","scope":5664,"src":"1049:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5661,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:19"},"src":"1015:48:19"},{"documentation":{"id":5665,"nodeType":"StructuredDocumentation","src":"1069:67:19","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5671,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:19","nodeType":"ErrorDefinition","parameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5667,"mutability":"mutable","name":"bits","nameLocation":"1183:4:19","nodeType":"VariableDeclaration","scope":5671,"src":"1177:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5666,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5669,"mutability":"mutable","name":"value","nameLocation":"1196:5:19","nodeType":"VariableDeclaration","scope":5671,"src":"1189:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5668,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:19"},"src":"1141:62:19"},{"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"1209:75:19","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5676,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:19","nodeType":"ErrorDefinition","parameters":{"id":5675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"value","nameLocation":"1331:5:19","nodeType":"VariableDeclaration","scope":5676,"src":"1323:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:19"},"src":"1289:49:19"},{"body":{"id":5703,"nodeType":"Block","src":"1695:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"1709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5686,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5685,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:19","memberName":"max","nodeType":"MemberAccess","src":"1717:17:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"1705:105:19","trueBody":{"id":5696,"nodeType":"Block","src":"1736:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"1793:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5691,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"1757:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5695,"nodeType":"RevertStatement","src":"1750:49:19"}]}},{"expression":{"arguments":[{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5679,"src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5698,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:19","typeDescriptions":{}}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5683,"id":5702,"nodeType":"Return","src":"1819:21:19"}]},"documentation":{"id":5677,"nodeType":"StructuredDocumentation","src":"1344:280:19","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:19","nodeType":"FunctionDefinition","parameters":{"id":5680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5679,"mutability":"mutable","name":"value","nameLocation":"1656:5:19","nodeType":"VariableDeclaration","scope":5704,"src":"1648:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:19"},"returnParameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5704,"src":"1686:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5681,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:19","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:19"},"scope":7414,"src":"1629:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5731,"nodeType":"Block","src":"2204:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"2218:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5714,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5713,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:19","memberName":"max","nodeType":"MemberAccess","src":"2226:17:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"2214:105:19","trueBody":{"id":5724,"nodeType":"Block","src":"2245:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"2302:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5719,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"2266:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5723,"nodeType":"RevertStatement","src":"2259:49:19"}]}},{"expression":{"arguments":[{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5726,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:19","typeDescriptions":{}}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5711,"id":5730,"nodeType":"Return","src":"2328:21:19"}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"1853:280:19","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5732,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:19","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"2165:5:19","nodeType":"VariableDeclaration","scope":5732,"src":"2157:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:19"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5732,"src":"2195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5709,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:19","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:19"},"scope":7414,"src":"2138:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5759,"nodeType":"Block","src":"2713:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"2727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5742,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:19","memberName":"max","nodeType":"MemberAccess","src":"2735:17:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5753,"nodeType":"IfStatement","src":"2723:105:19","trueBody":{"id":5752,"nodeType":"Block","src":"2754:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"2811:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5747,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"2775:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5751,"nodeType":"RevertStatement","src":"2768:49:19"}]}},{"expression":{"arguments":[{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"2852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5754,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:19","typeDescriptions":{}}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5739,"id":5758,"nodeType":"Return","src":"2837:21:19"}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"2362:280:19","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5760,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:19","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"value","nameLocation":"2674:5:19","nodeType":"VariableDeclaration","scope":5760,"src":"2666:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:19"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5760,"src":"2704:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5737,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:19","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:19"},"scope":7414,"src":"2647:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5787,"nodeType":"Block","src":"3222:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"3236:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5770,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5769,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:19","memberName":"max","nodeType":"MemberAccess","src":"3244:17:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5781,"nodeType":"IfStatement","src":"3232:105:19","trueBody":{"id":5780,"nodeType":"Block","src":"3263:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"3320:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5775,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3284:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5779,"nodeType":"RevertStatement","src":"3277:49:19"}]}},{"expression":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"3361:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5782,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:19","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5767,"id":5786,"nodeType":"Return","src":"3346:21:19"}]},"documentation":{"id":5761,"nodeType":"StructuredDocumentation","src":"2871:280:19","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:19","nodeType":"FunctionDefinition","parameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"value","nameLocation":"3183:5:19","nodeType":"VariableDeclaration","scope":5788,"src":"3175:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:19"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5788,"src":"3213:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5765,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:19"},"scope":7414,"src":"3156:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5815,"nodeType":"Block","src":"3731:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5798,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:19","memberName":"max","nodeType":"MemberAccess","src":"3753:17:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5809,"nodeType":"IfStatement","src":"3741:105:19","trueBody":{"id":5808,"nodeType":"Block","src":"3772:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"3829:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5803,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"3793:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5807,"nodeType":"RevertStatement","src":"3786:49:19"}]}},{"expression":{"arguments":[{"id":5812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"3870:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5810,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:19","typeDescriptions":{}}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5795,"id":5814,"nodeType":"Return","src":"3855:21:19"}]},"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"3380:280:19","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5816,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:19","nodeType":"FunctionDefinition","parameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"value","nameLocation":"3692:5:19","nodeType":"VariableDeclaration","scope":5816,"src":"3684:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:19"},"returnParameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5816,"src":"3722:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5793,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:19","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:19"},"scope":7414,"src":"3665:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5843,"nodeType":"Block","src":"4240:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"4254:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5826,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5825,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:19","memberName":"max","nodeType":"MemberAccess","src":"4262:17:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"4250:105:19","trueBody":{"id":5836,"nodeType":"Block","src":"4281:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"4338:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5831,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"4302:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5835,"nodeType":"RevertStatement","src":"4295:49:19"}]}},{"expression":{"arguments":[{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5819,"src":"4379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5838,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:19","typeDescriptions":{}}},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5823,"id":5842,"nodeType":"Return","src":"4364:21:19"}]},"documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"3889:280:19","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5844,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:19","nodeType":"FunctionDefinition","parameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"value","nameLocation":"4201:5:19","nodeType":"VariableDeclaration","scope":5844,"src":"4193:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5818,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:19"},"returnParameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5844,"src":"4231:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5821,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:19","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:19"},"scope":7414,"src":"4174:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5871,"nodeType":"Block","src":"4749:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"4763:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5854,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5853,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:19","memberName":"max","nodeType":"MemberAccess","src":"4771:17:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5865,"nodeType":"IfStatement","src":"4759:105:19","trueBody":{"id":5864,"nodeType":"Block","src":"4790:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"4847:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5859,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"4811:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5863,"nodeType":"RevertStatement","src":"4804:49:19"}]}},{"expression":{"arguments":[{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5847,"src":"4888:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5866,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:19","typeDescriptions":{}}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5851,"id":5870,"nodeType":"Return","src":"4873:21:19"}]},"documentation":{"id":5845,"nodeType":"StructuredDocumentation","src":"4398:280:19","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5872,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:19","nodeType":"FunctionDefinition","parameters":{"id":5848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5847,"mutability":"mutable","name":"value","nameLocation":"4710:5:19","nodeType":"VariableDeclaration","scope":5872,"src":"4702:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:19"},"returnParameters":{"id":5851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5872,"src":"4740:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5849,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:19","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:19"},"scope":7414,"src":"4683:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5899,"nodeType":"Block","src":"5258:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"5272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5882,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5881,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:19","memberName":"max","nodeType":"MemberAccess","src":"5280:17:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5893,"nodeType":"IfStatement","src":"5268:105:19","trueBody":{"id":5892,"nodeType":"Block","src":"5299:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"5356:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5887,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5320:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5891,"nodeType":"RevertStatement","src":"5313:49:19"}]}},{"expression":{"arguments":[{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"5397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5894,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:19","typeDescriptions":{}}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5879,"id":5898,"nodeType":"Return","src":"5382:21:19"}]},"documentation":{"id":5873,"nodeType":"StructuredDocumentation","src":"4907:280:19","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5900,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:19","nodeType":"FunctionDefinition","parameters":{"id":5876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5875,"mutability":"mutable","name":"value","nameLocation":"5219:5:19","nodeType":"VariableDeclaration","scope":5900,"src":"5211:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:19"},"returnParameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5900,"src":"5249:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5877,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:19","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:19"},"scope":7414,"src":"5192:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5927,"nodeType":"Block","src":"5767:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"5781:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5910,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5909,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:19","memberName":"max","nodeType":"MemberAccess","src":"5789:17:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5921,"nodeType":"IfStatement","src":"5777:105:19","trueBody":{"id":5920,"nodeType":"Block","src":"5808:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"5865:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5915,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"5829:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5919,"nodeType":"RevertStatement","src":"5822:49:19"}]}},{"expression":{"arguments":[{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5903,"src":"5906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5922,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:19","typeDescriptions":{}}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5907,"id":5926,"nodeType":"Return","src":"5891:21:19"}]},"documentation":{"id":5901,"nodeType":"StructuredDocumentation","src":"5416:280:19","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5928,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:19","nodeType":"FunctionDefinition","parameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"value","nameLocation":"5728:5:19","nodeType":"VariableDeclaration","scope":5928,"src":"5720:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:19"},"returnParameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5928,"src":"5758:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5905,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:19","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:19"},"scope":7414,"src":"5701:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5955,"nodeType":"Block","src":"6276:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"6290:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5938,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:19","memberName":"max","nodeType":"MemberAccess","src":"6298:17:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5949,"nodeType":"IfStatement","src":"6286:105:19","trueBody":{"id":5948,"nodeType":"Block","src":"6317:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"6374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5943,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6338:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5947,"nodeType":"RevertStatement","src":"6331:49:19"}]}},{"expression":{"arguments":[{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"6415:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5950,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:19","typeDescriptions":{}}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5935,"id":5954,"nodeType":"Return","src":"6400:21:19"}]},"documentation":{"id":5929,"nodeType":"StructuredDocumentation","src":"5925:280:19","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5956,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:19","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"value","nameLocation":"6237:5:19","nodeType":"VariableDeclaration","scope":5956,"src":"6229:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:19"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5956,"src":"6267:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5933,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:19","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:19"},"scope":7414,"src":"6210:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"6785:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"6799:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5966,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5965,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:19","memberName":"max","nodeType":"MemberAccess","src":"6807:17:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5977,"nodeType":"IfStatement","src":"6795:105:19","trueBody":{"id":5976,"nodeType":"Block","src":"6826:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"6883:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5971,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6847:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5975,"nodeType":"RevertStatement","src":"6840:49:19"}]}},{"expression":{"arguments":[{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"6924:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5978,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:19","typeDescriptions":{}}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5963,"id":5982,"nodeType":"Return","src":"6909:21:19"}]},"documentation":{"id":5957,"nodeType":"StructuredDocumentation","src":"6434:280:19","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:19","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"value","nameLocation":"6746:5:19","nodeType":"VariableDeclaration","scope":5984,"src":"6738:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5958,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:19"},"returnParameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5984,"src":"6776:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5961,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:19","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:19"},"scope":7414,"src":"6719:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6011,"nodeType":"Block","src":"7294:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"7308:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5994,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5993,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:19","memberName":"max","nodeType":"MemberAccess","src":"7316:17:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"IfStatement","src":"7304:105:19","trueBody":{"id":6004,"nodeType":"Block","src":"7335:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"7392:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5999,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"7356:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6003,"nodeType":"RevertStatement","src":"7349:49:19"}]}},{"expression":{"arguments":[{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"7433:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6006,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:19","typeDescriptions":{}}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5991,"id":6010,"nodeType":"Return","src":"7418:21:19"}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"6943:280:19","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6012,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:19","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"value","nameLocation":"7255:5:19","nodeType":"VariableDeclaration","scope":6012,"src":"7247:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:19"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6012,"src":"7285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5989,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:19","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:19"},"scope":7414,"src":"7228:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6039,"nodeType":"Block","src":"7803:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"7817:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6022,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6021,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:19","memberName":"max","nodeType":"MemberAccess","src":"7825:17:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6033,"nodeType":"IfStatement","src":"7813:105:19","trueBody":{"id":6032,"nodeType":"Block","src":"7844:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"7901:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6027,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"7865:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6031,"nodeType":"RevertStatement","src":"7858:49:19"}]}},{"expression":{"arguments":[{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"7942:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6034,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:19","typeDescriptions":{}}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6019,"id":6038,"nodeType":"Return","src":"7927:21:19"}]},"documentation":{"id":6013,"nodeType":"StructuredDocumentation","src":"7452:280:19","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6040,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:19","nodeType":"FunctionDefinition","parameters":{"id":6016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"value","nameLocation":"7764:5:19","nodeType":"VariableDeclaration","scope":6040,"src":"7756:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6014,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:19"},"returnParameters":{"id":6019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6040,"src":"7794:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6017,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:19","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:19"},"scope":7414,"src":"7737:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"8312:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8326:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6050,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6049,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:19","memberName":"max","nodeType":"MemberAccess","src":"8334:17:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6061,"nodeType":"IfStatement","src":"8322:105:19","trueBody":{"id":6060,"nodeType":"Block","src":"8353:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8410:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6055,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"8374:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6059,"nodeType":"RevertStatement","src":"8367:49:19"}]}},{"expression":{"arguments":[{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"8451:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6062,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:19","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6047,"id":6066,"nodeType":"Return","src":"8436:21:19"}]},"documentation":{"id":6041,"nodeType":"StructuredDocumentation","src":"7961:280:19","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:19","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6043,"mutability":"mutable","name":"value","nameLocation":"8273:5:19","nodeType":"VariableDeclaration","scope":6068,"src":"8265:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:19"},"returnParameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6068,"src":"8303:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6045,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:19","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:19"},"scope":7414,"src":"8246:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6095,"nodeType":"Block","src":"8821:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"8835:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6078,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6077,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:19","memberName":"max","nodeType":"MemberAccess","src":"8843:17:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6089,"nodeType":"IfStatement","src":"8831:105:19","trueBody":{"id":6088,"nodeType":"Block","src":"8862:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"8919:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6083,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"8883:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6087,"nodeType":"RevertStatement","src":"8876:49:19"}]}},{"expression":{"arguments":[{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"8960:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6090,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:19","typeDescriptions":{}}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6075,"id":6094,"nodeType":"Return","src":"8945:21:19"}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"8470:280:19","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6096,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:19","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"8782:5:19","nodeType":"VariableDeclaration","scope":6096,"src":"8774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6070,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:19"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6096,"src":"8812:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6073,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:19","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:19"},"scope":7414,"src":"8755:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6123,"nodeType":"Block","src":"9330:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"9344:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6106,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6105,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:19","memberName":"max","nodeType":"MemberAccess","src":"9352:17:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"IfStatement","src":"9340:105:19","trueBody":{"id":6116,"nodeType":"Block","src":"9371:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"9428:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6111,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"9392:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6115,"nodeType":"RevertStatement","src":"9385:49:19"}]}},{"expression":{"arguments":[{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"9469:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6118,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:19","typeDescriptions":{}}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6103,"id":6122,"nodeType":"Return","src":"9454:21:19"}]},"documentation":{"id":6097,"nodeType":"StructuredDocumentation","src":"8979:280:19","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6124,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:19","nodeType":"FunctionDefinition","parameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"value","nameLocation":"9291:5:19","nodeType":"VariableDeclaration","scope":6124,"src":"9283:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6098,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:19"},"returnParameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6124,"src":"9321:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6101,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:19"},"scope":7414,"src":"9264:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6151,"nodeType":"Block","src":"9839:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"9853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6134,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6133,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:19","memberName":"max","nodeType":"MemberAccess","src":"9861:17:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6145,"nodeType":"IfStatement","src":"9849:105:19","trueBody":{"id":6144,"nodeType":"Block","src":"9880:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"9937:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6139,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"9901:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6143,"nodeType":"RevertStatement","src":"9894:49:19"}]}},{"expression":{"arguments":[{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"9978:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6146,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:19","typeDescriptions":{}}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6131,"id":6150,"nodeType":"Return","src":"9963:21:19"}]},"documentation":{"id":6125,"nodeType":"StructuredDocumentation","src":"9488:280:19","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6152,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:19","nodeType":"FunctionDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"value","nameLocation":"9800:5:19","nodeType":"VariableDeclaration","scope":6152,"src":"9792:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6126,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:19"},"returnParameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6152,"src":"9830:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6129,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:19","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:19"},"scope":7414,"src":"9773:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6179,"nodeType":"Block","src":"10348:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"10362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6162,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6161,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:19","memberName":"max","nodeType":"MemberAccess","src":"10370:17:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6173,"nodeType":"IfStatement","src":"10358:105:19","trueBody":{"id":6172,"nodeType":"Block","src":"10389:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"10446:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6167,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"10410:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6171,"nodeType":"RevertStatement","src":"10403:49:19"}]}},{"expression":{"arguments":[{"id":6176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"10487:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6174,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:19","typeDescriptions":{}}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6159,"id":6178,"nodeType":"Return","src":"10472:21:19"}]},"documentation":{"id":6153,"nodeType":"StructuredDocumentation","src":"9997:280:19","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6180,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:19","nodeType":"FunctionDefinition","parameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"value","nameLocation":"10309:5:19","nodeType":"VariableDeclaration","scope":6180,"src":"10301:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:19"},"returnParameters":{"id":6159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6180,"src":"10339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6157,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:19","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:19"},"scope":7414,"src":"10282:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6207,"nodeType":"Block","src":"10857:152:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"10871:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6190,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:19","memberName":"max","nodeType":"MemberAccess","src":"10879:17:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6201,"nodeType":"IfStatement","src":"10867:105:19","trueBody":{"id":6200,"nodeType":"Block","src":"10898:74:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"10955:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6195,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"10919:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6199,"nodeType":"RevertStatement","src":"10912:49:19"}]}},{"expression":{"arguments":[{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"10996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6202,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:19","typeDescriptions":{}}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6187,"id":6206,"nodeType":"Return","src":"10981:21:19"}]},"documentation":{"id":6181,"nodeType":"StructuredDocumentation","src":"10506:280:19","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6208,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:19","nodeType":"FunctionDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"value","nameLocation":"10818:5:19","nodeType":"VariableDeclaration","scope":6208,"src":"10810:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6182,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:19"},"returnParameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6208,"src":"10848:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6185,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:19","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:19"},"scope":7414,"src":"10791:218:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6235,"nodeType":"Block","src":"11360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"11374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6218,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6217,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:19","memberName":"max","nodeType":"MemberAccess","src":"11382:16:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6229,"nodeType":"IfStatement","src":"11370:103:19","trueBody":{"id":6228,"nodeType":"Block","src":"11400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"11456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6223,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"11421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6227,"nodeType":"RevertStatement","src":"11414:48:19"}]}},{"expression":{"arguments":[{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6211,"src":"11496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6230,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:19","typeDescriptions":{}}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6215,"id":6234,"nodeType":"Return","src":"11482:20:19"}]},"documentation":{"id":6209,"nodeType":"StructuredDocumentation","src":"11015:276:19","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6236,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"mutability":"mutable","name":"value","nameLocation":"11322:5:19","nodeType":"VariableDeclaration","scope":6236,"src":"11314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:19"},"returnParameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6236,"src":"11352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6213,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:19","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:19"},"scope":7414,"src":"11296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6263,"nodeType":"Block","src":"11860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"11874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6246,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6245,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:19","memberName":"max","nodeType":"MemberAccess","src":"11882:16:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6257,"nodeType":"IfStatement","src":"11870:103:19","trueBody":{"id":6256,"nodeType":"Block","src":"11900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"11956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6251,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"11921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6255,"nodeType":"RevertStatement","src":"11914:48:19"}]}},{"expression":{"arguments":[{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"11996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6258,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:19","typeDescriptions":{}}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6243,"id":6262,"nodeType":"Return","src":"11982:20:19"}]},"documentation":{"id":6237,"nodeType":"StructuredDocumentation","src":"11515:276:19","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6264,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6239,"mutability":"mutable","name":"value","nameLocation":"11822:5:19","nodeType":"VariableDeclaration","scope":6264,"src":"11814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:19"},"returnParameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6264,"src":"11852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6241,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:19","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:19"},"scope":7414,"src":"11796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6291,"nodeType":"Block","src":"12360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"12374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6274,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6273,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:19","memberName":"max","nodeType":"MemberAccess","src":"12382:16:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6285,"nodeType":"IfStatement","src":"12370:103:19","trueBody":{"id":6284,"nodeType":"Block","src":"12400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"12456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6279,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"12421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6283,"nodeType":"RevertStatement","src":"12414:48:19"}]}},{"expression":{"arguments":[{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"12496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6286,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:19","typeDescriptions":{}}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6271,"id":6290,"nodeType":"Return","src":"12482:20:19"}]},"documentation":{"id":6265,"nodeType":"StructuredDocumentation","src":"12015:276:19","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6292,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"value","nameLocation":"12322:5:19","nodeType":"VariableDeclaration","scope":6292,"src":"12314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6266,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:19"},"returnParameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6292,"src":"12352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6269,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:19","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:19"},"scope":7414,"src":"12296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6319,"nodeType":"Block","src":"12860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"12874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6302,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6301,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:19","memberName":"max","nodeType":"MemberAccess","src":"12882:16:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6313,"nodeType":"IfStatement","src":"12870:103:19","trueBody":{"id":6312,"nodeType":"Block","src":"12900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"12956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6307,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"12921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6311,"nodeType":"RevertStatement","src":"12914:48:19"}]}},{"expression":{"arguments":[{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"12996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6314,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:19","typeDescriptions":{}}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6299,"id":6318,"nodeType":"Return","src":"12982:20:19"}]},"documentation":{"id":6293,"nodeType":"StructuredDocumentation","src":"12515:276:19","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6320,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"value","nameLocation":"12822:5:19","nodeType":"VariableDeclaration","scope":6320,"src":"12814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6294,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:19"},"returnParameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6320,"src":"12852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6297,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:19","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:19"},"scope":7414,"src":"12796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6347,"nodeType":"Block","src":"13360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"13374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6330,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6329,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:19","memberName":"max","nodeType":"MemberAccess","src":"13382:16:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6341,"nodeType":"IfStatement","src":"13370:103:19","trueBody":{"id":6340,"nodeType":"Block","src":"13400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"13456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6335,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"13421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6339,"nodeType":"RevertStatement","src":"13414:48:19"}]}},{"expression":{"arguments":[{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"13496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6342,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:19","typeDescriptions":{}}},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6327,"id":6346,"nodeType":"Return","src":"13482:20:19"}]},"documentation":{"id":6321,"nodeType":"StructuredDocumentation","src":"13015:276:19","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6348,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"value","nameLocation":"13322:5:19","nodeType":"VariableDeclaration","scope":6348,"src":"13314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6322,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:19"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6348,"src":"13352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6325,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:19"},"scope":7414,"src":"13296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6375,"nodeType":"Block","src":"13860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"13874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6358,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:19","memberName":"max","nodeType":"MemberAccess","src":"13882:16:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6369,"nodeType":"IfStatement","src":"13870:103:19","trueBody":{"id":6368,"nodeType":"Block","src":"13900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"13956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6363,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"13921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"RevertStatement","src":"13914:48:19"}]}},{"expression":{"arguments":[{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"13996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6370,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:19","typeDescriptions":{}}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6355,"id":6374,"nodeType":"Return","src":"13982:20:19"}]},"documentation":{"id":6349,"nodeType":"StructuredDocumentation","src":"13515:276:19","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6376,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"value","nameLocation":"13822:5:19","nodeType":"VariableDeclaration","scope":6376,"src":"13814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6350,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:19"},"returnParameters":{"id":6355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6376,"src":"13852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6353,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:19","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:19"},"scope":7414,"src":"13796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6403,"nodeType":"Block","src":"14360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"14374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6386,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:19","memberName":"max","nodeType":"MemberAccess","src":"14382:16:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6397,"nodeType":"IfStatement","src":"14370:103:19","trueBody":{"id":6396,"nodeType":"Block","src":"14400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"14456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6391,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"14421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6395,"nodeType":"RevertStatement","src":"14414:48:19"}]}},{"expression":{"arguments":[{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"14496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6398,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:19","typeDescriptions":{}}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6383,"id":6402,"nodeType":"Return","src":"14482:20:19"}]},"documentation":{"id":6377,"nodeType":"StructuredDocumentation","src":"14015:276:19","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6404,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"value","nameLocation":"14322:5:19","nodeType":"VariableDeclaration","scope":6404,"src":"14314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:19"},"returnParameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6404,"src":"14352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6381,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:19","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:19"},"scope":7414,"src":"14296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"14860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"14874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6414,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6413,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:19","memberName":"max","nodeType":"MemberAccess","src":"14882:16:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6425,"nodeType":"IfStatement","src":"14870:103:19","trueBody":{"id":6424,"nodeType":"Block","src":"14900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"14956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6419,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"14921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6423,"nodeType":"RevertStatement","src":"14914:48:19"}]}},{"expression":{"arguments":[{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"14996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6426,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:19","typeDescriptions":{}}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6411,"id":6430,"nodeType":"Return","src":"14982:20:19"}]},"documentation":{"id":6405,"nodeType":"StructuredDocumentation","src":"14515:276:19","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"value","nameLocation":"14822:5:19","nodeType":"VariableDeclaration","scope":6432,"src":"14814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6406,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:19"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6432,"src":"14852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6409,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:19","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:19"},"scope":7414,"src":"14796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6459,"nodeType":"Block","src":"15360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"15374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6442,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6441,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:19","memberName":"max","nodeType":"MemberAccess","src":"15382:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6453,"nodeType":"IfStatement","src":"15370:103:19","trueBody":{"id":6452,"nodeType":"Block","src":"15400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"15456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6447,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"15421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6451,"nodeType":"RevertStatement","src":"15414:48:19"}]}},{"expression":{"arguments":[{"id":6456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"15496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6454,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:19","typeDescriptions":{}}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6439,"id":6458,"nodeType":"Return","src":"15482:20:19"}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"15015:276:19","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6460,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"value","nameLocation":"15322:5:19","nodeType":"VariableDeclaration","scope":6460,"src":"15314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6434,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:19"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6460,"src":"15352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6437,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:19"},"scope":7414,"src":"15296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6487,"nodeType":"Block","src":"15860:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"15874:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6470,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6469,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:19","memberName":"max","nodeType":"MemberAccess","src":"15882:16:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6481,"nodeType":"IfStatement","src":"15870:103:19","trueBody":{"id":6480,"nodeType":"Block","src":"15900:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"15956:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6475,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"15921:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6479,"nodeType":"RevertStatement","src":"15914:48:19"}]}},{"expression":{"arguments":[{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"15996:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6482,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:19","typeDescriptions":{}}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6467,"id":6486,"nodeType":"Return","src":"15982:20:19"}]},"documentation":{"id":6461,"nodeType":"StructuredDocumentation","src":"15515:276:19","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6488,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:19","nodeType":"FunctionDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"value","nameLocation":"15822:5:19","nodeType":"VariableDeclaration","scope":6488,"src":"15814:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6462,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:19"},"returnParameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6488,"src":"15852:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6465,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:19"},"scope":7414,"src":"15796:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6515,"nodeType":"Block","src":"16360:149:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"16374:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6498,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:19","memberName":"max","nodeType":"MemberAccess","src":"16382:16:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6509,"nodeType":"IfStatement","src":"16370:103:19","trueBody":{"id":6508,"nodeType":"Block","src":"16400:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"16456:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6503,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"16421:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6507,"nodeType":"RevertStatement","src":"16414:48:19"}]}},{"expression":{"arguments":[{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6491,"src":"16496:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6510,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:19","typeDescriptions":{}}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6495,"id":6514,"nodeType":"Return","src":"16482:20:19"}]},"documentation":{"id":6489,"nodeType":"StructuredDocumentation","src":"16015:276:19","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:19","nodeType":"FunctionDefinition","parameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6491,"mutability":"mutable","name":"value","nameLocation":"16322:5:19","nodeType":"VariableDeclaration","scope":6516,"src":"16314:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6490,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:19"},"returnParameters":{"id":6495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6516,"src":"16352:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6493,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:19"},"scope":7414,"src":"16296:213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6543,"nodeType":"Block","src":"16854:146:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"16868:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6526,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6525,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:19","memberName":"max","nodeType":"MemberAccess","src":"16876:15:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6537,"nodeType":"IfStatement","src":"16864:101:19","trueBody":{"id":6536,"nodeType":"Block","src":"16893:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"16948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6531,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"16914:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"RevertStatement","src":"16907:47:19"}]}},{"expression":{"arguments":[{"id":6540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"16987:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6538,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:19","typeDescriptions":{}}},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6523,"id":6542,"nodeType":"Return","src":"16974:19:19"}]},"documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"16515:272:19","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6544,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:19","nodeType":"FunctionDefinition","parameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"value","nameLocation":"16817:5:19","nodeType":"VariableDeclaration","scope":6544,"src":"16809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:19"},"returnParameters":{"id":6523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6544,"src":"16847:5:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6521,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:19"},"scope":7414,"src":"16792:208:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6566,"nodeType":"Block","src":"17236:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"17250:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"17246:81:19","trueBody":{"id":6559,"nodeType":"Block","src":"17261:66:19","statements":[{"errorCall":{"arguments":[{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"17310:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6555,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"17282:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6558,"nodeType":"RevertStatement","src":"17275:41:19"}]}},{"expression":{"arguments":[{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"17351:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6561,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:19","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6551,"id":6565,"nodeType":"Return","src":"17336:21:19"}]},"documentation":{"id":6545,"nodeType":"StructuredDocumentation","src":"17006:160:19","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:19","nodeType":"FunctionDefinition","parameters":{"id":6548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6547,"mutability":"mutable","name":"value","nameLocation":"17197:5:19","nodeType":"VariableDeclaration","scope":6567,"src":"17190:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6546,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:19"},"returnParameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6567,"src":"17227:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:19"},"scope":7414,"src":"17171:193:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6592,"nodeType":"Block","src":"17761:150:19","statements":[{"expression":{"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"17771:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"17791:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6576,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:19","typeDescriptions":{}}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6581,"nodeType":"ExpressionStatement","src":"17771:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6573,"src":"17811:10:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"17825:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6591,"nodeType":"IfStatement","src":"17807:98:19","trueBody":{"id":6590,"nodeType":"Block","src":"17832:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"17888:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6585,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"17853:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6589,"nodeType":"RevertStatement","src":"17846:48:19"}]}}]},"documentation":{"id":6568,"nodeType":"StructuredDocumentation","src":"17370:312:19","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6593,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:19","nodeType":"FunctionDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"value","nameLocation":"17712:5:19","nodeType":"VariableDeclaration","scope":6593,"src":"17705:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6569,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:19"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:19","nodeType":"VariableDeclaration","scope":6593,"src":"17742:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6572,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:19","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:19"},"scope":7414,"src":"17687:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6618,"nodeType":"Block","src":"18308:150:19","statements":[{"expression":{"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"18318:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"18338:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6602,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:19","typeDescriptions":{}}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6607,"nodeType":"ExpressionStatement","src":"18318:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"18358:10:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"18372:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6617,"nodeType":"IfStatement","src":"18354:98:19","trueBody":{"id":6616,"nodeType":"Block","src":"18379:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:19","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6596,"src":"18435:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6611,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"18400:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6615,"nodeType":"RevertStatement","src":"18393:48:19"}]}}]},"documentation":{"id":6594,"nodeType":"StructuredDocumentation","src":"17917:312:19","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6619,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:19","nodeType":"FunctionDefinition","parameters":{"id":6597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6596,"mutability":"mutable","name":"value","nameLocation":"18259:5:19","nodeType":"VariableDeclaration","scope":6619,"src":"18252:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6595,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:19"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6599,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:19","nodeType":"VariableDeclaration","scope":6619,"src":"18289:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6598,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:19","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:19"},"scope":7414,"src":"18234:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6644,"nodeType":"Block","src":"18855:150:19","statements":[{"expression":{"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"18865:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"18885:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6628,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:19","typeDescriptions":{}}},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6633,"nodeType":"ExpressionStatement","src":"18865:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6625,"src":"18905:10:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"18919:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6643,"nodeType":"IfStatement","src":"18901:98:19","trueBody":{"id":6642,"nodeType":"Block","src":"18926:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"18982:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6637,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"18947:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6641,"nodeType":"RevertStatement","src":"18940:48:19"}]}}]},"documentation":{"id":6620,"nodeType":"StructuredDocumentation","src":"18464:312:19","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6645,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:19","nodeType":"FunctionDefinition","parameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"value","nameLocation":"18806:5:19","nodeType":"VariableDeclaration","scope":6645,"src":"18799:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6621,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:19"},"returnParameters":{"id":6626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:19","nodeType":"VariableDeclaration","scope":6645,"src":"18836:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6624,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:19","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:19"},"scope":7414,"src":"18781:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6670,"nodeType":"Block","src":"19402:150:19","statements":[{"expression":{"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6651,"src":"19412:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"19432:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6654,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:19","typeDescriptions":{}}},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6659,"nodeType":"ExpressionStatement","src":"19412:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6651,"src":"19452:10:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"19466:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6669,"nodeType":"IfStatement","src":"19448:98:19","trueBody":{"id":6668,"nodeType":"Block","src":"19473:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6648,"src":"19529:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6663,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"19494:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6667,"nodeType":"RevertStatement","src":"19487:48:19"}]}}]},"documentation":{"id":6646,"nodeType":"StructuredDocumentation","src":"19011:312:19","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:19","nodeType":"FunctionDefinition","parameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"value","nameLocation":"19353:5:19","nodeType":"VariableDeclaration","scope":6671,"src":"19346:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6647,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:19"},"returnParameters":{"id":6652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6651,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:19","nodeType":"VariableDeclaration","scope":6671,"src":"19383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6650,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:19","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:19"},"scope":7414,"src":"19328:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6696,"nodeType":"Block","src":"19949:150:19","statements":[{"expression":{"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"19959:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"19979:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6680,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:19","typeDescriptions":{}}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6685,"nodeType":"ExpressionStatement","src":"19959:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"19999:10:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"20013:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6695,"nodeType":"IfStatement","src":"19995:98:19","trueBody":{"id":6694,"nodeType":"Block","src":"20020:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:19","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6674,"src":"20076:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6689,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"20041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6693,"nodeType":"RevertStatement","src":"20034:48:19"}]}}]},"documentation":{"id":6672,"nodeType":"StructuredDocumentation","src":"19558:312:19","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:19","nodeType":"FunctionDefinition","parameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"value","nameLocation":"19900:5:19","nodeType":"VariableDeclaration","scope":6697,"src":"19893:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6673,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:19"},"returnParameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:19","nodeType":"VariableDeclaration","scope":6697,"src":"19930:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6676,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:19","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:19"},"scope":7414,"src":"19875:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6722,"nodeType":"Block","src":"20496:150:19","statements":[{"expression":{"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"20506:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"20526:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6706,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:19","typeDescriptions":{}}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6711,"nodeType":"ExpressionStatement","src":"20506:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"20546:10:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"20560:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6721,"nodeType":"IfStatement","src":"20542:98:19","trueBody":{"id":6720,"nodeType":"Block","src":"20567:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:19","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"20623:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6715,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"20588:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6719,"nodeType":"RevertStatement","src":"20581:48:19"}]}}]},"documentation":{"id":6698,"nodeType":"StructuredDocumentation","src":"20105:312:19","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6723,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:19","nodeType":"FunctionDefinition","parameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"value","nameLocation":"20447:5:19","nodeType":"VariableDeclaration","scope":6723,"src":"20440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6699,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:19"},"returnParameters":{"id":6704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6703,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:19","nodeType":"VariableDeclaration","scope":6723,"src":"20477:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6702,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:19","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:19"},"scope":7414,"src":"20422:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6748,"nodeType":"Block","src":"21043:150:19","statements":[{"expression":{"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"21053:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"21073:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6732,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:19","typeDescriptions":{}}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6737,"nodeType":"ExpressionStatement","src":"21053:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"21093:10:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"21107:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6747,"nodeType":"IfStatement","src":"21089:98:19","trueBody":{"id":6746,"nodeType":"Block","src":"21114:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:19","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"21170:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6741,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"21135:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6745,"nodeType":"RevertStatement","src":"21128:48:19"}]}}]},"documentation":{"id":6724,"nodeType":"StructuredDocumentation","src":"20652:312:19","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6749,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:19","nodeType":"FunctionDefinition","parameters":{"id":6727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6726,"mutability":"mutable","name":"value","nameLocation":"20994:5:19","nodeType":"VariableDeclaration","scope":6749,"src":"20987:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6725,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:19"},"returnParameters":{"id":6730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:19","nodeType":"VariableDeclaration","scope":6749,"src":"21024:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6728,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:19","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:19"},"scope":7414,"src":"20969:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6774,"nodeType":"Block","src":"21590:150:19","statements":[{"expression":{"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"21600:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"21620:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6758,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:19","typeDescriptions":{}}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6763,"nodeType":"ExpressionStatement","src":"21600:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"21640:10:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"21654:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6773,"nodeType":"IfStatement","src":"21636:98:19","trueBody":{"id":6772,"nodeType":"Block","src":"21661:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"21717:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6767,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"21682:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6771,"nodeType":"RevertStatement","src":"21675:48:19"}]}}]},"documentation":{"id":6750,"nodeType":"StructuredDocumentation","src":"21199:312:19","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6775,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:19","nodeType":"FunctionDefinition","parameters":{"id":6753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"value","nameLocation":"21541:5:19","nodeType":"VariableDeclaration","scope":6775,"src":"21534:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6751,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:19"},"returnParameters":{"id":6756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6755,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:19","nodeType":"VariableDeclaration","scope":6775,"src":"21571:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6754,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:19","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:19"},"scope":7414,"src":"21516:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6800,"nodeType":"Block","src":"22137:150:19","statements":[{"expression":{"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"22147:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"22167:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6784,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:19","typeDescriptions":{}}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6789,"nodeType":"ExpressionStatement","src":"22147:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6781,"src":"22187:10:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"22201:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6799,"nodeType":"IfStatement","src":"22183:98:19","trueBody":{"id":6798,"nodeType":"Block","src":"22208:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:19","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"22264:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6793,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"22229:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6797,"nodeType":"RevertStatement","src":"22222:48:19"}]}}]},"documentation":{"id":6776,"nodeType":"StructuredDocumentation","src":"21746:312:19","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6801,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:19","nodeType":"FunctionDefinition","parameters":{"id":6779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"value","nameLocation":"22088:5:19","nodeType":"VariableDeclaration","scope":6801,"src":"22081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6777,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:19"},"returnParameters":{"id":6782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6781,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:19","nodeType":"VariableDeclaration","scope":6801,"src":"22118:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6780,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:19","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:19"},"scope":7414,"src":"22063:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6826,"nodeType":"Block","src":"22684:150:19","statements":[{"expression":{"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6807,"src":"22694:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"22714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6810,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:19","typeDescriptions":{}}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6815,"nodeType":"ExpressionStatement","src":"22694:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6807,"src":"22734:10:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"22748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6825,"nodeType":"IfStatement","src":"22730:98:19","trueBody":{"id":6824,"nodeType":"Block","src":"22755:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"22811:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6819,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"22776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6823,"nodeType":"RevertStatement","src":"22769:48:19"}]}}]},"documentation":{"id":6802,"nodeType":"StructuredDocumentation","src":"22293:312:19","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6827,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:19","nodeType":"FunctionDefinition","parameters":{"id":6805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6804,"mutability":"mutable","name":"value","nameLocation":"22635:5:19","nodeType":"VariableDeclaration","scope":6827,"src":"22628:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6803,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:19"},"returnParameters":{"id":6808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6807,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:19","nodeType":"VariableDeclaration","scope":6827,"src":"22665:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6806,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:19","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:19"},"scope":7414,"src":"22610:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6852,"nodeType":"Block","src":"23231:150:19","statements":[{"expression":{"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"23241:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"23261:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6836,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:19","typeDescriptions":{}}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6841,"nodeType":"ExpressionStatement","src":"23241:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"23281:10:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"23295:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6851,"nodeType":"IfStatement","src":"23277:98:19","trueBody":{"id":6850,"nodeType":"Block","src":"23302:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:19","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"23358:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6845,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"23323:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6849,"nodeType":"RevertStatement","src":"23316:48:19"}]}}]},"documentation":{"id":6828,"nodeType":"StructuredDocumentation","src":"22840:312:19","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6853,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:19","nodeType":"FunctionDefinition","parameters":{"id":6831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6830,"mutability":"mutable","name":"value","nameLocation":"23182:5:19","nodeType":"VariableDeclaration","scope":6853,"src":"23175:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6829,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:19"},"returnParameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6833,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:19","nodeType":"VariableDeclaration","scope":6853,"src":"23212:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6832,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:19","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:19"},"scope":7414,"src":"23157:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6878,"nodeType":"Block","src":"23778:150:19","statements":[{"expression":{"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"23788:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"23808:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6862,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:19","typeDescriptions":{}}},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6867,"nodeType":"ExpressionStatement","src":"23788:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6859,"src":"23828:10:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"23842:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6877,"nodeType":"IfStatement","src":"23824:98:19","trueBody":{"id":6876,"nodeType":"Block","src":"23849:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"23905:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6871,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"23870:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6875,"nodeType":"RevertStatement","src":"23863:48:19"}]}}]},"documentation":{"id":6854,"nodeType":"StructuredDocumentation","src":"23387:312:19","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6879,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:19","nodeType":"FunctionDefinition","parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6856,"mutability":"mutable","name":"value","nameLocation":"23729:5:19","nodeType":"VariableDeclaration","scope":6879,"src":"23722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6855,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:19"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:19","nodeType":"VariableDeclaration","scope":6879,"src":"23759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6858,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:19","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:19"},"scope":7414,"src":"23704:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6904,"nodeType":"Block","src":"24325:150:19","statements":[{"expression":{"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"24335:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"24355:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6888,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:19","typeDescriptions":{}}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6893,"nodeType":"ExpressionStatement","src":"24335:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"24375:10:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"24389:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6903,"nodeType":"IfStatement","src":"24371:98:19","trueBody":{"id":6902,"nodeType":"Block","src":"24396:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:19","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"24452:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6897,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"24417:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6901,"nodeType":"RevertStatement","src":"24410:48:19"}]}}]},"documentation":{"id":6880,"nodeType":"StructuredDocumentation","src":"23934:312:19","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6905,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:19","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6882,"mutability":"mutable","name":"value","nameLocation":"24276:5:19","nodeType":"VariableDeclaration","scope":6905,"src":"24269:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6881,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:19"},"returnParameters":{"id":6886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:19","nodeType":"VariableDeclaration","scope":6905,"src":"24306:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6884,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:19","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:19"},"scope":7414,"src":"24251:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6930,"nodeType":"Block","src":"24872:150:19","statements":[{"expression":{"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"24882:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"24902:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6914,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:19","typeDescriptions":{}}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6919,"nodeType":"ExpressionStatement","src":"24882:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"24922:10:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"24936:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6929,"nodeType":"IfStatement","src":"24918:98:19","trueBody":{"id":6928,"nodeType":"Block","src":"24943:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:19","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"24999:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6923,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"24964:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6927,"nodeType":"RevertStatement","src":"24957:48:19"}]}}]},"documentation":{"id":6906,"nodeType":"StructuredDocumentation","src":"24481:312:19","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6931,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:19","nodeType":"FunctionDefinition","parameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"value","nameLocation":"24823:5:19","nodeType":"VariableDeclaration","scope":6931,"src":"24816:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6907,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:19"},"returnParameters":{"id":6912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6911,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:19","nodeType":"VariableDeclaration","scope":6931,"src":"24853:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6910,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:19","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:19"},"scope":7414,"src":"24798:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6956,"nodeType":"Block","src":"25419:150:19","statements":[{"expression":{"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"25429:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"25449:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6940,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:19","typeDescriptions":{}}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6945,"nodeType":"ExpressionStatement","src":"25429:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"25469:10:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"25483:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6955,"nodeType":"IfStatement","src":"25465:98:19","trueBody":{"id":6954,"nodeType":"Block","src":"25490:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:19","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"25546:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6949,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"25511:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6953,"nodeType":"RevertStatement","src":"25504:48:19"}]}}]},"documentation":{"id":6932,"nodeType":"StructuredDocumentation","src":"25028:312:19","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6957,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:19","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"value","nameLocation":"25370:5:19","nodeType":"VariableDeclaration","scope":6957,"src":"25363:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6933,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:19"},"returnParameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6937,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:19","nodeType":"VariableDeclaration","scope":6957,"src":"25400:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6936,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:19","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:19"},"scope":7414,"src":"25345:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6982,"nodeType":"Block","src":"25966:150:19","statements":[{"expression":{"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"25976:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"25996:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6966,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:19","typeDescriptions":{}}},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6971,"nodeType":"ExpressionStatement","src":"25976:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"26016:10:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"26030:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6981,"nodeType":"IfStatement","src":"26012:98:19","trueBody":{"id":6980,"nodeType":"Block","src":"26037:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"26093:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6975,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"26058:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6979,"nodeType":"RevertStatement","src":"26051:48:19"}]}}]},"documentation":{"id":6958,"nodeType":"StructuredDocumentation","src":"25575:312:19","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6983,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:19","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"value","nameLocation":"25917:5:19","nodeType":"VariableDeclaration","scope":6983,"src":"25910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6959,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:19"},"returnParameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:19","nodeType":"VariableDeclaration","scope":6983,"src":"25947:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6962,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:19"},"scope":7414,"src":"25892:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7008,"nodeType":"Block","src":"26513:150:19","statements":[{"expression":{"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"26523:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"26543:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6992,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:19","typeDescriptions":{}}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6997,"nodeType":"ExpressionStatement","src":"26523:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"26563:10:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"26577:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7007,"nodeType":"IfStatement","src":"26559:98:19","trueBody":{"id":7006,"nodeType":"Block","src":"26584:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:19","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6986,"src":"26640:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7001,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"26605:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7005,"nodeType":"RevertStatement","src":"26598:48:19"}]}}]},"documentation":{"id":6984,"nodeType":"StructuredDocumentation","src":"26122:312:19","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7009,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:19","nodeType":"FunctionDefinition","parameters":{"id":6987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6986,"mutability":"mutable","name":"value","nameLocation":"26464:5:19","nodeType":"VariableDeclaration","scope":7009,"src":"26457:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6985,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:19"},"returnParameters":{"id":6990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:19","nodeType":"VariableDeclaration","scope":7009,"src":"26494:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6988,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:19","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:19"},"scope":7414,"src":"26439:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7034,"nodeType":"Block","src":"27060:150:19","statements":[{"expression":{"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"27070:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"27090:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7018,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:19","typeDescriptions":{}}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7023,"nodeType":"ExpressionStatement","src":"27070:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7015,"src":"27110:10:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"27124:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7033,"nodeType":"IfStatement","src":"27106:98:19","trueBody":{"id":7032,"nodeType":"Block","src":"27131:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:19","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"27187:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7027,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"27152:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7031,"nodeType":"RevertStatement","src":"27145:48:19"}]}}]},"documentation":{"id":7010,"nodeType":"StructuredDocumentation","src":"26669:312:19","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7035,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:19","nodeType":"FunctionDefinition","parameters":{"id":7013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"value","nameLocation":"27011:5:19","nodeType":"VariableDeclaration","scope":7035,"src":"27004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7011,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:19"},"returnParameters":{"id":7016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7015,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:19","nodeType":"VariableDeclaration","scope":7035,"src":"27041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7014,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:19","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:19"},"scope":7414,"src":"26986:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7060,"nodeType":"Block","src":"27607:150:19","statements":[{"expression":{"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"27617:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"27637:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7044,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:19","typeDescriptions":{}}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7049,"nodeType":"ExpressionStatement","src":"27617:26:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"27657:10:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"27671:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7059,"nodeType":"IfStatement","src":"27653:98:19","trueBody":{"id":7058,"nodeType":"Block","src":"27678:73:19","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:19","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"27734:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7053,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"27699:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7057,"nodeType":"RevertStatement","src":"27692:48:19"}]}}]},"documentation":{"id":7036,"nodeType":"StructuredDocumentation","src":"27216:312:19","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7061,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:19","nodeType":"FunctionDefinition","parameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7038,"mutability":"mutable","name":"value","nameLocation":"27558:5:19","nodeType":"VariableDeclaration","scope":7061,"src":"27551:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7037,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:19"},"returnParameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:19","nodeType":"VariableDeclaration","scope":7061,"src":"27588:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7040,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:19","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:19"},"scope":7414,"src":"27533:224:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7086,"nodeType":"Block","src":"28147:148:19","statements":[{"expression":{"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"28157:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"28176:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7070,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:19","typeDescriptions":{}}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7075,"nodeType":"ExpressionStatement","src":"28157:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7067,"src":"28196:10:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"28210:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7085,"nodeType":"IfStatement","src":"28192:97:19","trueBody":{"id":7084,"nodeType":"Block","src":"28217:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"28272:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7079,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"28238:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7083,"nodeType":"RevertStatement","src":"28231:47:19"}]}}]},"documentation":{"id":7062,"nodeType":"StructuredDocumentation","src":"27763:307:19","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7087,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:19","nodeType":"FunctionDefinition","parameters":{"id":7065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"value","nameLocation":"28099:5:19","nodeType":"VariableDeclaration","scope":7087,"src":"28092:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7063,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:19"},"returnParameters":{"id":7068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7067,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:19","nodeType":"VariableDeclaration","scope":7087,"src":"28129:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7066,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:19","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:19"},"scope":7414,"src":"28075:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7112,"nodeType":"Block","src":"28685:148:19","statements":[{"expression":{"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"28695:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"28714:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7096,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:19","typeDescriptions":{}}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7101,"nodeType":"ExpressionStatement","src":"28695:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"28734:10:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"28748:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7111,"nodeType":"IfStatement","src":"28730:97:19","trueBody":{"id":7110,"nodeType":"Block","src":"28755:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:19","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"28810:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7105,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"28776:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7109,"nodeType":"RevertStatement","src":"28769:47:19"}]}}]},"documentation":{"id":7088,"nodeType":"StructuredDocumentation","src":"28301:307:19","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7113,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:19","nodeType":"FunctionDefinition","parameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"value","nameLocation":"28637:5:19","nodeType":"VariableDeclaration","scope":7113,"src":"28630:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7089,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:19"},"returnParameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7093,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:19","nodeType":"VariableDeclaration","scope":7113,"src":"28667:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7092,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:19","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:19"},"scope":7414,"src":"28613:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7138,"nodeType":"Block","src":"29223:148:19","statements":[{"expression":{"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"29233:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"29252:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7122,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:19","typeDescriptions":{}}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7127,"nodeType":"ExpressionStatement","src":"29233:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"29272:10:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"29286:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7137,"nodeType":"IfStatement","src":"29268:97:19","trueBody":{"id":7136,"nodeType":"Block","src":"29293:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:19","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"29348:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7131,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"29314:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7135,"nodeType":"RevertStatement","src":"29307:47:19"}]}}]},"documentation":{"id":7114,"nodeType":"StructuredDocumentation","src":"28839:307:19","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7139,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:19","nodeType":"FunctionDefinition","parameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"value","nameLocation":"29175:5:19","nodeType":"VariableDeclaration","scope":7139,"src":"29168:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7115,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:19"},"returnParameters":{"id":7120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:19","nodeType":"VariableDeclaration","scope":7139,"src":"29205:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7118,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:19","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:19"},"scope":7414,"src":"29151:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7164,"nodeType":"Block","src":"29761:148:19","statements":[{"expression":{"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"29771:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"29790:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7148,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:19","typeDescriptions":{}}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7153,"nodeType":"ExpressionStatement","src":"29771:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"29810:10:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"29824:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7163,"nodeType":"IfStatement","src":"29806:97:19","trueBody":{"id":7162,"nodeType":"Block","src":"29831:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7142,"src":"29886:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7157,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"29852:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7161,"nodeType":"RevertStatement","src":"29845:47:19"}]}}]},"documentation":{"id":7140,"nodeType":"StructuredDocumentation","src":"29377:307:19","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7165,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:19","nodeType":"FunctionDefinition","parameters":{"id":7143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7142,"mutability":"mutable","name":"value","nameLocation":"29713:5:19","nodeType":"VariableDeclaration","scope":7165,"src":"29706:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7141,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:19"},"returnParameters":{"id":7146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7145,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:19","nodeType":"VariableDeclaration","scope":7165,"src":"29743:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7144,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:19"},"scope":7414,"src":"29689:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7190,"nodeType":"Block","src":"30299:148:19","statements":[{"expression":{"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"30309:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"30328:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7174,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:19","typeDescriptions":{}}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7179,"nodeType":"ExpressionStatement","src":"30309:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7171,"src":"30348:10:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7189,"nodeType":"IfStatement","src":"30344:97:19","trueBody":{"id":7188,"nodeType":"Block","src":"30369:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7168,"src":"30424:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7183,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"30390:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7187,"nodeType":"RevertStatement","src":"30383:47:19"}]}}]},"documentation":{"id":7166,"nodeType":"StructuredDocumentation","src":"29915:307:19","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7191,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:19","nodeType":"FunctionDefinition","parameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7168,"mutability":"mutable","name":"value","nameLocation":"30251:5:19","nodeType":"VariableDeclaration","scope":7191,"src":"30244:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7167,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:19"},"returnParameters":{"id":7172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7171,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:19","nodeType":"VariableDeclaration","scope":7191,"src":"30281:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7170,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:19","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:19"},"scope":7414,"src":"30227:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7216,"nodeType":"Block","src":"30837:148:19","statements":[{"expression":{"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"30847:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"30866:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7200,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:19","typeDescriptions":{}}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7205,"nodeType":"ExpressionStatement","src":"30847:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7206,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"30886:10:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"30900:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7215,"nodeType":"IfStatement","src":"30882:97:19","trueBody":{"id":7214,"nodeType":"Block","src":"30907:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:19","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"30962:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7209,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"30928:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7213,"nodeType":"RevertStatement","src":"30921:47:19"}]}}]},"documentation":{"id":7192,"nodeType":"StructuredDocumentation","src":"30453:307:19","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7217,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:19","nodeType":"FunctionDefinition","parameters":{"id":7195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7194,"mutability":"mutable","name":"value","nameLocation":"30789:5:19","nodeType":"VariableDeclaration","scope":7217,"src":"30782:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7193,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:19"},"returnParameters":{"id":7198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7197,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:19","nodeType":"VariableDeclaration","scope":7217,"src":"30819:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7196,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:19","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:19"},"scope":7414,"src":"30765:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7242,"nodeType":"Block","src":"31375:148:19","statements":[{"expression":{"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"31385:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"31404:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7226,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:19","typeDescriptions":{}}},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7231,"nodeType":"ExpressionStatement","src":"31385:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7232,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7223,"src":"31424:10:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"31438:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7241,"nodeType":"IfStatement","src":"31420:97:19","trueBody":{"id":7240,"nodeType":"Block","src":"31445:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"31500:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7235,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"31466:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"RevertStatement","src":"31459:47:19"}]}}]},"documentation":{"id":7218,"nodeType":"StructuredDocumentation","src":"30991:307:19","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7243,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:19","nodeType":"FunctionDefinition","parameters":{"id":7221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"value","nameLocation":"31327:5:19","nodeType":"VariableDeclaration","scope":7243,"src":"31320:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7219,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:19"},"returnParameters":{"id":7224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7223,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:19","nodeType":"VariableDeclaration","scope":7243,"src":"31357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7222,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:19","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:19"},"scope":7414,"src":"31303:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7268,"nodeType":"Block","src":"31913:148:19","statements":[{"expression":{"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"31923:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"31942:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7252,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:19","typeDescriptions":{}}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7257,"nodeType":"ExpressionStatement","src":"31923:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"31962:10:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"31976:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7267,"nodeType":"IfStatement","src":"31958:97:19","trueBody":{"id":7266,"nodeType":"Block","src":"31983:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:19","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"32038:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7261,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"32004:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7265,"nodeType":"RevertStatement","src":"31997:47:19"}]}}]},"documentation":{"id":7244,"nodeType":"StructuredDocumentation","src":"31529:307:19","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7269,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:19","nodeType":"FunctionDefinition","parameters":{"id":7247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7246,"mutability":"mutable","name":"value","nameLocation":"31865:5:19","nodeType":"VariableDeclaration","scope":7269,"src":"31858:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7245,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:19"},"returnParameters":{"id":7250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7249,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:19","nodeType":"VariableDeclaration","scope":7269,"src":"31895:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7248,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:19","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:19"},"scope":7414,"src":"31841:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7294,"nodeType":"Block","src":"32451:148:19","statements":[{"expression":{"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"32461:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"32480:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7278,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:19","typeDescriptions":{}}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7283,"nodeType":"ExpressionStatement","src":"32461:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7284,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"32500:10:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"32514:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7293,"nodeType":"IfStatement","src":"32496:97:19","trueBody":{"id":7292,"nodeType":"Block","src":"32521:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7272,"src":"32576:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7287,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"32542:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7291,"nodeType":"RevertStatement","src":"32535:47:19"}]}}]},"documentation":{"id":7270,"nodeType":"StructuredDocumentation","src":"32067:307:19","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7295,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:19","nodeType":"FunctionDefinition","parameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"value","nameLocation":"32403:5:19","nodeType":"VariableDeclaration","scope":7295,"src":"32396:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7271,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:19"},"returnParameters":{"id":7276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:19","nodeType":"VariableDeclaration","scope":7295,"src":"32433:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7274,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:19","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:19"},"scope":7414,"src":"32379:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7320,"nodeType":"Block","src":"32989:148:19","statements":[{"expression":{"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"32999:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"33018:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7304,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:19","typeDescriptions":{}}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7309,"nodeType":"ExpressionStatement","src":"32999:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"33038:10:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"33052:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7319,"nodeType":"IfStatement","src":"33034:97:19","trueBody":{"id":7318,"nodeType":"Block","src":"33059:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:19","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7298,"src":"33114:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7313,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"33080:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7317,"nodeType":"RevertStatement","src":"33073:47:19"}]}}]},"documentation":{"id":7296,"nodeType":"StructuredDocumentation","src":"32605:307:19","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7321,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:19","nodeType":"FunctionDefinition","parameters":{"id":7299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7298,"mutability":"mutable","name":"value","nameLocation":"32941:5:19","nodeType":"VariableDeclaration","scope":7321,"src":"32934:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7297,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:19"},"returnParameters":{"id":7302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7301,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:19","nodeType":"VariableDeclaration","scope":7321,"src":"32971:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7300,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:19","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:19"},"scope":7414,"src":"32917:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7346,"nodeType":"Block","src":"33527:148:19","statements":[{"expression":{"id":7334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"33537:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"33556:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7330,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:19","typeDescriptions":{}}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7335,"nodeType":"ExpressionStatement","src":"33537:25:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"33576:10:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"33590:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7345,"nodeType":"IfStatement","src":"33572:97:19","trueBody":{"id":7344,"nodeType":"Block","src":"33597:72:19","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"33652:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7339,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"33618:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7343,"nodeType":"RevertStatement","src":"33611:47:19"}]}}]},"documentation":{"id":7322,"nodeType":"StructuredDocumentation","src":"33143:307:19","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7347,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:19","nodeType":"FunctionDefinition","parameters":{"id":7325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7324,"mutability":"mutable","name":"value","nameLocation":"33479:5:19","nodeType":"VariableDeclaration","scope":7347,"src":"33472:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7323,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:19"},"returnParameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:19","nodeType":"VariableDeclaration","scope":7347,"src":"33509:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7326,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:19","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:19"},"scope":7414,"src":"33455:220:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7372,"nodeType":"Block","src":"34058:146:19","statements":[{"expression":{"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"34068:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"34086:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7356,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:19","typeDescriptions":{}}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7361,"nodeType":"ExpressionStatement","src":"34068:24:19"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"34106:10:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"34120:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7371,"nodeType":"IfStatement","src":"34102:96:19","trueBody":{"id":7370,"nodeType":"Block","src":"34127:71:19","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"34181:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7365,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5671,"src":"34148:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7369,"nodeType":"RevertStatement","src":"34141:46:19"}]}}]},"documentation":{"id":7348,"nodeType":"StructuredDocumentation","src":"33681:302:19","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7373,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:19","nodeType":"FunctionDefinition","parameters":{"id":7351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"value","nameLocation":"34011:5:19","nodeType":"VariableDeclaration","scope":7373,"src":"34004:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7349,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:19"},"returnParameters":{"id":7354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7353,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:19","nodeType":"VariableDeclaration","scope":7373,"src":"34041:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7352,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:19","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:19"},"scope":7414,"src":"33988:216:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7402,"nodeType":"Block","src":"34444:250:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"34557:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7385,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:19","memberName":"max","nodeType":"MemberAccess","src":"34573:16:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7382,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:19","typeDescriptions":{}}},"id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7396,"nodeType":"IfStatement","src":"34553:105:19","trueBody":{"id":7395,"nodeType":"Block","src":"34592:66:19","statements":[{"errorCall":{"arguments":[{"id":7392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"34641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7391,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"34613:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"RevertStatement","src":"34606:41:19"}]}},{"expression":{"arguments":[{"id":7399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"34681:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7397,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:19","typeDescriptions":{}}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7380,"id":7401,"nodeType":"Return","src":"34667:20:19"}]},"documentation":{"id":7374,"nodeType":"StructuredDocumentation","src":"34210:165:19","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7403,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:19","nodeType":"FunctionDefinition","parameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"value","nameLocation":"34406:5:19","nodeType":"VariableDeclaration","scope":7403,"src":"34398:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7375,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:19"},"returnParameters":{"id":7380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7403,"src":"34436:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7378,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:19"},"scope":7414,"src":"34380:314:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7412,"nodeType":"Block","src":"34853:87:19","statements":[{"AST":{"nativeSrc":"34888:46:19","nodeType":"YulBlock","src":"34888:46:19","statements":[{"nativeSrc":"34902:22:19","nodeType":"YulAssignment","src":"34902:22:19","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:19","nodeType":"YulIdentifier","src":"34921:1:19"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:19","nodeType":"YulIdentifier","src":"34914:6:19"},"nativeSrc":"34914:9:19","nodeType":"YulFunctionCall","src":"34914:9:19"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:19","nodeType":"YulIdentifier","src":"34907:6:19"},"nativeSrc":"34907:17:19","nodeType":"YulFunctionCall","src":"34907:17:19"},"variableNames":[{"name":"u","nativeSrc":"34902:1:19","nodeType":"YulIdentifier","src":"34902:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7406,"isOffset":false,"isSlot":false,"src":"34921:1:19","valueSize":1},{"declaration":7409,"isOffset":false,"isSlot":false,"src":"34902:1:19","valueSize":1}],"flags":["memory-safe"],"id":7411,"nodeType":"InlineAssembly","src":"34863:71:19"}]},"documentation":{"id":7404,"nodeType":"StructuredDocumentation","src":"34700:90:19","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7413,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:19","nodeType":"FunctionDefinition","parameters":{"id":7407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7406,"mutability":"mutable","name":"b","nameLocation":"34816:1:19","nodeType":"VariableDeclaration","scope":7413,"src":"34811:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7405,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:19"},"returnParameters":{"id":7410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7409,"mutability":"mutable","name":"u","nameLocation":"34850:1:19","nodeType":"VariableDeclaration","scope":7413,"src":"34842:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7408,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:19"},"scope":7414,"src":"34795:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7415,"src":"769:34173:19","usedErrors":[5659,5664,5671,5676],"usedEvents":[]}],"src":"192:34751:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7414],"SignedMath":[7558]},"id":7559,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7559,"sourceUnit":7415,"src":"135:40:20","symbolAliases":[{"foreign":{"id":7417,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"143:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"177:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7558,"linearizedBaseContracts":[7558],"name":"SignedMath","nameLocation":"266:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":7448,"nodeType":"Block","src":"746:215:20","statements":[{"id":7447,"nodeType":"UncheckedBlock","src":"756:199:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"894:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"900:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7433,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"904:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7440,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"932:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7438,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"916:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7414_$","typeString":"type(library SafeCast)"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:20","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7413,"src":"916:15:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7436,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:20","typeDescriptions":{}}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7430,"id":7446,"nodeType":"Return","src":"887:57:20"}]}]},"documentation":{"id":7420,"nodeType":"StructuredDocumentation","src":"283:374:20","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7449,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:20","nodeType":"FunctionDefinition","parameters":{"id":7427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"condition","nameLocation":"684:9:20","nodeType":"VariableDeclaration","scope":7449,"src":"679:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7421,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7424,"mutability":"mutable","name":"a","nameLocation":"702:1:20","nodeType":"VariableDeclaration","scope":7449,"src":"695:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7423,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7426,"mutability":"mutable","name":"b","nameLocation":"712:1:20","nodeType":"VariableDeclaration","scope":7449,"src":"705:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7425,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:20"},"returnParameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7449,"src":"738:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7428,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:20"},"scope":7558,"src":"662:299:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7467,"nodeType":"Block","src":"1102:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"1127:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"1131:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7452,"src":"1134:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"1137:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7459,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"1119:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7458,"id":7466,"nodeType":"Return","src":"1112:27:20"}]},"documentation":{"id":7450,"nodeType":"StructuredDocumentation","src":"967:66:20","text":" @dev Returns the largest of two signed numbers."},"id":7468,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:20","nodeType":"FunctionDefinition","parameters":{"id":7455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7452,"mutability":"mutable","name":"a","nameLocation":"1058:1:20","nodeType":"VariableDeclaration","scope":7468,"src":"1051:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7451,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7454,"mutability":"mutable","name":"b","nameLocation":"1068:1:20","nodeType":"VariableDeclaration","scope":7468,"src":"1061:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7453,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:20"},"returnParameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7468,"src":"1094:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7456,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:20"},"scope":7558,"src":"1038:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7486,"nodeType":"Block","src":"1288:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1313:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"1317:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1320:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"1323:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7478,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"1305:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7477,"id":7485,"nodeType":"Return","src":"1298:27:20"}]},"documentation":{"id":7469,"nodeType":"StructuredDocumentation","src":"1152:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":7487,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:20","nodeType":"FunctionDefinition","parameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7471,"mutability":"mutable","name":"a","nameLocation":"1244:1:20","nodeType":"VariableDeclaration","scope":7487,"src":"1237:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7470,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7473,"mutability":"mutable","name":"b","nameLocation":"1254:1:20","nodeType":"VariableDeclaration","scope":7487,"src":"1247:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7472,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:20"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7487,"src":"1280:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7475,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:20"},"scope":7558,"src":"1224:108:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7530,"nodeType":"Block","src":"1537:162:20","statements":[{"assignments":[7498],"declarations":[{"constant":false,"id":7498,"mutability":"mutable","name":"x","nameLocation":"1606:1:20","nodeType":"VariableDeclaration","scope":7530,"src":"1599:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7497,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7511,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7499,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"1611:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7500,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"1615:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"1622:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"1626:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7517,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7498,"src":"1671:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{}}},"id":7518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7513,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:20","typeDescriptions":{}}},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"1685:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7523,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"1689:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7496,"id":7529,"nodeType":"Return","src":"1644:48:20"}]},"documentation":{"id":7488,"nodeType":"StructuredDocumentation","src":"1338:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7531,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:20","nodeType":"FunctionDefinition","parameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"a","nameLocation":"1493:1:20","nodeType":"VariableDeclaration","scope":7531,"src":"1486:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7489,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7492,"mutability":"mutable","name":"b","nameLocation":"1503:1:20","nodeType":"VariableDeclaration","scope":7531,"src":"1496:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7491,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:20"},"returnParameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7531,"src":"1529:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7494,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:20"},"scope":7558,"src":"1469:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7556,"nodeType":"Block","src":"1843:767:20","statements":[{"id":7555,"nodeType":"UncheckedBlock","src":"1853:751:20","statements":[{"assignments":[7540],"declarations":[{"constant":false,"id":7540,"mutability":"mutable","name":"mask","nameLocation":"2424:4:20","nodeType":"VariableDeclaration","scope":7555,"src":"2417:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7539,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7544,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7541,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"2431:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7547,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7534,"src":"2576:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7548,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"2580:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7551,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"2588:4:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:20","typeDescriptions":{}}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7538,"id":7554,"nodeType":"Return","src":"2560:33:20"}]}]},"documentation":{"id":7532,"nodeType":"StructuredDocumentation","src":"1705:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7557,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:20","nodeType":"FunctionDefinition","parameters":{"id":7535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7534,"mutability":"mutable","name":"n","nameLocation":"1808:1:20","nodeType":"VariableDeclaration","scope":7557,"src":"1801:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7533,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:20"},"returnParameters":{"id":7538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7557,"src":"1834:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:20"},"scope":7558,"src":"1788:822:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7559,"src":"258:2354:20","usedErrors":[],"usedEvents":[]}],"src":"109:2504:20"},"id":20},"contracts/SubscriptionNFT.sol":{"ast":{"absolutePath":"contracts/SubscriptionNFT.sol","exportedSymbols":{"ECDSA":[3679],"EIP712":[3906],"ERC721":[1266],"Ownable":[147],"Strings":[3331],"SubscriptionNFT":[8383]},"id":8384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7560,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"33:24:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7562,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8384,"sourceUnit":1267,"src":"461:71:21","symbolAliases":[{"foreign":{"id":7561,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"469:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7564,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8384,"sourceUnit":148,"src":"534:67:21","symbolAliases":[{"foreign":{"id":7563,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"542:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8384,"sourceUnit":3680,"src":"603:75:21","symbolAliases":[{"foreign":{"id":7565,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"611:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":7568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8384,"sourceUnit":3907,"src":"680:77:21","symbolAliases":[{"foreign":{"id":7567,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"688:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8384,"sourceUnit":3332,"src":"759:66:21","symbolAliases":[{"foreign":{"id":7569,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"767:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7571,"name":"ERC721","nameLocations":["857:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"857:6:21"},"id":7572,"nodeType":"InheritanceSpecifier","src":"857:6:21"},{"baseName":{"id":7573,"name":"Ownable","nameLocations":["865:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"865:7:21"},"id":7574,"nodeType":"InheritanceSpecifier","src":"865:7:21"},{"baseName":{"id":7575,"name":"EIP712","nameLocations":["874:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3906,"src":"874:6:21"},"id":7576,"nodeType":"InheritanceSpecifier","src":"874:6:21"}],"canonicalName":"SubscriptionNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8383,"linearizedBaseContracts":[8383,3906,172,147,1266,262,1429,1383,4016,4028,1536],"name":"SubscriptionNFT","nameLocation":"838:15:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7579,"libraryName":{"id":7577,"name":"Strings","nameLocations":["894:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3331,"src":"894:7:21"},"nodeType":"UsingForDirective","src":"888:26:21","typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"188a6013","id":7582,"mutability":"constant","name":"PLAN_MONTHLY","nameLocation":"1337:12:21","nodeType":"VariableDeclaration","scope":8383,"src":"1315:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7580,"name":"uint8","nodeType":"ElementaryTypeName","src":"1315:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":7581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1352:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"959510a6","id":7585,"mutability":"constant","name":"PLAN_YEARLY","nameLocation":"1394:11:21","nodeType":"VariableDeclaration","scope":8383,"src":"1372:38:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7583,"name":"uint8","nodeType":"ElementaryTypeName","src":"1372:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":7584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1409:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"id":7588,"mutability":"constant","name":"EIP712_NAME","nameLocation":"1503:11:21","nodeType":"VariableDeclaration","scope":8383,"src":"1479:59:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7586,"name":"string","nodeType":"ElementaryTypeName","src":"1479:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"446f7463617265537562736372697074696f6e","id":7587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1517:21:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc4fecc013d82c9287cbc936ef3ca11056978b8dc1cf212c8a123eb04f3f19e4","typeString":"literal_string \"DotcareSubscription\""},"value":"DotcareSubscription"},"visibility":"private"},{"constant":true,"id":7591,"mutability":"constant","name":"EIP712_VERSION","nameLocation":"1569:14:21","nodeType":"VariableDeclaration","scope":8383,"src":"1545:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7589,"name":"string","nodeType":"ElementaryTypeName","src":"1545:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"31","id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1586:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"},"visibility":"private"},{"errorSelector":"a4420a95","id":7593,"name":"Soulbound","nameLocation":"1633:9:21","nodeType":"ErrorDefinition","parameters":{"id":7592,"nodeType":"ParameterList","parameters":[],"src":"1642:2:21"},"src":"1627:18:21"},{"canonicalName":"SubscriptionNFT.DiscountPayload","id":7612,"members":[{"constant":false,"id":7595,"mutability":"mutable","name":"sessionId","nameLocation":"1754:9:21","nodeType":"VariableDeclaration","scope":7612,"src":"1746:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1746:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7597,"mutability":"mutable","name":"wallet","nameLocation":"1831:6:21","nodeType":"VariableDeclaration","scope":7612,"src":"1823:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7596,"name":"address","nodeType":"ElementaryTypeName","src":"1823:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7599,"mutability":"mutable","name":"planId","nameLocation":"1884:6:21","nodeType":"VariableDeclaration","scope":7612,"src":"1878:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7598,"name":"uint8","nodeType":"ElementaryTypeName","src":"1878:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7601,"mutability":"mutable","name":"discountBps","nameLocation":"1939:11:21","nodeType":"VariableDeclaration","scope":7612,"src":"1932:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7600,"name":"uint16","nodeType":"ElementaryTypeName","src":"1932:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7603,"mutability":"mutable","name":"nonce","nameLocation":"1984:5:21","nodeType":"VariableDeclaration","scope":7612,"src":"1976:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7602,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1976:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7605,"mutability":"mutable","name":"deadline","nameLocation":"2031:8:21","nodeType":"VariableDeclaration","scope":7612,"src":"2023:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7607,"mutability":"mutable","name":"chainId","nameLocation":"2084:7:21","nodeType":"VariableDeclaration","scope":7612,"src":"2076:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7606,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7609,"mutability":"mutable","name":"contractAddr","nameLocation":"2137:12:21","nodeType":"VariableDeclaration","scope":7612,"src":"2129:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7608,"name":"address","nodeType":"ElementaryTypeName","src":"2129:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7611,"mutability":"mutable","name":"variant","nameLocation":"2184:7:21","nodeType":"VariableDeclaration","scope":7612,"src":"2178:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7610,"name":"uint8","nodeType":"ElementaryTypeName","src":"2178:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"DiscountPayload","nameLocation":"1719:15:21","nodeType":"StructDefinition","scope":8383,"src":"1712:504:21","visibility":"public"},{"constant":true,"id":7617,"mutability":"constant","name":"DISCOUNT_TYPEHASH","nameLocation":"2249:17:21","nodeType":"VariableDeclaration","scope":8383,"src":"2224:237:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2224:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"446973636f756e745061796c6f616428627974657333322073657373696f6e49642c616464726573732077616c6c65742c75696e743820706c616e49642c75696e74313620646973636f756e744270732c62797465733332206e6f6e63652c75696e7432353620646561646c696e652c75696e7432353620636861696e49642c6164647265737320636f6e7472616374416464722c75696e74382076617269616e7429","id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2289:165:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bd895b228a83561329234c8900605abe5b5f2ac79331cc779a522952146d9c1","typeString":"literal_string \"DiscountPayload(bytes32 sessionId,address wallet,uint8 planId,uint16 discountBps,bytes32 nonce,uint256 deadline,uint256 chainId,address contractAddr,uint8 variant)\""},"value":"DiscountPayload(bytes32 sessionId,address wallet,uint8 planId,uint16 discountBps,bytes32 nonce,uint256 deadline,uint256 chainId,address contractAddr,uint8 variant)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4bd895b228a83561329234c8900605abe5b5f2ac79331cc779a522952146d9c1","typeString":"literal_string \"DiscountPayload(bytes32 sessionId,address wallet,uint8 planId,uint16 discountBps,bytes32 nonce,uint256 deadline,uint256 chainId,address contractAddr,uint8 variant)\""}],"id":7614,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2269:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2269:192:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"functionSelector":"322b1cc5","id":7621,"mutability":"mutable","name":"priceWei","nameLocation":"2900:8:21","nodeType":"VariableDeclaration","scope":8383,"src":"2867:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"},"typeName":{"id":7620,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7618,"name":"uint8","nodeType":"ElementaryTypeName","src":"2875:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Mapping","src":"2867:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2884:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"44340325","id":7625,"mutability":"mutable","name":"durationSec","nameLocation":"2976:11:21","nodeType":"VariableDeclaration","scope":8383,"src":"2943:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"},"typeName":{"id":7624,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7622,"name":"uint8","nodeType":"ElementaryTypeName","src":"2951:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Mapping","src":"2943:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":7628,"mutability":"mutable","name":"_nextTokenId","nameLocation":"3058:12:21","nodeType":"VariableDeclaration","scope":8383,"src":"3042:32:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3042:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3073:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":7632,"mutability":"mutable","name":"_tokenIdOf","nameLocation":"3117:10:21","nodeType":"VariableDeclaration","scope":8383,"src":"3081:46:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7631,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7629,"name":"address","nodeType":"ElementaryTypeName","src":"3089:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3081:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"17c95709","id":7636,"mutability":"mutable","name":"expiresAt","nameLocation":"3191:9:21","nodeType":"VariableDeclaration","scope":8383,"src":"3156:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7635,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3164:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3156:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"a4cf9cc1","id":7640,"mutability":"mutable","name":"variantOf","nameLocation":"3265:9:21","nodeType":"VariableDeclaration","scope":8383,"src":"3229:45:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"typeName":{"id":7639,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7637,"name":"uint256","nodeType":"ElementaryTypeName","src":"3237:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3229:25:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7638,"name":"uint8","nodeType":"ElementaryTypeName","src":"3248:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":7642,"mutability":"mutable","name":"treasury","nameLocation":"3348:8:21","nodeType":"VariableDeclaration","scope":8383,"src":"3333:23:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7641,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"238ac933","id":7644,"mutability":"mutable","name":"signer","nameLocation":"3418:6:21","nodeType":"VariableDeclaration","scope":8383,"src":"3403:21:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7643,"name":"address","nodeType":"ElementaryTypeName","src":"3403:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":7646,"mutability":"mutable","name":"baseHttpURI","nameLocation":"3485:11:21","nodeType":"VariableDeclaration","scope":8383,"src":"3469:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7645,"name":"string","nodeType":"ElementaryTypeName","src":"3469:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"0fad0f51","id":7649,"mutability":"mutable","name":"soulbound","nameLocation":"3574:9:21","nodeType":"VariableDeclaration","scope":8383,"src":"3562:28:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7647,"name":"bool","nodeType":"ElementaryTypeName","src":"3562:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":{"hexValue":"74727565","id":7648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3586:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"visibility":"public"},{"constant":false,"functionSelector":"61a4422b","id":7653,"mutability":"mutable","name":"nonceUsed","nameLocation":"3681:9:21","nodeType":"VariableDeclaration","scope":8383,"src":"3649:41:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":7652,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3657:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3649:24:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7651,"name":"bool","nodeType":"ElementaryTypeName","src":"3668:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"506b11fd56d29ee1bf2fb0630701f77afa8cb127509b1421d090f00b3487ffc5","id":7673,"name":"Subscribed","nameLocation":"4087:10:21","nodeType":"EventDefinition","parameters":{"id":7672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7655,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4124:4:21","nodeType":"VariableDeclaration","scope":7673,"src":"4108:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7654,"name":"address","nodeType":"ElementaryTypeName","src":"4108:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7657,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4155:7:21","nodeType":"VariableDeclaration","scope":7673,"src":"4139:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7656,"name":"uint256","nodeType":"ElementaryTypeName","src":"4139:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7659,"indexed":false,"mutability":"mutable","name":"planId","nameLocation":"4181:6:21","nodeType":"VariableDeclaration","scope":7673,"src":"4173:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7658,"name":"uint8","nodeType":"ElementaryTypeName","src":"4173:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7661,"indexed":false,"mutability":"mutable","name":"priceWei","nameLocation":"4206:8:21","nodeType":"VariableDeclaration","scope":7673,"src":"4198:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7660,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7663,"indexed":false,"mutability":"mutable","name":"discountBps","nameLocation":"4233:11:21","nodeType":"VariableDeclaration","scope":7673,"src":"4225:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7662,"name":"uint16","nodeType":"ElementaryTypeName","src":"4225:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7665,"indexed":false,"mutability":"mutable","name":"netPrice","nameLocation":"4263:8:21","nodeType":"VariableDeclaration","scope":7673,"src":"4255:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7667,"indexed":false,"mutability":"mutable","name":"expiresAt","nameLocation":"4290:9:21","nodeType":"VariableDeclaration","scope":7673,"src":"4282:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7666,"name":"uint256","nodeType":"ElementaryTypeName","src":"4282:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7669,"indexed":false,"mutability":"mutable","name":"variant","nameLocation":"4318:7:21","nodeType":"VariableDeclaration","scope":7673,"src":"4310:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7668,"name":"uint8","nodeType":"ElementaryTypeName","src":"4310:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7671,"indexed":false,"mutability":"mutable","name":"sessionId","nameLocation":"4344:9:21","nodeType":"VariableDeclaration","scope":7673,"src":"4336:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4097:263:21"},"src":"4081:280:21"},{"anonymous":false,"eventSelector":"40f4d86e270c4ffc31dae8743e42da44a3a1ffd3759c7eb81ec77b8e0205c844","id":7691,"name":"Renewed","nameLocation":"4375:7:21","nodeType":"EventDefinition","parameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7675,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4409:4:21","nodeType":"VariableDeclaration","scope":7691,"src":"4393:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7674,"name":"address","nodeType":"ElementaryTypeName","src":"4393:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7677,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4440:7:21","nodeType":"VariableDeclaration","scope":7691,"src":"4424:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7676,"name":"uint256","nodeType":"ElementaryTypeName","src":"4424:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7679,"indexed":false,"mutability":"mutable","name":"planId","nameLocation":"4466:6:21","nodeType":"VariableDeclaration","scope":7691,"src":"4458:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7678,"name":"uint8","nodeType":"ElementaryTypeName","src":"4458:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7681,"indexed":false,"mutability":"mutable","name":"priceWei","nameLocation":"4491:8:21","nodeType":"VariableDeclaration","scope":7691,"src":"4483:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7680,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7683,"indexed":false,"mutability":"mutable","name":"discountBps","nameLocation":"4518:11:21","nodeType":"VariableDeclaration","scope":7691,"src":"4510:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7682,"name":"uint16","nodeType":"ElementaryTypeName","src":"4510:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7685,"indexed":false,"mutability":"mutable","name":"netPrice","nameLocation":"4548:8:21","nodeType":"VariableDeclaration","scope":7691,"src":"4540:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7684,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7687,"indexed":false,"mutability":"mutable","name":"expiresAt","nameLocation":"4575:9:21","nodeType":"VariableDeclaration","scope":7691,"src":"4567:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7689,"indexed":false,"mutability":"mutable","name":"sessionId","nameLocation":"4603:9:21","nodeType":"VariableDeclaration","scope":7691,"src":"4595:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4595:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4382:237:21"},"src":"4369:251:21"},{"body":{"id":7769,"nodeType":"Block","src":"5285:497:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7714,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"5304:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5325:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5317:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7715,"name":"address","nodeType":"ElementaryTypeName","src":"5317:7:21","typeDescriptions":{}}},"id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5317:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5304:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74726561737572793d30","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5329:12:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0739e6d335ee4fc500c102fecba0ec195353fac6565fc8e9a2e0dc90fdebfb61","typeString":"literal_string \"treasury=0\""},"value":"treasury=0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0739e6d335ee4fc500c102fecba0ec195353fac6565fc8e9a2e0dc90fdebfb61","typeString":"literal_string \"treasury=0\""}],"id":7713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5296:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5296:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7722,"nodeType":"ExpressionStatement","src":"5296:46:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"5361:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5382:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5374:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7725,"name":"address","nodeType":"ElementaryTypeName","src":"5374:7:21","typeDescriptions":{}}},"id":7728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5374:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5361:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7369676e65723d30","id":7730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5386:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8de14dce10192bbf4dd595133065fcf09028400a61818700d03f3265cfff0a8a","typeString":"literal_string \"signer=0\""},"value":"signer=0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8de14dce10192bbf4dd595133065fcf09028400a61818700d03f3265cfff0a8a","typeString":"literal_string \"signer=0\""}],"id":7723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5353:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7732,"nodeType":"ExpressionStatement","src":"5353:44:21"},{"expression":{"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7733,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"5408:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7734,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"5422:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5408:23:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7736,"nodeType":"ExpressionStatement","src":"5408:23:21"},{"expression":{"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7737,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"5442:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7738,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"5456:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5442:21:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7740,"nodeType":"ExpressionStatement","src":"5442:21:21"},{"expression":{"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7741,"name":"baseHttpURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"5474:11:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7742,"name":"_baseHttpURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7699,"src":"5488:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5474:26:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7744,"nodeType":"ExpressionStatement","src":"5474:26:21"},{"expression":{"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7745,"name":"durationSec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"5546:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7747,"indexExpression":{"id":7746,"name":"PLAN_MONTHLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"5558:12:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5546:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3330","id":7748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5574:7:21","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"5546:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7750,"nodeType":"ExpressionStatement","src":"5546:35:21"},{"expression":{"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7751,"name":"durationSec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"5592:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7753,"indexExpression":{"id":7752,"name":"PLAN_YEARLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"5604:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5592:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"333635","id":7754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:8:21","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_31536000_by_1","typeString":"int_const 31536000"},"value":"365"},"src":"5592:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7756,"nodeType":"ExpressionStatement","src":"5592:36:21"},{"expression":{"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7757,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"5711:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7759,"indexExpression":{"id":7758,"name":"PLAN_MONTHLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"5720:12:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5711:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5711:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7762,"nodeType":"ExpressionStatement","src":"5711:26:21"},{"expression":{"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7763,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"5748:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7765,"indexExpression":{"id":7764,"name":"PLAN_YEARLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"5757:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5773:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5748:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7768,"nodeType":"ExpressionStatement","src":"5748:26:21"}]},"id":7770,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f746361726520537562736372697074696f6e","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5171:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_254a6a90a76ff0af2c0d11ef8fc3379aae5290142501fca67c831437e32c2ee8","typeString":"literal_string \"Dotcare Subscription\""},"value":"Dotcare Subscription"},{"hexValue":"4443535542","id":7703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5195:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_391b5dcfdd7f4663f0fd8b49ca0691af62f0e2780bfd624c9bd69eeeb4dea2bc","typeString":"literal_string \"DCSUB\""},"value":"DCSUB"}],"id":7704,"kind":"baseConstructorSpecifier","modifierName":{"id":7701,"name":"ERC721","nameLocations":["5164:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":1266,"src":"5164:6:21"},"nodeType":"ModifierInvocation","src":"5164:39:21"},{"arguments":[{"id":7706,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"5221:12:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7707,"kind":"baseConstructorSpecifier","modifierName":{"id":7705,"name":"Ownable","nameLocations":["5213:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"5213:7:21"},"nodeType":"ModifierInvocation","src":"5213:21:21"},{"arguments":[{"id":7709,"name":"EIP712_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"5251:11:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7710,"name":"EIP712_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"5264:14:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7711,"kind":"baseConstructorSpecifier","modifierName":{"id":7708,"name":"EIP712","nameLocations":["5244:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":3906,"src":"5244:6:21"},"nodeType":"ModifierInvocation","src":"5244:35:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7693,"mutability":"mutable","name":"initialOwner","nameLocation":"5044:12:21","nodeType":"VariableDeclaration","scope":7770,"src":"5036:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7692,"name":"address","nodeType":"ElementaryTypeName","src":"5036:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7695,"mutability":"mutable","name":"_treasury","nameLocation":"5075:9:21","nodeType":"VariableDeclaration","scope":7770,"src":"5067:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7694,"name":"address","nodeType":"ElementaryTypeName","src":"5067:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7697,"mutability":"mutable","name":"_signer","nameLocation":"5103:7:21","nodeType":"VariableDeclaration","scope":7770,"src":"5095:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7696,"name":"address","nodeType":"ElementaryTypeName","src":"5095:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7699,"mutability":"mutable","name":"_baseHttpURI","nameLocation":"5135:12:21","nodeType":"VariableDeclaration","scope":7770,"src":"5121:26:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7698,"name":"string","nodeType":"ElementaryTypeName","src":"5121:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5025:129:21"},"returnParameters":{"id":7712,"nodeType":"ParameterList","parameters":[],"src":"5285:0:21"},"scope":8383,"src":"5014:768:21","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7781,"nodeType":"Block","src":"6246:59:21","statements":[{"expression":{"baseExpression":{"id":7777,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"6264:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7779,"indexExpression":{"id":7778,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7772,"src":"6275:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6264:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7776,"id":7780,"nodeType":"Return","src":"6257:23:21"}]},"functionSelector":"773c02d4","id":7782,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdOf","nameLocation":"6192:9:21","nodeType":"FunctionDefinition","parameters":{"id":7773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7772,"mutability":"mutable","name":"user","nameLocation":"6210:4:21","nodeType":"VariableDeclaration","scope":7782,"src":"6202:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7771,"name":"address","nodeType":"ElementaryTypeName","src":"6202:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6201:14:21"},"returnParameters":{"id":7776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7782,"src":"6237:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7774,"name":"uint256","nodeType":"ElementaryTypeName","src":"6237:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6236:9:21"},"scope":8383,"src":"6183:122:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7808,"nodeType":"Block","src":"6372:137:21","statements":[{"assignments":[7790],"declarations":[{"constant":false,"id":7790,"mutability":"mutable","name":"tid","nameLocation":"6391:3:21","nodeType":"VariableDeclaration","scope":7808,"src":"6383:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7789,"name":"uint256","nodeType":"ElementaryTypeName","src":"6383:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7794,"initialValue":{"baseExpression":{"id":7791,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"6397:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7793,"indexExpression":{"id":7792,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"6408:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6397:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6383:30:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7795,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"6428:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6435:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6428:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7800,"nodeType":"IfStatement","src":"6424:26:21","trueBody":{"expression":{"hexValue":"66616c7365","id":7798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6445:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7788,"id":7799,"nodeType":"Return","src":"6438:12:21"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7801,"name":"expiresAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"6468:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7803,"indexExpression":{"id":7802,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"6478:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6468:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7804,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6486:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6492:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"6486:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6468:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7788,"id":7807,"nodeType":"Return","src":"6461:40:21"}]},"functionSelector":"9f8a13d7","id":7809,"implemented":true,"kind":"function","modifiers":[],"name":"isActive","nameLocation":"6322:8:21","nodeType":"FunctionDefinition","parameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"user","nameLocation":"6339:4:21","nodeType":"VariableDeclaration","scope":7809,"src":"6331:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7783,"name":"address","nodeType":"ElementaryTypeName","src":"6331:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6330:14:21"},"returnParameters":{"id":7788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7809,"src":"6366:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7786,"name":"bool","nodeType":"ElementaryTypeName","src":"6366:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6365:6:21"},"scope":8383,"src":"6313:196:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7827,"nodeType":"Block","src":"6594:83:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":7820,"name":"baseHttpURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"6636:11:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"6649:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6657:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"6649:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7818,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6619:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6623:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"6619:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6612:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7816,"name":"string","nodeType":"ElementaryTypeName","src":"6612:6:21","typeDescriptions":{}}},"id":7825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7815,"id":7826,"nodeType":"Return","src":"6605:64:21"}]},"id":7828,"implemented":true,"kind":"function","modifiers":[],"name":"_tokenURIFor","nameLocation":"6526:12:21","nodeType":"FunctionDefinition","parameters":{"id":7812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7811,"mutability":"mutable","name":"tokenId","nameLocation":"6547:7:21","nodeType":"VariableDeclaration","scope":7828,"src":"6539:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7810,"name":"uint256","nodeType":"ElementaryTypeName","src":"6539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6538:17:21"},"returnParameters":{"id":7815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7828,"src":"6579:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7813,"name":"string","nodeType":"ElementaryTypeName","src":"6579:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6578:15:21"},"scope":8383,"src":"6517:160:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[505],"body":{"id":7852,"nodeType":"Block","src":"6765:133:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7838,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"6793:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7837,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6784:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6805:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7840,"name":"address","nodeType":"ElementaryTypeName","src":"6805:7:21","typeDescriptions":{}}},"id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6805:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6784:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6817:33:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""},"value":"URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""}],"id":7836,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6776:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6776:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7847,"nodeType":"ExpressionStatement","src":"6776:75:21"},{"expression":{"arguments":[{"id":7849,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"6882:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7848,"name":"_tokenURIFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7828,"src":"6869:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6869:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7835,"id":7851,"nodeType":"Return","src":"6862:28:21"}]},"functionSelector":"c87b56dd","id":7853,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"6694:8:21","nodeType":"FunctionDefinition","overrides":{"id":7832,"nodeType":"OverrideSpecifier","overrides":[],"src":"6732:8:21"},"parameters":{"id":7831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"tokenId","nameLocation":"6711:7:21","nodeType":"VariableDeclaration","scope":7853,"src":"6703:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7829,"name":"uint256","nodeType":"ElementaryTypeName","src":"6703:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6702:17:21"},"returnParameters":{"id":7835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7853,"src":"6750:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7833,"name":"string","nodeType":"ElementaryTypeName","src":"6750:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6749:15:21"},"scope":8383,"src":"6685:213:21","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7874,"nodeType":"Block","src":"7363:99:21","statements":[{"expression":{"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7862,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"7374:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7864,"indexExpression":{"id":7863,"name":"PLAN_MONTHLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"7383:12:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7374:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7865,"name":"monthlyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"7399:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7374:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7867,"nodeType":"ExpressionStatement","src":"7374:35:21"},{"expression":{"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7868,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"7420:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7870,"indexExpression":{"id":7869,"name":"PLAN_YEARLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"7429:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7420:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7871,"name":"yearlyWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"7445:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7420:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7873,"nodeType":"ExpressionStatement","src":"7420:34:21"}]},"functionSelector":"05fefda7","id":7875,"implemented":true,"kind":"function","modifiers":[{"id":7860,"kind":"modifierInvocation","modifierName":{"id":7859,"name":"onlyOwner","nameLocations":["7353:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7353:9:21"},"nodeType":"ModifierInvocation","src":"7353:9:21"}],"name":"setPrices","nameLocation":"7295:9:21","nodeType":"FunctionDefinition","parameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7855,"mutability":"mutable","name":"monthlyWei","nameLocation":"7313:10:21","nodeType":"VariableDeclaration","scope":7875,"src":"7305:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7854,"name":"uint256","nodeType":"ElementaryTypeName","src":"7305:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7857,"mutability":"mutable","name":"yearlyWei","nameLocation":"7333:9:21","nodeType":"VariableDeclaration","scope":7875,"src":"7325:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7856,"name":"uint256","nodeType":"ElementaryTypeName","src":"7325:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7304:39:21"},"returnParameters":{"id":7861,"nodeType":"ParameterList","parameters":[],"src":"7363:0:21"},"scope":8383,"src":"7286:176:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7907,"nodeType":"Block","src":"7550:165:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7885,"name":"monthlySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"7569:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7569:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7888,"name":"yearlySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"7587:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7599:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7587:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7569:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6475723d30","id":7892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7602:7:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_34ccaa46980c451a56702dfcfa98ea476750860243622cf7e21822291bc027f4","typeString":"literal_string \"dur=0\""},"value":"dur=0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34ccaa46980c451a56702dfcfa98ea476750860243622cf7e21822291bc027f4","typeString":"literal_string \"dur=0\""}],"id":7884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7561:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7561:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7894,"nodeType":"ExpressionStatement","src":"7561:49:21"},{"expression":{"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7895,"name":"durationSec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"7621:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7897,"indexExpression":{"id":7896,"name":"PLAN_MONTHLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"7633:12:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7621:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7898,"name":"monthlySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"7649:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7621:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7900,"nodeType":"ExpressionStatement","src":"7621:38:21"},{"expression":{"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7901,"name":"durationSec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"7670:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":7903,"indexExpression":{"id":7902,"name":"PLAN_YEARLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"7682:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7670:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7904,"name":"yearlySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"7698:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7670:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7906,"nodeType":"ExpressionStatement","src":"7670:37:21"}]},"functionSelector":"a40b3998","id":7908,"implemented":true,"kind":"function","modifiers":[{"id":7882,"kind":"modifierInvocation","modifierName":{"id":7881,"name":"onlyOwner","nameLocations":["7540:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7540:9:21"},"nodeType":"ModifierInvocation","src":"7540:9:21"}],"name":"setDurations","nameLocation":"7479:12:21","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7877,"mutability":"mutable","name":"monthlySec","nameLocation":"7500:10:21","nodeType":"VariableDeclaration","scope":7908,"src":"7492:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7876,"name":"uint256","nodeType":"ElementaryTypeName","src":"7492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7879,"mutability":"mutable","name":"yearlySec","nameLocation":"7520:9:21","nodeType":"VariableDeclaration","scope":7908,"src":"7512:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint256","nodeType":"ElementaryTypeName","src":"7512:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:39:21"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[],"src":"7550:0:21"},"scope":8383,"src":"7470:245:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7929,"nodeType":"Block","src":"7778:88:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7916,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"7797:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7808:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7917,"name":"address","nodeType":"ElementaryTypeName","src":"7808:7:21","typeDescriptions":{}}},"id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7808:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7797:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7369676e65723d30","id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7820:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8de14dce10192bbf4dd595133065fcf09028400a61818700d03f3265cfff0a8a","typeString":"literal_string \"signer=0\""},"value":"signer=0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8de14dce10192bbf4dd595133065fcf09028400a61818700d03f3265cfff0a8a","typeString":"literal_string \"signer=0\""}],"id":7915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7789:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7789:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7924,"nodeType":"ExpressionStatement","src":"7789:42:21"},{"expression":{"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7925,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"7842:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7926,"name":"_signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"7851:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7842:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7928,"nodeType":"ExpressionStatement","src":"7842:16:21"}]},"functionSelector":"6c19e783","id":7930,"implemented":true,"kind":"function","modifiers":[{"id":7913,"kind":"modifierInvocation","modifierName":{"id":7912,"name":"onlyOwner","nameLocations":["7768:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7768:9:21"},"nodeType":"ModifierInvocation","src":"7768:9:21"}],"name":"setSigner","nameLocation":"7732:9:21","nodeType":"FunctionDefinition","parameters":{"id":7911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7910,"mutability":"mutable","name":"_signer","nameLocation":"7750:7:21","nodeType":"VariableDeclaration","scope":7930,"src":"7742:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7909,"name":"address","nodeType":"ElementaryTypeName","src":"7742:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7741:17:21"},"returnParameters":{"id":7914,"nodeType":"ParameterList","parameters":[],"src":"7778:0:21"},"scope":8383,"src":"7723:143:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7951,"nodeType":"Block","src":"7933:96:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7938,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"7952:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7973:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7965:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7939,"name":"address","nodeType":"ElementaryTypeName","src":"7965:7:21","typeDescriptions":{}}},"id":7942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7965:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7952:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74726561737572793d30","id":7944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7977:12:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0739e6d335ee4fc500c102fecba0ec195353fac6565fc8e9a2e0dc90fdebfb61","typeString":"literal_string \"treasury=0\""},"value":"treasury=0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0739e6d335ee4fc500c102fecba0ec195353fac6565fc8e9a2e0dc90fdebfb61","typeString":"literal_string \"treasury=0\""}],"id":7937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7944:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7944:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7946,"nodeType":"ExpressionStatement","src":"7944:46:21"},{"expression":{"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7947,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"8001:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7948,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"8012:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8001:20:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7950,"nodeType":"ExpressionStatement","src":"8001:20:21"}]},"functionSelector":"f0f44260","id":7952,"implemented":true,"kind":"function","modifiers":[{"id":7935,"kind":"modifierInvocation","modifierName":{"id":7934,"name":"onlyOwner","nameLocations":["7923:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7923:9:21"},"nodeType":"ModifierInvocation","src":"7923:9:21"}],"name":"setTreasury","nameLocation":"7883:11:21","nodeType":"FunctionDefinition","parameters":{"id":7933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"_treasury","nameLocation":"7903:9:21","nodeType":"VariableDeclaration","scope":7952,"src":"7895:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7931,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7894:19:21"},"returnParameters":{"id":7936,"nodeType":"ParameterList","parameters":[],"src":"7933:0:21"},"scope":8383,"src":"7874:155:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7963,"nodeType":"Block","src":"8102:37:21","statements":[{"expression":{"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7959,"name":"baseHttpURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7646,"src":"8113:11:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7960,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"8127:4:21","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"8113:18:21","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7962,"nodeType":"ExpressionStatement","src":"8113:18:21"}]},"functionSelector":"750766ac","id":7964,"implemented":true,"kind":"function","modifiers":[{"id":7957,"kind":"modifierInvocation","modifierName":{"id":7956,"name":"onlyOwner","nameLocations":["8092:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8092:9:21"},"nodeType":"ModifierInvocation","src":"8092:9:21"}],"name":"setBaseHttpURI","nameLocation":"8046:14:21","nodeType":"FunctionDefinition","parameters":{"id":7955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"_uri","nameLocation":"8077:4:21","nodeType":"VariableDeclaration","scope":7964,"src":"8061:20:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7953,"name":"string","nodeType":"ElementaryTypeName","src":"8061:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8060:22:21"},"returnParameters":{"id":7958,"nodeType":"ParameterList","parameters":[],"src":"8102:0:21"},"scope":8383,"src":"8037:102:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7975,"nodeType":"Block","src":"8205:41:21","statements":[{"expression":{"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7971,"name":"soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"8216:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7972,"name":"_soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"8228:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8216:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7974,"nodeType":"ExpressionStatement","src":"8216:22:21"}]},"functionSelector":"df30e54b","id":7976,"implemented":true,"kind":"function","modifiers":[{"id":7969,"kind":"modifierInvocation","modifierName":{"id":7968,"name":"onlyOwner","nameLocations":["8195:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8195:9:21"},"nodeType":"ModifierInvocation","src":"8195:9:21"}],"name":"setSoulbound","nameLocation":"8156:12:21","nodeType":"FunctionDefinition","parameters":{"id":7967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7966,"mutability":"mutable","name":"_soulbound","nameLocation":"8174:10:21","nodeType":"VariableDeclaration","scope":7976,"src":"8169:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7965,"name":"bool","nodeType":"ElementaryTypeName","src":"8169:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8168:17:21"},"returnParameters":{"id":7970,"nodeType":"ParameterList","parameters":[],"src":"8205:0:21"},"scope":8383,"src":"8147:99:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8002,"nodeType":"Block","src":"8293:130:21","statements":[{"assignments":[7982,null],"declarations":[{"constant":false,"id":7982,"mutability":"mutable","name":"ok","nameLocation":"8310:2:21","nodeType":"VariableDeclaration","scope":8002,"src":"8305:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7981,"name":"bool","nodeType":"ElementaryTypeName","src":"8305:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":7996,"initialValue":{"arguments":[{"hexValue":"","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8371:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":7985,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"8326:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8318:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7983,"name":"address","nodeType":"ElementaryTypeName","src":"8318:8:21","stateMutability":"payable","typeDescriptions":{}}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8318:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8336:4:21","memberName":"call","nodeType":"MemberAccess","src":"8318:22:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":7990,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8356:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionNFT_$8383","typeString":"contract SubscriptionNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionNFT_$8383","typeString":"contract SubscriptionNFT"}],"id":7989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8348:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7988,"name":"address","nodeType":"ElementaryTypeName","src":"8348:7:21","typeDescriptions":{}}},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8348:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8362:7:21","memberName":"balance","nodeType":"MemberAccess","src":"8348:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8318:52:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8318:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8304:70:21"},{"expression":{"arguments":[{"id":7998,"name":"ok","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"8393:2:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7769746864726177206661696c6564","id":7999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8397:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","typeString":"literal_string \"withdraw failed\""},"value":"withdraw failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f788322002b8424ed68b8abd50be064ad13f3c130a8b07f2a88c6b5024ee35fe","typeString":"literal_string \"withdraw failed\""}],"id":7997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8385:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8385:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8001,"nodeType":"ExpressionStatement","src":"8385:30:21"}]},"functionSelector":"3ccfd60b","id":8003,"implemented":true,"kind":"function","modifiers":[{"id":7979,"kind":"modifierInvocation","modifierName":{"id":7978,"name":"onlyOwner","nameLocations":["8283:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8283:9:21"},"nodeType":"ModifierInvocation","src":"8283:9:21"}],"name":"withdraw","nameLocation":"8263:8:21","nodeType":"FunctionDefinition","parameters":{"id":7977,"nodeType":"ParameterList","parameters":[],"src":"8271:2:21"},"returnParameters":{"id":7980,"nodeType":"ParameterList","parameters":[],"src":"8293:0:21"},"scope":8383,"src":"8254:169:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8293,"nodeType":"Block","src":"8985:2901:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8014,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"9004:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8015,"name":"PLAN_MONTHLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"9014:12:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9004:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8017,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"9030:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8018,"name":"PLAN_YEARLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"9040:11:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9030:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9004:47:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"706c616e20696e76616c6964","id":8021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9053:14:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4007311645aa37eea7f3fad791be9f08b42c12499f0e8f560ce57fd98c400225","typeString":"literal_string \"plan invalid\""},"value":"plan invalid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4007311645aa37eea7f3fad791be9f08b42c12499f0e8f560ce57fd98c400225","typeString":"literal_string \"plan invalid\""}],"id":8013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8023,"nodeType":"ExpressionStatement","src":"8996:72:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8025,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9087:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9089:6:21","memberName":"planId","nodeType":"MemberAccess","referencedDeclaration":7599,"src":"9087:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8027,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"9099:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9087:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796c6f61642e706c616e206d69736d61746368","id":8029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9107:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d45ed05addc9847598336d61ebf935fb9c088b6c5a1ed5f766f08cf473236e82","typeString":"literal_string \"payload.plan mismatch\""},"value":"payload.plan mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d45ed05addc9847598336d61ebf935fb9c088b6c5a1ed5f766f08cf473236e82","typeString":"literal_string \"payload.plan mismatch\""}],"id":8024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9079:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9079:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8031,"nodeType":"ExpressionStatement","src":"9079:52:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8033,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9150:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9156:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"9150:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8035,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9169:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9171:8:21","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":7605,"src":"9169:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9150:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"65787069726564","id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9181:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93","typeString":"literal_string \"expired\""},"value":"expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64ca1ae50619f7f4ab23f4c22c6b85b70cfc49c072d731be4f91487f95764c93","typeString":"literal_string \"expired\""}],"id":8032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9142:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9142:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8040,"nodeType":"ExpressionStatement","src":"9142:49:21"},{"expression":{"arguments":[{"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9210:19:21","subExpression":{"baseExpression":{"id":8042,"name":"nonceUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"9211:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8045,"indexExpression":{"expression":{"id":8043,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9221:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9223:5:21","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":7603,"src":"9221:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9211:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6e6f6e63652075736564","id":8047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9231:12:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91","typeString":"literal_string \"nonce used\""},"value":"nonce used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93401b78a9a15fdd9637202256dc22545d2892602bcb5ead8f30e328fe8cde91","typeString":"literal_string \"nonce used\""}],"id":8041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9202:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9202:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8049,"nodeType":"ExpressionStatement","src":"9202:42:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8051,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9263:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9265:6:21","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":7597,"src":"9263:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8053,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9275:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9279:6:21","memberName":"sender","nodeType":"MemberAccess","src":"9275:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9263:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77616c6c6574206d69736d61746368","id":8056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9287:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_76d0de9cb979d9c3c2d54d567cfe1c9d29da7e4ae1555c7c5ed820a5c829181b","typeString":"literal_string \"wallet mismatch\""},"value":"wallet mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76d0de9cb979d9c3c2d54d567cfe1c9d29da7e4ae1555c7c5ed820a5c829181b","typeString":"literal_string \"wallet mismatch\""}],"id":8050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9255:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:50:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8058,"nodeType":"ExpressionStatement","src":"9255:50:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8060,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9324:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9326:7:21","memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":7607,"src":"9324:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8062,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9337:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9343:7:21","memberName":"chainid","nodeType":"MemberAccess","src":"9337:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9324:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636861696e4964206d69736d61746368","id":8065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9352:18:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7918bc906799e0e3dd043fb3be89ad8c86ddaea9e55bf6a34d5e40d282ee64aa","typeString":"literal_string \"chainId mismatch\""},"value":"chainId mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7918bc906799e0e3dd043fb3be89ad8c86ddaea9e55bf6a34d5e40d282ee64aa","typeString":"literal_string \"chainId mismatch\""}],"id":8059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9316:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9316:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8067,"nodeType":"ExpressionStatement","src":"9316:55:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8069,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9390:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9392:12:21","memberName":"contractAddr","nodeType":"MemberAccess","referencedDeclaration":7609,"src":"9390:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":8073,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9416:4:21","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionNFT_$8383","typeString":"contract SubscriptionNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionNFT_$8383","typeString":"contract SubscriptionNFT"}],"id":8072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9408:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8071,"name":"address","nodeType":"ElementaryTypeName","src":"9408:7:21","typeDescriptions":{}}},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9408:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9390:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636f6e7472616374206d69736d61746368","id":8076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9423:19:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_24c8442f220fbb6da2a95049bbc8b41a129e33454c420c5a74f3ca9376d1de2d","typeString":"literal_string \"contract mismatch\""},"value":"contract mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24c8442f220fbb6da2a95049bbc8b41a129e33454c420c5a74f3ca9376d1de2d","typeString":"literal_string \"contract mismatch\""}],"id":8068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9382:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8078,"nodeType":"ExpressionStatement","src":"9382:61:21"},{"assignments":[8080],"declarations":[{"constant":false,"id":8080,"mutability":"mutable","name":"digest","nameLocation":"9504:6:21","nodeType":"VariableDeclaration","scope":8293,"src":"9496:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9496:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8107,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":8085,"name":"DISCOUNT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"9605:17:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8086,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9645:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9647:9:21","memberName":"sessionId","nodeType":"MemberAccess","referencedDeclaration":7595,"src":"9645:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8088,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9679:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9681:6:21","memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":7597,"src":"9679:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8090,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9710:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9712:6:21","memberName":"planId","nodeType":"MemberAccess","referencedDeclaration":7599,"src":"9710:8:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":8092,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9741:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9743:11:21","memberName":"discountBps","nodeType":"MemberAccess","referencedDeclaration":7601,"src":"9741:13:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":8094,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9777:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9779:5:21","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":7603,"src":"9777:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8096,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9807:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9809:8:21","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":7605,"src":"9807:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8098,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9840:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9842:7:21","memberName":"chainId","nodeType":"MemberAccess","referencedDeclaration":7607,"src":"9840:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8100,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9872:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9874:12:21","memberName":"contractAddr","nodeType":"MemberAccess","referencedDeclaration":7609,"src":"9872:14:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8102,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"9909:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9911:7:21","memberName":"variant","nodeType":"MemberAccess","referencedDeclaration":7611,"src":"9909:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":8083,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9572:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9576:6:21","memberName":"encode","nodeType":"MemberAccess","src":"9572:10:21","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9572:365:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8082,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9544:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9544:408:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8081,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"9513:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9513:450:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9496:467:21"},{"assignments":[8109],"declarations":[{"constant":false,"id":8109,"mutability":"mutable","name":"recovered","nameLocation":"9982:9:21","nodeType":"VariableDeclaration","scope":8293,"src":"9974:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8108,"name":"address","nodeType":"ElementaryTypeName","src":"9974:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8115,"initialValue":{"arguments":[{"id":8112,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"10008:6:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8113,"name":"discountSig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"10016:11:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":8110,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"9994:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3679_$","typeString":"type(library ECDSA)"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10000:7:21","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3435,"src":"9994:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":8114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9994:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9974:54:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8117,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"10047:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8118,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"10060:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10047:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"626164207369676e6174757265","id":8120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10068:15:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a65e943f52bbe7e5e89659b8d61a63d31787e549b9da0dc6e7127a1880ba09a","typeString":"literal_string \"bad signature\""},"value":"bad signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a65e943f52bbe7e5e89659b8d61a63d31787e549b9da0dc6e7127a1880ba09a","typeString":"literal_string \"bad signature\""}],"id":8116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10039:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10039:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8122,"nodeType":"ExpressionStatement","src":"10039:45:21"},{"expression":{"id":8128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8123,"name":"nonceUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7653,"src":"10097:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":8126,"indexExpression":{"expression":{"id":8124,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"10107:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10109:5:21","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":7603,"src":"10107:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10097:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10118:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10097:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8129,"nodeType":"ExpressionStatement","src":"10097:25:21"},{"assignments":[8131],"declarations":[{"constant":false,"id":8131,"mutability":"mutable","name":"basePrice","nameLocation":"10143:9:21","nodeType":"VariableDeclaration","scope":8293,"src":"10135:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8130,"name":"uint256","nodeType":"ElementaryTypeName","src":"10135:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8135,"initialValue":{"baseExpression":{"id":8132,"name":"priceWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"10155:8:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":8134,"indexExpression":{"id":8133,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"10164:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10155:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10135:36:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8137,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"10190:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10202:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10190:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"70726963653d30","id":8140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10205:9:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882","typeString":"literal_string \"price=0\""},"value":"price=0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d8b26c0a8604842caf846734bcf8aaf5fe1bb783fc906c283161f7bdee7b882","typeString":"literal_string \"price=0\""}],"id":8136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10182:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8142,"nodeType":"ExpressionStatement","src":"10182:33:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8144,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"10285:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10287:11:21","memberName":"discountBps","nodeType":"MemberAccess","referencedDeclaration":7601,"src":"10285:13:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":8146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10302:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10285:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6270733e3130303030","id":8148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10309:11:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_32fdeaef358e36cb29f9e670a8d6da7167b8f332932969b3df444e57e0d80246","typeString":"literal_string \"bps>10000\""},"value":"bps>10000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32fdeaef358e36cb29f9e670a8d6da7167b8f332932969b3df444e57e0d80246","typeString":"literal_string \"bps>10000\""}],"id":8143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10277:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8150,"nodeType":"ExpressionStatement","src":"10277:44:21"},{"assignments":[8152],"declarations":[{"constant":false,"id":8152,"mutability":"mutable","name":"netPrice","nameLocation":"10340:8:21","nodeType":"VariableDeclaration","scope":8293,"src":"10332:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8151,"name":"uint256","nodeType":"ElementaryTypeName","src":"10332:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8163,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8153,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"10351:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8154,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"10365:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8155,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"10377:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10379:11:21","memberName":"discountBps","nodeType":"MemberAccess","referencedDeclaration":7601,"src":"10377:13:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"10365:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10364:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":8159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10394:5:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10364:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10363:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10351:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10332:68:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10419:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10423:5:21","memberName":"value","nodeType":"MemberAccess","src":"10419:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8167,"name":"netPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"10432:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10419:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77726f6e67206d73672e76616c7565","id":8169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10442:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_adf7d0424bac77d8592fc4bc23e5ae7dd3b90c76ad91a284a0234075f15881b7","typeString":"literal_string \"wrong msg.value\""},"value":"wrong msg.value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adf7d0424bac77d8592fc4bc23e5ae7dd3b90c76ad91a284a0234075f15881b7","typeString":"literal_string \"wrong msg.value\""}],"id":8164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10411:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10411:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8171,"nodeType":"ExpressionStatement","src":"10411:49:21"},{"assignments":[8173],"declarations":[{"constant":false,"id":8173,"mutability":"mutable","name":"tid","nameLocation":"10481:3:21","nodeType":"VariableDeclaration","scope":8293,"src":"10473:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8172,"name":"uint256","nodeType":"ElementaryTypeName","src":"10473:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8178,"initialValue":{"baseExpression":{"id":8174,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"10487:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8177,"indexExpression":{"expression":{"id":8175,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10498:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10502:6:21","memberName":"sender","nodeType":"MemberAccess","src":"10498:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10487:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10473:36:21"},{"assignments":[8180],"declarations":[{"constant":false,"id":8180,"mutability":"mutable","name":"newExpiry","nameLocation":"10528:9:21","nodeType":"VariableDeclaration","scope":8293,"src":"10520:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8179,"name":"uint256","nodeType":"ElementaryTypeName","src":"10520:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8181,"nodeType":"VariableDeclarationStatement","src":"10520:17:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8182,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"10552:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10559:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10552:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8291,"nodeType":"Block","src":"11327:552:21","statements":[{"assignments":[8247],"declarations":[{"constant":false,"id":8247,"mutability":"mutable","name":"curr","nameLocation":"11408:4:21","nodeType":"VariableDeclaration","scope":8291,"src":"11400:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8246,"name":"uint256","nodeType":"ElementaryTypeName","src":"11400:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8251,"initialValue":{"baseExpression":{"id":8248,"name":"expiresAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"11415:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8250,"indexExpression":{"id":8249,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11425:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11415:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11400:29:21"},{"assignments":[8253],"declarations":[{"constant":false,"id":8253,"mutability":"mutable","name":"start","nameLocation":"11452:5:21","nodeType":"VariableDeclaration","scope":8291,"src":"11444:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11444:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8262,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8254,"name":"curr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"11460:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11467:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11473:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"11467:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11460:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":8259,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11492:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11498:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"11492:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11460:47:21","trueExpression":{"id":8258,"name":"curr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8247,"src":"11485:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11444:63:21"},{"expression":{"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8263,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"11522:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8264,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"11534:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":8265,"name":"durationSec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"11542:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":8267,"indexExpression":{"id":8266,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"11554:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11542:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11534:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11522:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8270,"nodeType":"ExpressionStatement","src":"11522:39:21"},{"expression":{"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8271,"name":"expiresAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"11576:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8273,"indexExpression":{"id":8272,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11586:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11576:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8274,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"11593:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11576:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8276,"nodeType":"ExpressionStatement","src":"11576:26:21"},{"eventCall":{"arguments":[{"expression":{"id":8278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11650:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11654:6:21","memberName":"sender","nodeType":"MemberAccess","src":"11650:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8280,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11679:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8281,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"11701:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":8282,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"11726:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8283,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"11754:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11756:11:21","memberName":"discountBps","nodeType":"MemberAccess","referencedDeclaration":7601,"src":"11754:13:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8285,"name":"netPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"11786:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8286,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"11813:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8287,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"11841:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11843:9:21","memberName":"sessionId","nodeType":"MemberAccess","referencedDeclaration":7595,"src":"11841:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8277,"name":"Renewed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"11624:7:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint16_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint8,uint256,uint16,uint256,uint256,bytes32)"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11624:243:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8290,"nodeType":"EmitStatement","src":"11619:248:21"}]},"id":8292,"nodeType":"IfStatement","src":"10548:1331:21","trueBody":{"id":8245,"nodeType":"Block","src":"10562:759:21","statements":[{"expression":{"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8185,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"10621:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10627:14:21","subExpression":{"id":8186,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"10627:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10621:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8189,"nodeType":"ExpressionStatement","src":"10621:20:21"},{"expression":{"arguments":[{"expression":{"id":8191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10666:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10670:6:21","memberName":"sender","nodeType":"MemberAccess","src":"10666:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8193,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"10678:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8190,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[944,974],"referencedDeclaration":944,"src":"10656:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10656:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8195,"nodeType":"ExpressionStatement","src":"10656:26:21"},{"expression":{"id":8201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8196,"name":"variantOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7640,"src":"10768:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint8_$","typeString":"mapping(uint256 => uint8)"}},"id":8198,"indexExpression":{"id":8197,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"10778:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10768:14:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8199,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"10785:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10787:7:21","memberName":"variant","nodeType":"MemberAccess","referencedDeclaration":7611,"src":"10785:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10768:26:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8202,"nodeType":"ExpressionStatement","src":"10768:26:21"},{"assignments":[8204],"declarations":[{"constant":false,"id":8204,"mutability":"mutable","name":"dur","nameLocation":"10854:3:21","nodeType":"VariableDeclaration","scope":8245,"src":"10846:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8203,"name":"uint256","nodeType":"ElementaryTypeName","src":"10846:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8208,"initialValue":{"baseExpression":{"id":8205,"name":"durationSec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"10860:11:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint8_$_t_uint256_$","typeString":"mapping(uint8 => uint256)"}},"id":8207,"indexExpression":{"id":8206,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"10872:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10860:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10846:33:21"},{"expression":{"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8209,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"10894:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8210,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10906:5:21","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10912:9:21","memberName":"timestamp","nodeType":"MemberAccess","src":"10906:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8212,"name":"dur","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8204,"src":"10924:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10906:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8215,"nodeType":"ExpressionStatement","src":"10894:33:21"},{"expression":{"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8216,"name":"expiresAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7636,"src":"10942:9:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8218,"indexExpression":{"id":8217,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"10952:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10942:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8219,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"10959:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10942:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8221,"nodeType":"ExpressionStatement","src":"10942:26:21"},{"expression":{"id":8227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8222,"name":"_tokenIdOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"10985:10:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8225,"indexExpression":{"expression":{"id":8223,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10996:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11000:6:21","memberName":"sender","nodeType":"MemberAccess","src":"10996:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10985:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8226,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11010:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10985:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8228,"nodeType":"ExpressionStatement","src":"10985:28:21"},{"eventCall":{"arguments":[{"expression":{"id":8230,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11064:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11068:6:21","memberName":"sender","nodeType":"MemberAccess","src":"11064:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8232,"name":"tid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8173,"src":"11093:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8233,"name":"planId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8005,"src":"11115:6:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":8234,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"11140:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8235,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"11168:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11170:11:21","memberName":"discountBps","nodeType":"MemberAccess","referencedDeclaration":7601,"src":"11168:13:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":8237,"name":"netPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8152,"src":"11200:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8238,"name":"newExpiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"11227:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8239,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"11255:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11257:7:21","memberName":"variant","nodeType":"MemberAccess","referencedDeclaration":7611,"src":"11255:9:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":8241,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"11283:1:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload calldata"}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11285:9:21","memberName":"sessionId","nodeType":"MemberAccess","referencedDeclaration":7595,"src":"11283:11:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8229,"name":"Subscribed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"11035:10:21","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint8,uint256,uint16,uint256,uint256,uint8,bytes32)"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11035:274:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8244,"nodeType":"EmitStatement","src":"11030:279:21"}]}}]},"functionSelector":"77d07c64","id":8294,"implemented":true,"kind":"function","modifiers":[],"name":"subscribe","nameLocation":"8854:9:21","nodeType":"FunctionDefinition","parameters":{"id":8011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8005,"mutability":"mutable","name":"planId","nameLocation":"8880:6:21","nodeType":"VariableDeclaration","scope":8294,"src":"8874:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8004,"name":"uint8","nodeType":"ElementaryTypeName","src":"8874:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8007,"mutability":"mutable","name":"discountSig","nameLocation":"8912:11:21","nodeType":"VariableDeclaration","scope":8294,"src":"8897:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8006,"name":"bytes","nodeType":"ElementaryTypeName","src":"8897:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8010,"mutability":"mutable","name":"p","nameLocation":"8959:1:21","nodeType":"VariableDeclaration","scope":8294,"src":"8934:26:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_calldata_ptr","typeString":"struct SubscriptionNFT.DiscountPayload"},"typeName":{"id":8009,"nodeType":"UserDefinedTypeName","pathNode":{"id":8008,"name":"DiscountPayload","nameLocations":["8934:15:21"],"nodeType":"IdentifierPath","referencedDeclaration":7612,"src":"8934:15:21"},"referencedDeclaration":7612,"src":"8934:15:21","typeDescriptions":{"typeIdentifier":"t_struct$_DiscountPayload_$7612_storage_ptr","typeString":"struct SubscriptionNFT.DiscountPayload"}},"visibility":"internal"}],"src":"8863:104:21"},"returnParameters":{"id":8012,"nodeType":"ParameterList","parameters":[],"src":"8985:0:21"},"scope":8383,"src":"8845:3041:21","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[530],"body":{"id":8314,"nodeType":"Block","src":"12451:89:21","statements":[{"condition":{"id":8302,"name":"soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"12466:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8306,"nodeType":"IfStatement","src":"12462:33:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8303,"name":"Soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"12484:9:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8305,"nodeType":"RevertStatement","src":"12477:18:21"}},{"expression":{"arguments":[{"id":8310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8296,"src":"12520:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8311,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8298,"src":"12524:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8307,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12506:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SubscriptionNFT_$8383_$","typeString":"type(contract super SubscriptionNFT)"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12512:7:21","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":530,"src":"12506:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12506:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8313,"nodeType":"ExpressionStatement","src":"12506:26:21"}]},"functionSelector":"095ea7b3","id":8315,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"12390:7:21","nodeType":"FunctionDefinition","overrides":{"id":8300,"nodeType":"OverrideSpecifier","overrides":[],"src":"12442:8:21"},"parameters":{"id":8299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8296,"mutability":"mutable","name":"to","nameLocation":"12406:2:21","nodeType":"VariableDeclaration","scope":8315,"src":"12398:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8295,"name":"address","nodeType":"ElementaryTypeName","src":"12398:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8298,"mutability":"mutable","name":"tokenId","nameLocation":"12418:7:21","nodeType":"VariableDeclaration","scope":8315,"src":"12410:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8297,"name":"uint256","nodeType":"ElementaryTypeName","src":"12410:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12397:29:21"},"returnParameters":{"id":8301,"nodeType":"ParameterList","parameters":[],"src":"12451:0:21"},"scope":8383,"src":"12381:159:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[563],"body":{"id":8335,"nodeType":"Block","src":"12632:106:21","statements":[{"condition":{"id":8323,"name":"soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"12647:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8327,"nodeType":"IfStatement","src":"12643:33:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8324,"name":"Soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"12665:9:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12665:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8326,"nodeType":"RevertStatement","src":"12658:18:21"}},{"expression":{"arguments":[{"id":8331,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"12711:8:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8332,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8319,"src":"12721:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8328,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12687:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SubscriptionNFT_$8383_$","typeString":"type(contract super SubscriptionNFT)"}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12693:17:21","memberName":"setApprovalForAll","nodeType":"MemberAccess","referencedDeclaration":563,"src":"12687:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12687:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8334,"nodeType":"ExpressionStatement","src":"12687:43:21"}]},"functionSelector":"a22cb465","id":8336,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"12557:17:21","nodeType":"FunctionDefinition","overrides":{"id":8321,"nodeType":"OverrideSpecifier","overrides":[],"src":"12623:8:21"},"parameters":{"id":8320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"operator","nameLocation":"12583:8:21","nodeType":"VariableDeclaration","scope":8336,"src":"12575:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8316,"name":"address","nodeType":"ElementaryTypeName","src":"12575:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8319,"mutability":"mutable","name":"approved","nameLocation":"12598:8:21","nodeType":"VariableDeclaration","scope":8336,"src":"12593:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8318,"name":"bool","nodeType":"ElementaryTypeName","src":"12593:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12574:33:21"},"returnParameters":{"id":8322,"nodeType":"ParameterList","parameters":[],"src":"12632:0:21"},"scope":8383,"src":"12548:190:21","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[879],"body":{"id":8381,"nodeType":"Block","src":"12939:314:21","statements":[{"condition":{"id":8348,"name":"soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"12954:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8373,"nodeType":"IfStatement","src":"12950:246:21","trueBody":{"id":8372,"nodeType":"Block","src":"12965:231:21","statements":[{"assignments":[8350],"declarations":[{"constant":false,"id":8350,"mutability":"mutable","name":"from","nameLocation":"12988:4:21","nodeType":"VariableDeclaration","scope":8372,"src":"12980:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8349,"name":"address","nodeType":"ElementaryTypeName","src":"12980:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8354,"initialValue":{"arguments":[{"id":8352,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"13004:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8351,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"12995:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12995:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12980:32:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"13126:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13142:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13134:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8356,"name":"address","nodeType":"ElementaryTypeName","src":"13134:7:21","typeDescriptions":{}}},"id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13134:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13126:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8361,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"13148:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13162:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13154:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8362,"name":"address","nodeType":"ElementaryTypeName","src":"13154:7:21","typeDescriptions":{}}},"id":8365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13154:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13148:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13126:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8371,"nodeType":"IfStatement","src":"13122:62:21","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8368,"name":"Soulbound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"13173:9:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":8369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13173:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8370,"nodeType":"RevertStatement","src":"13166:18:21"}}]}},{"expression":{"arguments":[{"id":8376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8338,"src":"13227:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8377,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"13231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8378,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"13240:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8374,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"13213:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SubscriptionNFT_$8383_$","typeString":"type(contract super SubscriptionNFT)"}},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13219:7:21","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":879,"src":"13213:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13213:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8347,"id":8380,"nodeType":"Return","src":"13206:39:21"}]},"id":8382,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"12844:7:21","nodeType":"FunctionDefinition","overrides":{"id":8344,"nodeType":"OverrideSpecifier","overrides":[],"src":"12912:8:21"},"parameters":{"id":8343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8338,"mutability":"mutable","name":"to","nameLocation":"12860:2:21","nodeType":"VariableDeclaration","scope":8382,"src":"12852:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8337,"name":"address","nodeType":"ElementaryTypeName","src":"12852:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8340,"mutability":"mutable","name":"tokenId","nameLocation":"12872:7:21","nodeType":"VariableDeclaration","scope":8382,"src":"12864:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8339,"name":"uint256","nodeType":"ElementaryTypeName","src":"12864:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8342,"mutability":"mutable","name":"auth","nameLocation":"12889:4:21","nodeType":"VariableDeclaration","scope":8382,"src":"12881:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8341,"name":"address","nodeType":"ElementaryTypeName","src":"12881:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12851:43:21"},"returnParameters":{"id":8347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8382,"src":"12930:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8345,"name":"address","nodeType":"ElementaryTypeName","src":"12930:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12929:9:21"},"scope":8383,"src":"12835:418:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":8384,"src":"829:12427:21","usedErrors":[13,18,220,225,234,239,244,251,256,261,1602,1604,3342,3347,3352,7593],"usedEvents":[24,152,1282,1291,1300,7673,7691]}],"src":"33:13225:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ecdf901afbdc72fc0e11c9f97f700647fd4534460b1a248b840e1ee0e8072e4d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDF SWAP1 BYTE 0xFB 0xDC PUSH19 0xFC0E11C9F97F700647FD4534460B1A248B840E 0x1E 0xE0 0xE8 SMOD 0x2E 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ecdf901afbdc72fc0e11c9f97f700647fd4534460b1a248b840e1ee0e8072e4d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDF SWAP1 BYTE 0xFB 0xDC PUSH19 0xFC0E11C9F97F700647FD4534460B1A248B840E 0x1E 0xE0 0xE8 SMOD 0x2E 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e6868d3b98367abc648605b5b93651352d49f2e27e5376100353dd385889caa864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 DUP7 DUP14 EXTCODESIZE SWAP9 CALLDATASIZE PUSH27 0xBC648605B5B93651352D49F2E27E5376100353DD385889CAA86473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"1255:3046:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e6868d3b98367abc648605b5b93651352d49f2e27e5376100353dd385889caa864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 DUP7 DUP14 EXTCODESIZE SWAP9 CALLDATASIZE PUSH27 0xBC648605B5B93651352D49F2E27E5376100353DD385889CAA86473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"1255:3046:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220349fad931e95b8b8d069aea6857f4fc049eea29c313ad774ba26f08f6d7aaa3964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xAD SWAP4 0x1E SWAP6 0xB8 0xB8 0xD0 PUSH10 0xAEA6857F4FC049EEA29C BALANCE GASPRICE 0xD7 PUSH21 0xBA26F08F6D7AAA3964736F6C634300081800330000 ","sourceMap":"1407:2774:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220349fad931e95b8b8d069aea6857f4fc049eea29c313ad774ba26f08f6d7aaa3964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xAD SWAP4 0x1E SWAP6 0xB8 0xB8 0xD0 PUSH10 0xAEA6857F4FC049EEA29C BALANCE GASPRICE 0xD7 PUSH21 0xBA26F08F6D7AAA3964736F6C634300081800330000 ","sourceMap":"1407:2774:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201053a7c72002399eec557de2bd4dc17a1325a524723784b3fefa16d162a61d2864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE8 0xA7 0xC7 KECCAK256 MUL CODECOPY SWAP15 0xEC SSTORE PUSH30 0xE2BD4DC17A1325A524723784B3FEFA16D162A61D2864736F6C6343000818 STOP CALLER ","sourceMap":"344:7470:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201053a7c72002399eec557de2bd4dc17a1325a524723784b3fefa16d162a61d2864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE8 0xA7 0xC7 KECCAK256 MUL CODECOPY SWAP15 0xEC SSTORE PUSH30 0xE2BD4DC17A1325A524723784B3FEFA16D162A61D2864736F6C6343000818 STOP CALLER ","sourceMap":"344:7470:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fdb2563bc6a2525e390068a1e1d3a6ac567219145cd404589172e36ae1589a7964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xB2 JUMP EXTCODESIZE 0xC6 LOG2 MSTORE MCOPY CODECOPY STOP PUSH9 0xA1E1D3A6AC56721914 TLOAD 0xD4 DIV PC SWAP2 PUSH19 0xE36AE1589A7964736F6C634300081800330000 ","sourceMap":"521:3729:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fdb2563bc6a2525e390068a1e1d3a6ac567219145cd404589172e36ae1589a7964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xB2 JUMP EXTCODESIZE 0xC6 LOG2 MSTORE MCOPY CODECOPY STOP PUSH9 0xA1E1D3A6AC56721914 TLOAD 0xD4 DIV PC SWAP2 PUSH19 0xE36AE1589A7964736F6C634300081800330000 ","sourceMap":"521:3729:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/SubscriptionNFT.sol":{"SubscriptionNFT":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"_treasury","type":"address"},{"internalType":"address","name":"_signer","type":"address"},{"internalType":"string","name":"_baseHttpURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"Soulbound","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"planId","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"priceWei","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"discountBps","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"netPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiresAt","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"sessionId","type":"bytes32"}],"name":"Renewed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"planId","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"priceWei","type":"uint256"},{"indexed":false,"internalType":"uint16","name":"discountBps","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"netPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiresAt","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"variant","type":"uint8"},{"indexed":false,"internalType":"bytes32","name":"sessionId","type":"bytes32"}],"name":"Subscribed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"PLAN_MONTHLY","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PLAN_YEARLY","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"name":"durationSec","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"expiresAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"nonceUsed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"name":"priceWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_uri","type":"string"}],"name":"setBaseHttpURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"monthlySec","type":"uint256"},{"internalType":"uint256","name":"yearlySec","type":"uint256"}],"name":"setDurations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"monthlyWei","type":"uint256"},{"internalType":"uint256","name":"yearlyWei","type":"uint256"}],"name":"setPrices","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_signer","type":"address"}],"name":"setSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_soulbound","type":"bool"}],"name":"setSoulbound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"signer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"soulbound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"planId","type":"uint8"},{"internalType":"bytes","name":"discountSig","type":"bytes"},{"components":[{"internalType":"bytes32","name":"sessionId","type":"bytes32"},{"internalType":"address","name":"wallet","type":"address"},{"internalType":"uint8","name":"planId","type":"uint8"},{"internalType":"uint16","name":"discountBps","type":"uint16"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"contractAddr","type":"address"},{"internalType":"uint8","name":"variant","type":"uint8"}],"internalType":"struct SubscriptionNFT.DiscountPayload","name":"p","type":"tuple"}],"name":"subscribe","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"tokenIdOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"variantOf","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":2247,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2268,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2211,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_12057":{"entryPoint":2155,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_12058":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_12059":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_12060":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_12061":{"entryPoint":2183,"id":null,"parameterSlots":1,"returnSlots":0},"fun_toShortStringWithFallback":{"entryPoint":2305,"id":1746,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_7422":{"entryPoint":2729,"id":1746,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"61016080604052346200086657620031ba8038038091620000218285620008a3565b833981019060808183031262000866576200003c81620008c7565b6200004a60208301620008c7565b906200005960408401620008c7565b606084015190936001600160401b03821162000866570184601f82011215620008665780516001600160401b038111620005e95760405195620000a7601f8301601f191660200188620008a3565b818752602082840101116200086657620000c89160208088019101620008dc565b604051620000d6816200086b565b601381527f446f7463617265537562736372697074696f6e000000000000000000000000006020820152604051916200010f836200086b565b60018352603160f81b60208401526040516200012b816200086b565b601481527f446f746361726520537562736372697074696f6e00000000000000000000000060208201526040519062000164826200086b565b60058252642221a9aaa160d91b60208301528051906001600160401b038211620005e95760005490600182811c921680156200085b575b6020831014620005c85781601f849311620007fb575b50602090601f83116001146200077f5760009262000773575b50508160011b916000199060031b1c1916176000555b8051906001600160401b038211620005e95760015490600182811c9216801562000768575b6020831014620005c85781601f84931162000704575b50602090601f831160011462000686576000926200067a575b50508160011b916000199060031b1c1916176001555b6001600160a01b038116156200066157600680546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3620002ac8162000901565b61012052620002bb8262000aa9565b6101405260208151910120908160e0526020815191012080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526200032c8162000887565b5190206080523060c0526001600b8190556012805460ff191690911790556001600160a01b03169081156200062f576001600160a01b0316908115620005ff57600f80546001600160a01b03199081169290921790556010805490911691909117905580516001600160401b038111620005e957601154600181811c91168015620005de575b6020821014620005c857601f81116200055e575b50602091601f8211600114620004f457918192600092620004e8575b50508160011b916000199060031b1c1916176011555b62278d007f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e3556301e133807fbbc70db1b6c7afd11e79c0fb0051300458f1a3acb8ee9789d9b6b26c61ad9bc755600960205260007fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b819055600181527f92e85d02570a8092d09a6e3a57665bc3815a2699a4074001bf1ccabf660f5a3655604051612579908162000c0182396080518161213c015260a05181612208015260c05181612106015260e0518161218b015261010051816121b10152610120518161097b015261014051816109a40152f35b015190503880620003e2565b601f19821692601160005260206000209160005b85811062000545575083600195106200052b575b505050811b01601155620003f8565b015160001960f88460031b161c191690553880806200051c565b9192602060018192868501518155019401920162000508565b60116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68601f830160051c81019160208410620005bd575b601f0160051c01905b818110620005b05750620003c6565b60008155600101620005a1565b909150819062000598565b634e487b7160e01b600052602260045260246000fd5b90607f1690620003b2565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152600860248201526707369676e65723d360c41b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a602482015269074726561737572793d360b41b6044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b01519050388062000234565b6001600090815293506000805160206200319a83398151915291905b601f1984168510620006e8576001945083601f19811610620006ce575b505050811b016001556200024a565b015160001960f88460031b161c19169055388080620006bf565b81810151835560209485019460019093019290910190620006a2565b60016000529091506000805160206200319a833981519152601f840160051c810191602085106200075d575b90601f859493920160051c01905b8181106200074d57506200021b565b600081558493506001016200073e565b909150819062000730565b91607f169162000205565b015190503880620001ca565b600080805293506000805160206200317a83398151915291905b601f1984168510620007df576001945083601f19811610620007c5575b505050811b01600055620001e0565b015160001960f88460031b161c19169055388080620007b6565b8181015183556020948501946001909301929091019062000799565b600080529091506000805160206200317a833981519152601f840160051c81016020851062000853575b90849392915b601f830160051c8201811062000843575050620001b1565b600081558594506001016200082b565b508062000825565b91607f16916200019b565b600080fd5b604081019081106001600160401b03821117620005e957604052565b60c081019081106001600160401b03821117620005e957604052565b601f909101601f19168101906001600160401b03821190821017620005e957604052565b51906001600160a01b03821682036200086657565b60005b838110620008f05750506000910152565b8181015183820152602001620008df565b8051602090818110156200097f5750601f8251116200093d57808251920151908083106200092e57501790565b82600019910360031b1b161790565b604490620009719260405193849263305a27a960e01b845280600485015282519283918260248701528686019101620008dc565b601f01601f19168101030190fd5b906001600160401b038211620005e957600754926001938481811c9116801562000a9e575b83821014620005c857601f811162000a64575b5081601f8411600114620009f85750928293918392600094620009ec575b50501b916000199060031b1c19161760075560ff90565b015192503880620009d5565b919083601f198116600760005284600020946000905b8883831062000a49575050501062000a2f575b505050811b0160075560ff90565b015160001960f88460031b161c1916905538808062000a21565b85870151885590960195948501948793509081019062000a0e565b600760005284601f84600020920160051c820191601f860160051c015b82811062000a91575050620009b7565b6000815501859062000a81565b90607f1690620009a4565b80516020908181101562000ad65750601f8251116200093d57808251920151908083106200092e57501790565b906001600160401b038211620005e957600854926001938481811c9116801562000bf5575b83821014620005c857601f811162000bbb575b5081601f841160011462000b4f575092829391839260009462000b43575b50501b916000199060031b1c19161760085560ff90565b01519250388062000b2c565b919083601f198116600860005284600020946000905b8883831062000ba0575050501062000b86575b505050811b0160085560ff90565b015160001960f88460031b161c1916905538808062000b78565b85870151885590960195948501948793509081019062000b65565b600860005284601f84600020920160051c820191601f860160051c015b82811062000be857505062000b0e565b6000815501859062000bd8565b90607f169062000afb56fe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714611a8c5750806305fefda714611a2557806306fdde031461197a578063081812fc1461193c578063095ea7b31461184b5780630fad0f511461182857806317c95709146117fc578063188a6013146117e0578063238ac933146117b757806323b872dd146117a0578063322b1cc51461176c5780633ccfd60b146116f857806342842e0e146116ca578063443403251461169657806361a4422b1461166557806361d027b31461163c5780636352211e1461160c5780636c19e7831461159457806370a082311461153b578063715018a6146114de578063750766ac1461136c578063773c02d41461133257806377d07c6414610a5c57806384b0196e146109625780638da5cb5b14610939578063959510a61461091d57806395d89b411461084e5780639f8a13d714610821578063a22cb46514610760578063a40b3998146106b5578063a4cf9cc114610686578063b88d4fde14610618578063c87b56dd1461034d578063df30e54b14610314578063e985e9c5146102be578063f0f44260146102445763f2fde38b146101b657600080fd5b3461023f57602036600319011261023f576101cf611b55565b6101d7611f78565b6001600160a01b0390811690811561022657600654826001600160601b0360a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461023f57602036600319011261023f5761025d611b55565b610265611f78565b6001600160a01b0316801561028c576001600160601b0360a01b600f541617600f55600080f35b60405162461bcd60e51b815260206004820152600a602482015269074726561737572793d360b41b6044820152606490fd5b3461023f57604036600319011261023f576102d7611b55565b6102df611b6b565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b3461023f57602036600319011261023f5760043580151580910361023f5761033a611f78565b60ff801960125416911617601255600080f35b3461023f5760208060031936011261023f5760043560008181526002835260409020549091906001600160a01b0316156105d457600091807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000081818110156105c6575b50506d04ee2d6d415b85acef8100000000808310156105b8575b50662386f26fc10000808310156105a9575b506305f5e1008083101561059a575b506127108083101561058b575b50606482101561057b575b600a80921015610571575b600193600181019261043361041d85611c4e565b9461042b6040519687611c2c565b808652611c4e565b9286602187870194601f19809701368737870101905b610542575b5050506040519485916000916011549061046782611ca1565b918860018216918260001461051e5750506001146104b9575b505061049482916104a19651938491611b0d565b0103908101845283611c2c565b6104b5604051928284938452830190611b30565b0390f35b879692935060116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68906000915b838310610506575050506104a19561049491850101929195610480565b8054838c018a015289988b97509092019181016104e9565b60ff1916878201528315159093028601909201935061049491506104a19050610480565b600019019082906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908782610449575061044e565b9260010192610409565b92906064600291049101926103fe565b600491949204910192846103f3565b600891949204910192846103e6565b601091949204910192846103d7565b8391949204910192846103c5565b6040955004915084806103ab565b6064906040519062461bcd60e51b82526004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e006044820152fd5b3461023f57608036600319011261023f57610631611b55565b610639611b6b565b906044356064359267ffffffffffffffff841161023f573660238501121561023f57610672610684943690602481600401359101611c6a565b9261067e838383611cdb565b33611fdf565b005b3461023f57602036600319011261023f57600435600052600e602052602060ff60406000205416604051908152f35b3461023f576106c336611af7565b906106cc611f78565b80151580610757575b1561072a57600a6020527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e35560016000527fbbc70db1b6c7afd11e79c0fb0051300458f1a3acb8ee9789d9b6b26c61ad9bc755005b60405162461bcd60e51b815260206004820152600560248201526406475723d360dc1b6044820152606490fd5b508115156106d5565b3461023f57604036600319011261023f57610779611b55565b6024359081151580920361023f5760ff6012541661080f576001600160a01b03169081156107f657336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b60405163a4420a9560e01b8152600490fd5b3461023f57602036600319011261023f57602061084461083f611b55565b611f40565b6040519015158152f35b3461023f57600036600319011261023f5760405160006001826001549261087484611ca1565b92838352602094856001821691826000146108fd5750506001146108a0575b506104a192500383611c2c565b84915060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906000915b8583106108e55750506104a1935082010185610893565b805483890185015287945086939092019181016108ce565b60ff1916858201526104a195151560051b85010192508791506108939050565b3461023f57600036600319011261023f57602060405160018152f35b3461023f57600036600319011261023f576006546040516001600160a01b039091168152602090f35b3461023f57600036600319011261023f576109fd61099f7f00000000000000000000000000000000000000000000000000000000000000006122ef565b6109c87f00000000000000000000000000000000000000000000000000000000000000006123f3565b604051906109d582611bf4565b60008252610a0b602091604051958695600f60f81b875260e0602088015260e0870190611b30565b908582036040870152611b30565b466060850152306080850152600060a085015283810360c08501526020808451928381520193019160005b828110610a4557505050500390f35b835185528695509381019392810192600101610a36565b61016036600319011261023f57610a71611bb6565b60243567ffffffffffffffff811161023f57610a91903690600401611bc6565b61012036604319011261023f5760ff8316158015611325575b156112f15760ff831660ff610abd611ed4565b16036112b45760e43542116112855760c435600052601360205260ff6040600020541661125357610aec611ef5565b336001600160a01b039091160361121c574661010435036111e457610b0f611f0b565b306001600160a01b03909116036111ab57610b28611ef5565b90610b31611ed4565b610b39611f22565b61ffff610b44611f0b565b9160ff610b4f611ee4565b94604051977f4bd895b228a83561329234c8900605abe5b5f2ac79331cc779a522952146d9c160208a015260443560408a015260018060a01b031660608901521660808701521660a085015260c43560c085015260e43560e08501526101043561010085015260018060a01b031661012084015260ff610140911681840152825261016082019180831067ffffffffffffffff84111761119557610c38936042610c2992610c2f9560405260208151910120610c09612103565b906040519161190160f01b83526002830152602282015220923691611c6a565b9061222e565b9092919261226a565b6010546001600160a01b039081169116036111605760c43560005260136020526040600020600160ff1982541617905560ff8116600052600960205260406000205490811561113157612710918261ffff610c91611f22565b16116111005761ffff610ca2611f22565b168082029082820403611001578184820481031161100157838104820334036110c95733600052600c60205260406000205480156000146110175750600b549360001985146110015760018501600b55604051610cfe81611bf4565b600081523315610fe85760ff60125416610fa9575b6000868152600260205260409020546001600160a01b031680151590879082610f72575b3360005260036020526040600020600181540190558160005260026020526040600020336001600160601b0360a01b82541617905533907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4610f5957333b610e6a575b5060ff92610daa611ee4565b86600052600e60205284604060002091168519825416179055838516600052600a602052610ddd60406000205442611f33565b9186600052600d6020528260406000205533600052600c60205286604060002055610e06611f22565b9361ffff610e12611ee4565b9587604051991689528460208a0152166040880152049003606085015260808401521660a082015260443560c08201527f506b11fd56d29ee1bf2fb0630701f77afa8cb127509b1421d090f00b3487ffc560e03392a3005b60405160208180610ea4630a85bd0160e11b95868352336004840152600060248401528b6044840152608060648401526084830190611b30565b03816000335af160009181610f14575b50610ee657610ec1611ea4565b80519081610ee157604051633250574960e11b8152336004820152602490fd5b602001fd5b6001600160e01b03191603610efc5760ff610d9e565b604051633250574960e11b8152336004820152602490fd5b9091506020813d602011610f51575b81610f3060209383611c2c565b8101031261023f57516001600160e01b03198116810361023f579088610eb4565b3d9150610f23565b6040516339e3563760e11b815260006004820152602490fd5b600082815260046020526040902080546001600160a01b031916905580600052600360205260406000206000198154019055610d37565b6000868152600260205260409020546001600160a01b0316151580610fe0575b15610d135760405163a4420a9560e01b8152600490fd5b506001610fc9565b604051633250574960e11b815260006004820152602490fd5b634e487b7160e01b600052601160045260246000fd5b9384600093929352600d6020526040600020544281116000146110bf57611051905b60ff8616600052600a60205260406000205490611f33565b9285600052600d6020528360406000205561ffff61106d611f22565b60ff604051971687528460208801521660408601520490036060830152608082015260443560a08201527f40f4d86e270c4ffc31dae8743e42da44a3a1ffd3759c7eb81ec77b8e0205c84460c03392a3005b5061105142611039565b60405162461bcd60e51b815260206004820152600f60248201526e77726f6e67206d73672e76616c756560881b6044820152606490fd5b60405162461bcd60e51b815260206004820152600960248201526806270733e31303030360bc1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c626164207369676e617475726560981b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b81526020600482015260116024820152700c6dedce8e4c2c6e840dad2e6dac2e8c6d607b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f0c6d0c2d2dc92c840dad2e6dac2e8c6d60831b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e0eec2d8d8cae840dad2e6dac2e8c6d608b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a6024820152691b9bdb98d9481d5cd95960b21b6044820152606490fd5b60405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152740e0c2f2d8dec2c85ce0d8c2dc40dad2e6dac2e8c6d605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b1c1b185b881a5b9d985b1a5960a21b6044820152606490fd5b50600160ff841614610aaa565b3461023f57602036600319011261023f576001600160a01b03611353611b55565b16600052600c6020526020604060002054604051908152f35b3461023f5760208060031936011261023f5767ffffffffffffffff60043581811161023f5761139f903690600401611bc6565b916113a8611f78565b8211611195576113b9601154611ca1565b601f811161147e575b50600092601f831160011461140157509181926000926113f6575b5050600019600383901b1c191660019190911b17601155005b0135905082806113dd565b601f198316937f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6892916000905b868210611466575050836001951061144c575b505050811b01601155005b0135600019600384901b60f8161c19169055828080611441565b8060018496829495870135815501950192019061142e565b7f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68601f840160051c810191602085106114d4575b601f0160051c01905b8181106114c857506113c2565b600081556001016114bb565b90915081906114b2565b3461023f57600036600319011261023f576114f7611f78565b600680546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461023f57602036600319011261023f576001600160a01b0361155c611b55565b16801561157b5760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b3461023f57602036600319011261023f576115ad611b55565b6115b5611f78565b6001600160a01b031680156115dc576001600160601b0360a01b6010541617601055600080f35b60405162461bcd60e51b815260206004820152600860248201526707369676e65723d360c41b6044820152606490fd5b3461023f57602036600319011261023f57602061162a600435611fa4565b6040516001600160a01b039091168152f35b3461023f57600036600319011261023f57600f546040516001600160a01b039091168152602090f35b3461023f57602036600319011261023f576004356000526013602052602060ff604060002054166040519015158152f35b3461023f57602036600319011261023f5760ff6116b1611bb6565b16600052600a6020526020604060002054604051908152f35b3461023f576106846116db36611b81565b90604051926116e984611bf4565b6000845261067e838383611cdb565b3461023f57600036600319011261023f57611711611f78565b600080808060018060a01b03600f541647905af161172d611ea4565b501561173557005b60405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b3461023f57602036600319011261023f5760ff611787611bb6565b1660005260096020526020604060002054604051908152f35b3461023f576106846117b136611b81565b91611cdb565b3461023f57600036600319011261023f576010546040516001600160a01b039091168152602090f35b3461023f57600036600319011261023f57602060405160008152f35b3461023f57602036600319011261023f57600435600052600d6020526020604060002054604051908152f35b3461023f57600036600319011261023f57602060ff601254166040519015158152f35b3461023f57604036600319011261023f57611864611b55565b60243560ff6012541661080f5761187a81611fa4565b33151580611929575b806118fc575b6118e4576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff6040600020541615611889565b506001600160a01b038116331415611883565b3461023f57602036600319011261023f5760043561195981611fa4565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461023f57600036600319011261023f5760405160008054908261199d83611ca1565b91828252602093600190856001821691826000146108fd5750506001146119cb57506104a192500383611c2c565b6000808052859250907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310611a0d5750506104a1935082010185610893565b805483890185015287945086939092019181016119f6565b3461023f57611a3336611af7565b90611a3c611f78565b60096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b5560016000527f92e85d02570a8092d09a6e3a57665bc3815a2699a4074001bf1ccabf660f5a3655005b3461023f57602036600319011261023f576004359063ffffffff60e01b821680920361023f576020916380ac58cd60e01b8114908115611ae6575b8115611ad5575b5015158152f35b6301ffc9a760e01b14905083611ace565b635b5e139f60e01b81149150611ac7565b604090600319011261023f576004359060243590565b60005b838110611b205750506000910152565b8181015183820152602001611b10565b90602091611b4981518092818552858086019101611b0d565b601f01601f1916010190565b600435906001600160a01b038216820361023f57565b602435906001600160a01b038216820361023f57565b606090600319011261023f576001600160a01b0390600435828116810361023f5791602435908116810361023f579060443590565b6004359060ff8216820361023f57565b9181601f8401121561023f5782359167ffffffffffffffff831161023f576020838186019501011161023f57565b6020810190811067ffffffffffffffff82111761119557604052565b6040810190811067ffffffffffffffff82111761119557604052565b90601f8019910116810190811067ffffffffffffffff82111761119557604052565b67ffffffffffffffff811161119557601f01601f191660200190565b929192611c7682611c4e565b91611c846040519384611c2c565b82948184528183011161023f578281602093846000960137010152565b90600182811c92168015611cd1575b6020831014611cbb57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cb0565b6001600160a01b039182169290918315610fe85760ff60125416611e6c575b600092828452826020956002875260409684888820541696879133151580611dd6575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284611da3575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303611d825750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611d49565b91939450915080611e2b575b15611df257859291879138611d1d565b878688611e0f576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611e50575b80611de25750858252600481523385898420541614611de2565b5086825260058152878220338352815260ff8883205416611e36565b8160005260026020528060406000205416151580611e9c575b15611cfa5760405163a4420a9560e01b8152600490fd5b506001611e85565b3d15611ecf573d90611eb582611c4e565b91611ec36040519384611c2c565b82523d6000602084013e565b606090565b60843560ff8116810361023f5790565b6101443560ff8116810361023f5790565b6064356001600160a01b038116810361023f5790565b610124356001600160a01b038116810361023f5790565b60a43561ffff8116810361023f5790565b9190820180921161100157565b6001600160a01b03166000908152600c60205260409020548015611f7257600052600d60205260406000205442111590565b50600090565b6006546001600160a01b03163303611f8c57565b60405163118cdaa760e01b8152336004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115611fc7575090565b60249060405190637e27328960e01b82526004820152fd5b9293823b611fef575b5050505050565b6120339060018060a01b038094169560405194859481630a85bd0160e11b988988521660048701521660248501526044840152608060648401526084830190611b30565b03906020816000938185885af1908290826120b3575b50506120815782612058611ea4565b805191908261207a57604051633250574960e11b815260048101839052602490fd5b6020915001fd5b6001600160e01b0319160361209b57503880808080611fe8565b60249060405190633250574960e11b82526004820152fd5b909192506020813d6020116120fb575b816120d060209383611c2c565b810103126120f75751906001600160e01b0319821682036120f45750903880612049565b80fd5b5080fd5b3d91506120c3565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480612205575b1561215e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176111955760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612135565b815191906041830361225f5761225892506020820151906060604084015193015160001a906124b3565b9192909190565b505060009160029190565b60048110156122d9578061227c575050565b600181036122965760405163f645eedf60e01b8152600490fd5b600281036122b75760405163fce698f760e01b815260048101839052602490fd5b6003146122c15750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b60ff811461232d5760ff811690601f821161231b576040519161231183611c10565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160075481600061234083611ca1565b808352926020906001908181169081156123cf575060011461236e575b505061236b92500382611c2c565b90565b91509260076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688936000925b8284106123b7575061236b945050508101602001388061235d565b8554878501830152948501948694509281019261239c565b9150506020925061236b94915060ff191682840152151560051b820101388061235d565b60ff81146124155760ff811690601f821161231b576040519161231183611c10565b5060405160085481600061242883611ca1565b808352926020906001908181169081156123cf575060011461245257505061236b92500382611c2c565b91509260086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3936000925b82841061249b575061236b945050508101602001388061235d565b85548785018301529485019486945092810192612480565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161253757926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561252b5780516001600160a01b0381161561252257918190565b50809160019190565b604051903d90823e3d90fd5b5050506000916003919056fea2646970667358221220e52c4142d7f4b59322e4b4be2a21ab670a5ffac75242485ceb99a81bf738f68e64736f6c63430008180033290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6","opcodes":"PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x866 JUMPI PUSH3 0x31BA DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x21 DUP3 DUP6 PUSH3 0x8A3 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH3 0x866 JUMPI PUSH3 0x3C DUP2 PUSH3 0x8C7 JUMP JUMPDEST PUSH3 0x4A PUSH1 0x20 DUP4 ADD PUSH3 0x8C7 JUMP JUMPDEST SWAP1 PUSH3 0x59 PUSH1 0x40 DUP5 ADD PUSH3 0x8C7 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x866 JUMPI ADD DUP5 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x866 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5E9 JUMPI PUSH1 0x40 MLOAD SWAP6 PUSH3 0xA7 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP9 PUSH3 0x8A3 JUMP JUMPDEST DUP2 DUP8 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0x866 JUMPI PUSH3 0xC8 SWAP2 PUSH1 0x20 DUP1 DUP9 ADD SWAP2 ADD PUSH3 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xD6 DUP2 PUSH3 0x86B JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH32 0x446F7463617265537562736372697074696F6E00000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH3 0x10F DUP4 PUSH3 0x86B JUMP JUMPDEST PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH3 0x12B DUP2 PUSH3 0x86B JUMP JUMPDEST PUSH1 0x14 DUP2 MSTORE PUSH32 0x446F746361726520537562736372697074696F6E000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH3 0x164 DUP3 PUSH3 0x86B JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x2221A9AAA1 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5E9 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x85B JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5C8 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x7FB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x77F JUMPI PUSH1 0x0 SWAP3 PUSH3 0x773 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5E9 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x768 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5C8 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x704 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x686 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x67A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH3 0x661 JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH3 0x2AC DUP2 PUSH3 0x901 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x2BB DUP3 PUSH3 0xAA9 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 DUP2 PUSH1 0xE0 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP1 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH3 0x32C DUP2 PUSH3 0x887 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH3 0x62F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH3 0x5FF JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5E9 JUMPI PUSH1 0x11 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5DE JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5C8 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x55E JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x4F4 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH3 0x4E8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x11 SSTORE JUMPDEST PUSH3 0x278D00 PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 SSTORE PUSH4 0x1E13380 PUSH32 0xBBC70DB1B6C7AFD11E79C0FB0051300458F1A3ACB8EE9789D9B6B26C61AD9BC7 SSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B DUP2 SWAP1 SSTORE PUSH1 0x1 DUP2 MSTORE PUSH32 0x92E85D02570A8092D09A6E3A57665BC3815A2699A4074001BF1CCABF660F5A36 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2579 SWAP1 DUP2 PUSH3 0xC01 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x213C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x2208 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x2106 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x218B ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x21B1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x97B ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x9A4 ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x3E2 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x11 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH3 0x545 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH3 0x52B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x11 SSTORE PUSH3 0x3F8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x51C JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x508 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x5BD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x5B0 JUMPI POP PUSH3 0x3C6 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5A1 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x598 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x3B2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x7369676E65723D3 PUSH1 0xC4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x74726561737572793D3 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x234 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x319A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x6E8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x6CE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 SSTORE PUSH3 0x24A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x6BF JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x6A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x319A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x75D JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x74D JUMPI POP PUSH3 0x21B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x73E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x730 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x205 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1CA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x317A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x7DF JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x7C5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE PUSH3 0x1E0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x7B6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x799 JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x317A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x853 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x843 JUMPI POP POP PUSH3 0x1B1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x82B JUMP JUMPDEST POP DUP1 PUSH3 0x825 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x19B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x5E9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x5E9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5E9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x866 JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0x8F0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x8DF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0x97F JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x93D JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x92E JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH3 0x971 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP5 MSTORE DUP1 PUSH1 0x4 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x24 DUP8 ADD MSTORE DUP7 DUP7 ADD SWAP2 ADD PUSH3 0x8DC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5E9 JUMPI PUSH1 0x7 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xA9E JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5C8 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xA64 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x9F8 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x9EC JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x9D5 JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x7 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0xA49 JUMPI POP POP POP LT PUSH3 0xA2F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xA21 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0xA0E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xA91 JUMPI POP POP PUSH3 0x9B7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0xA81 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x9A4 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0xAD6 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0x93D JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0x92E JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5E9 JUMPI PUSH1 0x8 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xBF5 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5C8 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xBBB JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0xB4F JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0xB43 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xB2C JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0xBA0 JUMPI POP POP POP LT PUSH3 0xB86 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xB78 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0xB65 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xBE8 JUMPI POP POP PUSH3 0xB0E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0xBD8 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAFB JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A8C JUMPI POP DUP1 PUSH4 0x5FEFDA7 EQ PUSH2 0x1A25 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x197A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x193C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x184B JUMPI DUP1 PUSH4 0xFAD0F51 EQ PUSH2 0x1828 JUMPI DUP1 PUSH4 0x17C95709 EQ PUSH2 0x17FC JUMPI DUP1 PUSH4 0x188A6013 EQ PUSH2 0x17E0 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x17B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17A0 JUMPI DUP1 PUSH4 0x322B1CC5 EQ PUSH2 0x176C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x16F8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x16CA JUMPI DUP1 PUSH4 0x44340325 EQ PUSH2 0x1696 JUMPI DUP1 PUSH4 0x61A4422B EQ PUSH2 0x1665 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x163C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x160C JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x1594 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x153B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14DE JUMPI DUP1 PUSH4 0x750766AC EQ PUSH2 0x136C JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x1332 JUMPI DUP1 PUSH4 0x77D07C64 EQ PUSH2 0xA5C JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x939 JUMPI DUP1 PUSH4 0x959510A6 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0x9F8A13D7 EQ PUSH2 0x821 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xA40B3998 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xA4CF9CC1 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xDF30E54B EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x244 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x1CF PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x226 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x6 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x25D PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x74726561737572793D3 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x2D7 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x1B6B JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x23F JUMPI PUSH2 0x33A PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0x12 SLOAD AND SWAP2 AND OR PUSH1 0x12 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 SWAP2 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP2 DUP2 DUP2 LT ISZERO PUSH2 0x5C6 JUMPI JUMPDEST POP POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x5B8 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x5A9 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x59A JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x58B JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x57B JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x571 JUMPI JUMPDEST PUSH1 0x1 SWAP4 PUSH1 0x1 DUP2 ADD SWAP3 PUSH2 0x433 PUSH2 0x41D DUP6 PUSH2 0x1C4E JUMP JUMPDEST SWAP5 PUSH2 0x42B PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x1C2C JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH2 0x1C4E JUMP JUMPDEST SWAP3 DUP7 PUSH1 0x21 DUP8 DUP8 ADD SWAP5 PUSH1 0x1F NOT DUP1 SWAP8 ADD CALLDATASIZE DUP8 CALLDATACOPY DUP8 ADD ADD SWAP1 JUMPDEST PUSH2 0x542 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x11 SLOAD SWAP1 PUSH2 0x467 DUP3 PUSH2 0x1CA1 JUMP JUMPDEST SWAP2 DUP9 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x51E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4B9 JUMPI JUMPDEST POP POP PUSH2 0x494 DUP3 SWAP2 PUSH2 0x4A1 SWAP7 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x1B0D JUMP JUMPDEST ADD SUB SWAP1 DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0x4B5 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP8 SWAP7 SWAP3 SWAP4 POP PUSH1 0x11 PUSH1 0x0 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x506 JUMPI POP POP POP PUSH2 0x4A1 SWAP6 PUSH2 0x494 SWAP2 DUP6 ADD ADD SWAP3 SWAP2 SWAP6 PUSH2 0x480 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP13 ADD DUP11 ADD MSTORE DUP10 SWAP9 DUP12 SWAP8 POP SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE DUP4 ISZERO ISZERO SWAP1 SWAP4 MUL DUP7 ADD SWAP1 SWAP3 ADD SWAP4 POP PUSH2 0x494 SWAP2 POP PUSH2 0x4A1 SWAP1 POP PUSH2 0x480 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP3 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP8 DUP3 PUSH2 0x449 JUMPI POP PUSH2 0x44E JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP3 PUSH2 0x409 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP3 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3D7 JUMP JUMPDEST DUP4 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 SWAP6 POP DIV SWAP2 POP DUP5 DUP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x631 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x639 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x23F JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x23F JUMPI PUSH2 0x672 PUSH2 0x684 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1C6A JUMP JUMPDEST SWAP3 PUSH2 0x67E DUP4 DUP4 DUP4 PUSH2 0x1CDB JUMP JUMPDEST CALLER PUSH2 0x1FDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x6C3 CALLDATASIZE PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 PUSH2 0x6CC PUSH2 0x1F78 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x757 JUMPI JUMPDEST ISZERO PUSH2 0x72A JUMPI PUSH1 0xA PUSH1 0x20 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xBBC70DB1B6C7AFD11E79C0FB0051300458F1A3ACB8EE9789D9B6B26C61AD9BC7 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x6475723D3 PUSH1 0xDC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x6D5 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x779 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x23F JUMPI PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0x80F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7F6 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA4420A95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0x844 PUSH2 0x83F PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x1 SLOAD SWAP3 PUSH2 0x874 DUP5 PUSH2 0x1CA1 JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x8FD JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x8A0 JUMPI JUMPDEST POP PUSH2 0x4A1 SWAP3 POP SUB DUP4 PUSH2 0x1C2C JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x8E5 JUMPI POP POP PUSH2 0x4A1 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0x4A1 SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0x893 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x9FD PUSH2 0x99F PUSH32 0x0 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0x9C8 PUSH32 0x0 PUSH2 0x23F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9D5 DUP3 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0xA0B PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xF PUSH1 0xF8 SHL DUP8 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1B30 JUMP JUMPDEST CHAINID PUSH1 0x60 DUP6 ADD MSTORE ADDRESS PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xA45 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0xA71 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x23F JUMPI PUSH2 0xA91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC6 JUMP JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x43 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xFF DUP4 AND ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI JUMPDEST ISZERO PUSH2 0x12F1 JUMPI PUSH1 0xFF DUP4 AND PUSH1 0xFF PUSH2 0xABD PUSH2 0x1ED4 JUMP JUMPDEST AND SUB PUSH2 0x12B4 JUMPI PUSH1 0xE4 CALLDATALOAD TIMESTAMP GT PUSH2 0x1285 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1253 JUMPI PUSH2 0xAEC PUSH2 0x1EF5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x121C JUMPI CHAINID PUSH2 0x104 CALLDATALOAD SUB PUSH2 0x11E4 JUMPI PUSH2 0xB0F PUSH2 0x1F0B JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x11AB JUMPI PUSH2 0xB28 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 PUSH2 0xB31 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0xB39 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0xFFFF PUSH2 0xB44 PUSH2 0x1F0B JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH2 0xB4F PUSH2 0x1EE4 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP8 PUSH32 0x4BD895B228A83561329234C8900605ABE5B5F2AC79331CC779A522952146D9C1 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP10 ADD MSTORE AND PUSH1 0x80 DUP8 ADD MSTORE AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x140 SWAP2 AND DUP2 DUP5 ADD MSTORE DUP3 MSTORE PUSH2 0x160 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x1195 JUMPI PUSH2 0xC38 SWAP4 PUSH1 0x42 PUSH2 0xC29 SWAP3 PUSH2 0xC2F SWAP6 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xC09 PUSH2 0x2103 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x1C6A JUMP JUMPDEST SWAP1 PUSH2 0x222E JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND SUB PUSH2 0x1160 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xFF DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1131 JUMPI PUSH2 0x2710 SWAP2 DUP3 PUSH2 0xFFFF PUSH2 0xC91 PUSH2 0x1F22 JUMP JUMPDEST AND GT PUSH2 0x1100 JUMPI PUSH2 0xFFFF PUSH2 0xCA2 PUSH2 0x1F22 JUMP JUMPDEST AND DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV SUB PUSH2 0x1001 JUMPI DUP2 DUP5 DUP3 DIV DUP2 SUB GT PUSH2 0x1001 JUMPI DUP4 DUP2 DIV DUP3 SUB CALLVALUE SUB PUSH2 0x10C9 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1017 JUMPI POP PUSH1 0xB SLOAD SWAP4 PUSH1 0x0 NOT DUP6 EQ PUSH2 0x1001 JUMPI PUSH1 0x1 DUP6 ADD PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0xCFE DUP2 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE CALLER ISZERO PUSH2 0xFE8 JUMPI PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0xFA9 JUMPI JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP8 SWAP1 DUP3 PUSH2 0xF72 JUMPI JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH2 0xF59 JUMPI CALLER EXTCODESIZE PUSH2 0xE6A JUMPI JUMPDEST POP PUSH1 0xFF SWAP3 PUSH2 0xDAA PUSH2 0x1EE4 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND DUP6 NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 DUP6 AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0xDDD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1F33 JUMP JUMPDEST SWAP2 DUP7 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE DUP7 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xE06 PUSH2 0x1F22 JUMP JUMPDEST SWAP4 PUSH2 0xFFFF PUSH2 0xE12 PUSH2 0x1EE4 JUMP JUMPDEST SWAP6 DUP8 PUSH1 0x40 MLOAD SWAP10 AND DUP10 MSTORE DUP5 PUSH1 0x20 DUP11 ADD MSTORE AND PUSH1 0x40 DUP9 ADD MSTORE DIV SWAP1 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x506B11FD56D29EE1BF2FB0630701F77AFA8CB127509B1421D090F00B3487FFC5 PUSH1 0xE0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0xEA4 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP12 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xF14 JUMPI JUMPDEST POP PUSH2 0xEE6 JUMPI PUSH2 0xEC1 PUSH2 0x1EA4 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xEFC JUMPI PUSH1 0xFF PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF51 JUMPI JUMPDEST DUP2 PUSH2 0xF30 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C2C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 DUP9 PUSH2 0xEB4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0xFE0 JUMPI JUMPDEST ISZERO PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA4420A95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 DUP5 PUSH1 0x0 SWAP4 SWAP3 SWAP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH1 0x0 EQ PUSH2 0x10BF JUMPI PUSH2 0x1051 SWAP1 JUMPDEST PUSH1 0xFF DUP7 AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x1F33 JUMP JUMPDEST SWAP3 DUP6 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xFFFF PUSH2 0x106D PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD SWAP8 AND DUP8 MSTORE DUP5 PUSH1 0x20 DUP9 ADD MSTORE AND PUSH1 0x40 DUP7 ADD MSTORE DIV SWAP1 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x40F4D86E270C4FFC31DAE8743E42DA44A3A1FFD3759C7EB81EC77B8E0205C844 PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST POP PUSH2 0x1051 TIMESTAMP PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x77726F6E67206D73672E76616C7565 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6270733E313030303 PUSH1 0xBC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x626164207369676E6174757265 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xC6DEDCE8E4C2C6E840DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xC6D0C2D2DC92C840DAD2E6DAC2E8C6D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xEEC2D8D8CAE840DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDB98D9481D5CD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE0C2F2D8DEC2C85CE0D8C2DC40DAD2E6DAC2E8C6D PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1C1B185B881A5B9D985B1A59 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP5 AND EQ PUSH2 0xAAA JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1353 PUSH2 0x1B55 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x139F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 PUSH2 0x13A8 PUSH2 0x1F78 JUMP JUMPDEST DUP3 GT PUSH2 0x1195 JUMPI PUSH2 0x13B9 PUSH1 0x11 SLOAD PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x147E JUMPI JUMPDEST POP PUSH1 0x0 SWAP3 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1401 JUMPI POP SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x13F6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x11 SSTORE STOP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP3 DUP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 SWAP3 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1466 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x144C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x11 SSTORE STOP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP7 DUP3 SWAP5 SWAP6 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x14D4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x14C8 JUMPI POP PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x14F7 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x155C PUSH2 0x1B55 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x157B JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x15AD PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x15B5 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x15DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x7369676E65723D3 PUSH1 0xC4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0x162A PUSH1 0x4 CALLDATALOAD PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xFF PUSH2 0x16B1 PUSH2 0x1BB6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x684 PUSH2 0x16DB CALLDATASIZE PUSH2 0x1B81 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x16E9 DUP5 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x67E DUP4 DUP4 DUP4 PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x1711 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xF SLOAD AND SELFBALANCE SWAP1 GAS CALL PUSH2 0x172D PUSH2 0x1EA4 JUMP JUMPDEST POP ISZERO PUSH2 0x1735 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xFF PUSH2 0x1787 PUSH2 0x1BB6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x684 PUSH2 0x17B1 CALLDATASIZE PUSH2 0x1B81 JUMP JUMPDEST SWAP2 PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x1864 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0x80F JUMPI PUSH2 0x187A DUP2 PUSH2 0x1FA4 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x1929 JUMPI JUMPDEST DUP1 PUSH2 0x18FC JUMPI JUMPDEST PUSH2 0x18E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1889 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1883 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1959 DUP2 PUSH2 0x1FA4 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x199D DUP4 PUSH2 0x1CA1 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x8FD JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x19CB JUMPI POP PUSH2 0x4A1 SWAP3 POP SUB DUP4 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE DUP6 SWAP3 POP SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP6 DUP4 LT PUSH2 0x1A0D JUMPI POP POP PUSH2 0x4A1 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x19F6 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x1A33 CALLDATASIZE PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 PUSH2 0x1A3C PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0x92E85D02570A8092D09A6E3A57665BC3815A2699A4074001BF1CCABF660F5A36 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x23F JUMPI PUSH1 0x20 SWAP2 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1AD5 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1ACE JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1B20 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B10 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1B49 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x23F JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23F JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1195 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1C76 DUP3 PUSH2 0x1C4E JUMP JUMPDEST SWAP2 PUSH2 0x1C84 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C2C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x23F JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CD1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CBB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xFE8 JUMPI PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0x1E6C JUMPI JUMPDEST PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x1DD6 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x1DA3 JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x1D82 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1D49 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1E2B JUMPI JUMPDEST ISZERO PUSH2 0x1DF2 JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1D1D JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1E0F JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1E50 JUMPI JUMPDEST DUP1 PUSH2 0x1DE2 JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x1DE2 JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x1E36 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO DUP1 PUSH2 0x1E9C JUMPI JUMPDEST ISZERO PUSH2 0x1CFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA4420A95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x1E85 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1ECF JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1EB5 DUP3 PUSH2 0x1C4E JUMP JUMPDEST SWAP2 PUSH2 0x1EC3 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C2C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1001 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1F72 JUMPI PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F8C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1FC7 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP4 DUP3 EXTCODESIZE PUSH2 0x1FEF JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2033 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 DUP10 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SUB SWAP1 PUSH1 0x20 DUP2 PUSH1 0x0 SWAP4 DUP2 DUP6 DUP9 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x20B3 JUMPI JUMPDEST POP POP PUSH2 0x2081 JUMPI DUP3 PUSH2 0x2058 PUSH2 0x1EA4 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x207A JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x209B JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x20FB JUMPI JUMPDEST DUP2 PUSH2 0x20D0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C2C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20F7 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x20F4 JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x2049 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20C3 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2205 JUMPI JUMPDEST ISZERO PUSH2 0x215E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2135 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x225F JUMPI PUSH2 0x2258 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x24B3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x22D9 JUMPI DUP1 PUSH2 0x227C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2296 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x22B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x22C1 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x232D JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x231B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2311 DUP4 PUSH2 0x1C10 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x7 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2340 DUP4 PUSH2 0x1CA1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x23CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x236E JUMPI JUMPDEST POP POP PUSH2 0x236B SWAP3 POP SUB DUP3 PUSH2 0x1C2C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x23B7 JUMPI POP PUSH2 0x236B SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x235D JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x239C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x236B SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x2415 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x231B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2311 DUP4 PUSH2 0x1C10 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2428 DUP4 PUSH2 0x1CA1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x23CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x2452 JUMPI POP POP PUSH2 0x236B SWAP3 POP SUB DUP3 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x249B JUMPI POP PUSH2 0x236B SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x235D JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x2480 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2537 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x252B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2522 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0x2C COINBASE TIMESTAMP 0xD7 DELEGATECALL 0xB5 SWAP4 0x22 0xE4 0xB4 0xBE 0x2A 0x21 0xAB PUSH8 0xA5FFAC75242485C 0xEB SWAP10 0xA8 SHL 0xF7 CODESIZE 0xF6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER 0x29 0xD 0xEC 0xD9 SLOAD DUP12 PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH4 0xB10E2D52 PUSH23 0x12073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2 0xB7 STATICCALL 0xC 0xF6 ","sourceMap":"829:12427:21:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1517:21;829:12427;;-1:-1:-1;;;829:12427:21;1517:21;;;829:12427;;;;;:::i;:::-;1586:3;829:12427;;1586:3;829:12427;1586:3;;;829:12427;;;;;;:::i;:::-;1586:3;829:12427;;-1:-1:-1;;;829:12427:21;1586:3;;;;;;-1:-1:-1;;;;;1586:3:21;;;;-1:-1:-1;1586:3:21;;1517:21;1586:3;;;;;;;;;-1:-1:-1;829:12427:21;1586:3;;;;;;829:12427;1586:3;;;;;-1:-1:-1;1586:3:21;829:12427;1586:3;829:12427;1586:3;;;829:12427;;;-1:-1:-1;1586:3:21;;;;;;;1517:21;1586:3;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;-1:-1:-1;;;;;1586:3:21;;;;1517:21;1586:3;;1517:21;1586:3;;;;;;;;;;829:12427;1586:3;;;;;;829:12427;1586:3;;;;;;;829:12427;1586:3;829:12427;1586:3;;;829:12427;;;-1:-1:-1;1586:3:21;;;;;;;1517:21;1586:3;;;;;;;;;;;1517:21;1586:3;;-1:-1:-1;;;;;829:12427:21;;1273:26:0;1269:95;;3004:6;829:12427:21;;-1:-1:-1;;;;;829:12427:21;;;-1:-1:-1;;;;;;1586:3:21;;;;;;;829:12427;;;3052:40:0;-1:-1:-1;;3052:40:0;3501:45:14;;;:::i;:::-;3493:53;;3567:51;;;:::i;:::-;3556:62;;829:12427:21;1586:3;;829:12427;;3642:22:14;3628:36;;;;829:12427:21;1586:3;;1517:21;;3691:25:14;3674:42;;;3744:13;3727:30;;829:12427:21;;4304:80:14;829:12427:21;4304:80:14;;2079:95;;;;829:12427:21;2079:95:14;;;829:12427:21;2079:95:14;;;3744:13;829:12427:21;2079:95:14;;;4378:4;3727:30;2079:95;;829:12427:21;3727:30:14;4304:80;;;;;:::i;:::-;1586:3:21;4294:91:14;;829:12427:21;3767:48:14;4378:4;2079:95;3825:27;1517:21:21;3073:1;1586:3;;;3586:4;1586:3;;-1:-1:-1;;1586:3:21;;;;;;-1:-1:-1;;;;;829:12427:21;;5304:23;;1586:3;;-1:-1:-1;;;;;829:12427:21;;5361:23;;1586:3;;5408:23;1586:3;;-1:-1:-1;;;;;;1586:3:21;;;;;;;;;5442:21;1586:3;;;;;;;;;;;;;-1:-1:-1;;;;;1586:3:21;;;;5474:26;1586:3;1517:21;1586:3;;;;;;;;;;829:12427;1586:3;;;;;829:12427;1586:3;;;;;;829:12427;1586:3;829:12427;1586:3;;;829:12427;;;1586:3;;;-1:-1:-1;1586:3:21;;;;;;;1517:21;1586:3;;;;;;;;;;;5474:26;1586:3;;5574:7;1352:1;1586:3;5620:8;1352:1;1586:3;5711:8;829:12427;1352:1;-1:-1:-1;1352:1:21;1586:3;;;1517:21;1352:1;;;1586:3;829:12427;;;;;;;;;;;;;;3727:30:14;829:12427:21;;;;;2079:95:14;829:12427:21;;;;;3628:36:14;829:12427:21;;;;;3674:42:14;829:12427:21;;;;;3493:53:14;829:12427:21;;;;;3556:62:14;829:12427:21;;;;;;1586:3;;;;-1:-1:-1;1586:3:21;;;;;829:12427;;1586:3;;;5474:26;-1:-1:-1;1586:3:21;829:12427;-1:-1:-1;1586:3:21;;-1:-1:-1;1586:3:21;;;;;;;;1517:21;1586:3;;;;;;;;;;;5474:26;1586:3;;;;;;;;;;;;;;;;;;;;;;;;;;829:12427;1517:21;1586:3;;;;;;;;;;;;;;;;5474:26;-1:-1:-1;1586:3:21;;829:12427;1586:3;;;;;;;829:12427;1586:3;;;;;829:12427;1586:3;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;1517:21;1586:3;;;;;;-1:-1:-1;1586:3:21;;;;;829:12427;;;-1:-1:-1;1586:3:21;;;;;-1:-1:-1;1586:3:21;;;;;;;;;829:12427;;;-1:-1:-1;829:12427:21;;;;;-1:-1:-1;829:12427:21;1586:3;829:12427;;-1:-1:-1;;;1586:3:21;;829:12427;1586:3;;;;3601:16:14;1586:3:21;;;;-1:-1:-1;;;1586:3:21;;;;;;;;829:12427;;-1:-1:-1;;;1586:3:21;;829:12427;1586:3;;;;;;;;;-1:-1:-1;;;1586:3:21;;;;;;;1269:95:0;829:12427:21;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;829:12427:21;;;1322:31:0;1586:3:21;;;;-1:-1:-1;1586:3:21;;;;;1517:21;-1:-1:-1;1586:3:21;;;-1:-1:-1;;;;;;;;;;;;;1586:3:21;;;-1:-1:-1;;1586:3:21;;;;;;1517:21;829:12427;;;;;1586:3;;;;;;;;;;;;1517:21;1586:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:12427;1586:3;;;;1517:21;1586:3;;;;;;;;;;;1517:21;-1:-1:-1;1586:3:21;;;-1:-1:-1;;;;;;;;;;;;829:12427:21;1586:3;;;;;;;829:12427;1586:3;;;;;;829:12427;1586:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;-1:-1:-1;1517:21:21;1586:3;;;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;-1:-1:-1;1586:3:21;;;-1:-1:-1;;;;;;;;;;;;;1586:3:21;;;-1:-1:-1;;1586:3:21;;;;;;1517:21;829:12427;;;;;1586:3;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:12427;1586:3;;;;1517:21;1586:3;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;-1:-1:-1;;;;;;;;;;;;829:12427:21;1586:3;;;;;;829:12427;1586:3;;;;;;;;;;;829:12427;1586:3;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;-1:-1:-1;1517:21:21;1586:3;;;;-1:-1:-1;1586:3:21;;;;;;;;;;829:12427;-1:-1:-1;829:12427:21;;;;;;;;;-1:-1:-1;;;;;829:12427:21;;;;;;;:::o;:::-;2079:95:14;829:12427:21;;;;;-1:-1:-1;;;;;829:12427:21;;;;;;;:::o;:::-;;;;;-1:-1:-1;;829:12427:21;;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;829:12427:21;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;829:12427:21;;;;:::o;:::-;;;;;;;;;;;;;2887:340:10;1586:3:21;;3032:2:10;;3010:24;;;3032:2;;;1586:3:21;1854:2:10;1586:3:21;;1840:16:10;1836:72;;1586:3:21;;;829:12427;;2079:95:14;829:12427:21;;;;;;1949:36:10;;3050:27;:::o;829:12427:21:-;1586:3;;;829:12427;;;;1586:3;829:12427;1949:36:10;3050:27;:::o;1836:72::-;1586:3:21;829:12427;;;;;1879:18:10;;;;;;;;;;;;829:12427:21;1586:3;;829:12427;;;;;;;1586:3;;;;829:12427;;;:::i;:::-;1854:2:10;829:12427:21;-1:-1:-1;;829:12427:21;;;1879:18:10;;;;3006:215;829:12427:21;-1:-1:-1;;;;;1586:3:21;;;;3532:13:14;1586:3:21;;;;;;;;;;;;;;3006:215:10;1586:3:21;;;;;;;;;;;3006:215:10;1586:3:21;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;3532:13:14;1586:3:21;1390:66:10;3168:42;:::o;1586:3:21:-;;;;-1:-1:-1;1586:3:21;;;;;829:12427;;;;;1586:3;;3532:13:14;-1:-1:-1;1586:3:21;;-1:-1:-1;1586:3:21;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;;;;;3532:13:14;1586:3:21;1390:66:10;3168:42;:::o;1586:3:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;3532:13:14;-1:-1:-1;1586:3:21;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;2887:340:10;1586:3:21;;3032:2:10;;3010:24;;;3032:2;;;1586:3:21;1854:2:10;1586:3:21;;1840:16:10;1836:72;;1586:3:21;;;829:12427;;2079:95:14;829:12427:21;;;;;;1949:36:10;;3050:27;:::o;3006:215::-;829:12427:21;-1:-1:-1;;;;;1586:3:21;;;;3601:16:14;1586:3:21;;;;;;;;;;;;;;3006:215:10;1586:3:21;;;;;;;;;;;3006:215:10;1586:3:21;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;3601:16:14;1586:3:21;1390:66:10;3168:42;:::o;1586:3:21:-;;;;-1:-1:-1;1586:3:21;;;;;829:12427;;;;;1586:3;;3601:16:14;-1:-1:-1;1586:3:21;;-1:-1:-1;1586:3:21;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;;;;;3601:16:14;1586:3:21;1390:66:10;3168:42;:::o;1586:3:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;3601:16:14;-1:-1:-1;1586:3:21;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1586:3:21;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":6997,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_23387":{"entryPoint":7019,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":7041,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_available_length_bytes":{"entryPoint":7274,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":7110,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_uint256t_uint256":{"entryPoint":6903,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint8":{"entryPoint":7094,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":6960,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7246,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":7987,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":6925,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7329,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":7844,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":7212,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_35977":{"entryPoint":7156,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_35983":{"entryPoint":7184,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1199,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":8159,"id":1505,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":8056,"id":84,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":8451,"id":3802,"parameterSlots":0,"returnSlots":1},"fun_isActive":{"entryPoint":8000,"id":7809,"parameterSlots":1,"returnSlots":1},"fun_requireOwned":{"entryPoint":8100,"id":1265,"parameterSlots":1,"returnSlots":1},"fun_throwError":{"entryPoint":8810,"id":3678,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":9203,"id":1773,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_23377":{"entryPoint":8943,"id":1773,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":7387,"id":626,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":8750,"id":3405,"parameterSlots":2,"returnSlots":3},"fun_tryRecover_3593":{"entryPoint":9395,"id":3593,"parameterSlots":4,"returnSlots":3},"read_from_calldatat_address":{"entryPoint":7947,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_calldatat_address_23361":{"entryPoint":7925,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_calldatat_uint16":{"entryPoint":7970,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_calldatat_uint8":{"entryPoint":7892,"id":null,"parameterSlots":0,"returnSlots":1},"read_from_calldatat_uint8_23367":{"entryPoint":7908,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{"3700":[{"length":32,"start":8508}],"3702":[{"length":32,"start":8712}],"3704":[{"length":32,"start":8454}],"3706":[{"length":32,"start":8587}],"3708":[{"length":32,"start":8625}],"3711":[{"length":32,"start":2427}],"3714":[{"length":32,"start":2468}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714611a8c5750806305fefda714611a2557806306fdde031461197a578063081812fc1461193c578063095ea7b31461184b5780630fad0f511461182857806317c95709146117fc578063188a6013146117e0578063238ac933146117b757806323b872dd146117a0578063322b1cc51461176c5780633ccfd60b146116f857806342842e0e146116ca578063443403251461169657806361a4422b1461166557806361d027b31461163c5780636352211e1461160c5780636c19e7831461159457806370a082311461153b578063715018a6146114de578063750766ac1461136c578063773c02d41461133257806377d07c6414610a5c57806384b0196e146109625780638da5cb5b14610939578063959510a61461091d57806395d89b411461084e5780639f8a13d714610821578063a22cb46514610760578063a40b3998146106b5578063a4cf9cc114610686578063b88d4fde14610618578063c87b56dd1461034d578063df30e54b14610314578063e985e9c5146102be578063f0f44260146102445763f2fde38b146101b657600080fd5b3461023f57602036600319011261023f576101cf611b55565b6101d7611f78565b6001600160a01b0390811690811561022657600654826001600160601b0360a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461023f57602036600319011261023f5761025d611b55565b610265611f78565b6001600160a01b0316801561028c576001600160601b0360a01b600f541617600f55600080f35b60405162461bcd60e51b815260206004820152600a602482015269074726561737572793d360b41b6044820152606490fd5b3461023f57604036600319011261023f576102d7611b55565b6102df611b6b565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b3461023f57602036600319011261023f5760043580151580910361023f5761033a611f78565b60ff801960125416911617601255600080f35b3461023f5760208060031936011261023f5760043560008181526002835260409020549091906001600160a01b0316156105d457600091807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000081818110156105c6575b50506d04ee2d6d415b85acef8100000000808310156105b8575b50662386f26fc10000808310156105a9575b506305f5e1008083101561059a575b506127108083101561058b575b50606482101561057b575b600a80921015610571575b600193600181019261043361041d85611c4e565b9461042b6040519687611c2c565b808652611c4e565b9286602187870194601f19809701368737870101905b610542575b5050506040519485916000916011549061046782611ca1565b918860018216918260001461051e5750506001146104b9575b505061049482916104a19651938491611b0d565b0103908101845283611c2c565b6104b5604051928284938452830190611b30565b0390f35b879692935060116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68906000915b838310610506575050506104a19561049491850101929195610480565b8054838c018a015289988b97509092019181016104e9565b60ff1916878201528315159093028601909201935061049491506104a19050610480565b600019019082906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304908782610449575061044e565b9260010192610409565b92906064600291049101926103fe565b600491949204910192846103f3565b600891949204910192846103e6565b601091949204910192846103d7565b8391949204910192846103c5565b6040955004915084806103ab565b6064906040519062461bcd60e51b82526004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e006044820152fd5b3461023f57608036600319011261023f57610631611b55565b610639611b6b565b906044356064359267ffffffffffffffff841161023f573660238501121561023f57610672610684943690602481600401359101611c6a565b9261067e838383611cdb565b33611fdf565b005b3461023f57602036600319011261023f57600435600052600e602052602060ff60406000205416604051908152f35b3461023f576106c336611af7565b906106cc611f78565b80151580610757575b1561072a57600a6020527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e35560016000527fbbc70db1b6c7afd11e79c0fb0051300458f1a3acb8ee9789d9b6b26c61ad9bc755005b60405162461bcd60e51b815260206004820152600560248201526406475723d360dc1b6044820152606490fd5b508115156106d5565b3461023f57604036600319011261023f57610779611b55565b6024359081151580920361023f5760ff6012541661080f576001600160a01b03169081156107f657336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b604051630b61174360e31b815260048101839052602490fd5b60405163a4420a9560e01b8152600490fd5b3461023f57602036600319011261023f57602061084461083f611b55565b611f40565b6040519015158152f35b3461023f57600036600319011261023f5760405160006001826001549261087484611ca1565b92838352602094856001821691826000146108fd5750506001146108a0575b506104a192500383611c2c565b84915060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906000915b8583106108e55750506104a1935082010185610893565b805483890185015287945086939092019181016108ce565b60ff1916858201526104a195151560051b85010192508791506108939050565b3461023f57600036600319011261023f57602060405160018152f35b3461023f57600036600319011261023f576006546040516001600160a01b039091168152602090f35b3461023f57600036600319011261023f576109fd61099f7f00000000000000000000000000000000000000000000000000000000000000006122ef565b6109c87f00000000000000000000000000000000000000000000000000000000000000006123f3565b604051906109d582611bf4565b60008252610a0b602091604051958695600f60f81b875260e0602088015260e0870190611b30565b908582036040870152611b30565b466060850152306080850152600060a085015283810360c08501526020808451928381520193019160005b828110610a4557505050500390f35b835185528695509381019392810192600101610a36565b61016036600319011261023f57610a71611bb6565b60243567ffffffffffffffff811161023f57610a91903690600401611bc6565b61012036604319011261023f5760ff8316158015611325575b156112f15760ff831660ff610abd611ed4565b16036112b45760e43542116112855760c435600052601360205260ff6040600020541661125357610aec611ef5565b336001600160a01b039091160361121c574661010435036111e457610b0f611f0b565b306001600160a01b03909116036111ab57610b28611ef5565b90610b31611ed4565b610b39611f22565b61ffff610b44611f0b565b9160ff610b4f611ee4565b94604051977f4bd895b228a83561329234c8900605abe5b5f2ac79331cc779a522952146d9c160208a015260443560408a015260018060a01b031660608901521660808701521660a085015260c43560c085015260e43560e08501526101043561010085015260018060a01b031661012084015260ff610140911681840152825261016082019180831067ffffffffffffffff84111761119557610c38936042610c2992610c2f9560405260208151910120610c09612103565b906040519161190160f01b83526002830152602282015220923691611c6a565b9061222e565b9092919261226a565b6010546001600160a01b039081169116036111605760c43560005260136020526040600020600160ff1982541617905560ff8116600052600960205260406000205490811561113157612710918261ffff610c91611f22565b16116111005761ffff610ca2611f22565b168082029082820403611001578184820481031161100157838104820334036110c95733600052600c60205260406000205480156000146110175750600b549360001985146110015760018501600b55604051610cfe81611bf4565b600081523315610fe85760ff60125416610fa9575b6000868152600260205260409020546001600160a01b031680151590879082610f72575b3360005260036020526040600020600181540190558160005260026020526040600020336001600160601b0360a01b82541617905533907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4610f5957333b610e6a575b5060ff92610daa611ee4565b86600052600e60205284604060002091168519825416179055838516600052600a602052610ddd60406000205442611f33565b9186600052600d6020528260406000205533600052600c60205286604060002055610e06611f22565b9361ffff610e12611ee4565b9587604051991689528460208a0152166040880152049003606085015260808401521660a082015260443560c08201527f506b11fd56d29ee1bf2fb0630701f77afa8cb127509b1421d090f00b3487ffc560e03392a3005b60405160208180610ea4630a85bd0160e11b95868352336004840152600060248401528b6044840152608060648401526084830190611b30565b03816000335af160009181610f14575b50610ee657610ec1611ea4565b80519081610ee157604051633250574960e11b8152336004820152602490fd5b602001fd5b6001600160e01b03191603610efc5760ff610d9e565b604051633250574960e11b8152336004820152602490fd5b9091506020813d602011610f51575b81610f3060209383611c2c565b8101031261023f57516001600160e01b03198116810361023f579088610eb4565b3d9150610f23565b6040516339e3563760e11b815260006004820152602490fd5b600082815260046020526040902080546001600160a01b031916905580600052600360205260406000206000198154019055610d37565b6000868152600260205260409020546001600160a01b0316151580610fe0575b15610d135760405163a4420a9560e01b8152600490fd5b506001610fc9565b604051633250574960e11b815260006004820152602490fd5b634e487b7160e01b600052601160045260246000fd5b9384600093929352600d6020526040600020544281116000146110bf57611051905b60ff8616600052600a60205260406000205490611f33565b9285600052600d6020528360406000205561ffff61106d611f22565b60ff604051971687528460208801521660408601520490036060830152608082015260443560a08201527f40f4d86e270c4ffc31dae8743e42da44a3a1ffd3759c7eb81ec77b8e0205c84460c03392a3005b5061105142611039565b60405162461bcd60e51b815260206004820152600f60248201526e77726f6e67206d73672e76616c756560881b6044820152606490fd5b60405162461bcd60e51b815260206004820152600960248201526806270733e31303030360bc1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526007602482015266070726963653d360cc1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c626164207369676e617475726560981b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b81526020600482015260116024820152700c6dedce8e4c2c6e840dad2e6dac2e8c6d607b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f0c6d0c2d2dc92c840dad2e6dac2e8c6d60831b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e0eec2d8d8cae840dad2e6dac2e8c6d608b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a6024820152691b9bdb98d9481d5cd95960b21b6044820152606490fd5b60405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260156024820152740e0c2f2d8dec2c85ce0d8c2dc40dad2e6dac2e8c6d605b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b1c1b185b881a5b9d985b1a5960a21b6044820152606490fd5b50600160ff841614610aaa565b3461023f57602036600319011261023f576001600160a01b03611353611b55565b16600052600c6020526020604060002054604051908152f35b3461023f5760208060031936011261023f5767ffffffffffffffff60043581811161023f5761139f903690600401611bc6565b916113a8611f78565b8211611195576113b9601154611ca1565b601f811161147e575b50600092601f831160011461140157509181926000926113f6575b5050600019600383901b1c191660019190911b17601155005b0135905082806113dd565b601f198316937f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6892916000905b868210611466575050836001951061144c575b505050811b01601155005b0135600019600384901b60f8161c19169055828080611441565b8060018496829495870135815501950192019061142e565b7f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68601f840160051c810191602085106114d4575b601f0160051c01905b8181106114c857506113c2565b600081556001016114bb565b90915081906114b2565b3461023f57600036600319011261023f576114f7611f78565b600680546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461023f57602036600319011261023f576001600160a01b0361155c611b55565b16801561157b5760005260036020526020604060002054604051908152f35b6040516322718ad960e21b815260006004820152602490fd5b3461023f57602036600319011261023f576115ad611b55565b6115b5611f78565b6001600160a01b031680156115dc576001600160601b0360a01b6010541617601055600080f35b60405162461bcd60e51b815260206004820152600860248201526707369676e65723d360c41b6044820152606490fd5b3461023f57602036600319011261023f57602061162a600435611fa4565b6040516001600160a01b039091168152f35b3461023f57600036600319011261023f57600f546040516001600160a01b039091168152602090f35b3461023f57602036600319011261023f576004356000526013602052602060ff604060002054166040519015158152f35b3461023f57602036600319011261023f5760ff6116b1611bb6565b16600052600a6020526020604060002054604051908152f35b3461023f576106846116db36611b81565b90604051926116e984611bf4565b6000845261067e838383611cdb565b3461023f57600036600319011261023f57611711611f78565b600080808060018060a01b03600f541647905af161172d611ea4565b501561173557005b60405162461bcd60e51b815260206004820152600f60248201526e1dda5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b3461023f57602036600319011261023f5760ff611787611bb6565b1660005260096020526020604060002054604051908152f35b3461023f576106846117b136611b81565b91611cdb565b3461023f57600036600319011261023f576010546040516001600160a01b039091168152602090f35b3461023f57600036600319011261023f57602060405160008152f35b3461023f57602036600319011261023f57600435600052600d6020526020604060002054604051908152f35b3461023f57600036600319011261023f57602060ff601254166040519015158152f35b3461023f57604036600319011261023f57611864611b55565b60243560ff6012541661080f5761187a81611fa4565b33151580611929575b806118fc575b6118e4576001600160a01b039283169282918491167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4600090815260046020526040902080546001600160a01b0319169091179055005b60405163a9fbf51f60e01b8152336004820152602490fd5b5060018060a01b038116600052600560205260406000203360005260205260ff6040600020541615611889565b506001600160a01b038116331415611883565b3461023f57602036600319011261023f5760043561195981611fa4565b506000526004602052602060018060a01b0360406000205416604051908152f35b3461023f57600036600319011261023f5760405160008054908261199d83611ca1565b91828252602093600190856001821691826000146108fd5750506001146119cb57506104a192500383611c2c565b6000808052859250907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b858310611a0d5750506104a1935082010185610893565b805483890185015287945086939092019181016119f6565b3461023f57611a3336611af7565b90611a3c611f78565b60096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b5560016000527f92e85d02570a8092d09a6e3a57665bc3815a2699a4074001bf1ccabf660f5a3655005b3461023f57602036600319011261023f576004359063ffffffff60e01b821680920361023f576020916380ac58cd60e01b8114908115611ae6575b8115611ad5575b5015158152f35b6301ffc9a760e01b14905083611ace565b635b5e139f60e01b81149150611ac7565b604090600319011261023f576004359060243590565b60005b838110611b205750506000910152565b8181015183820152602001611b10565b90602091611b4981518092818552858086019101611b0d565b601f01601f1916010190565b600435906001600160a01b038216820361023f57565b602435906001600160a01b038216820361023f57565b606090600319011261023f576001600160a01b0390600435828116810361023f5791602435908116810361023f579060443590565b6004359060ff8216820361023f57565b9181601f8401121561023f5782359167ffffffffffffffff831161023f576020838186019501011161023f57565b6020810190811067ffffffffffffffff82111761119557604052565b6040810190811067ffffffffffffffff82111761119557604052565b90601f8019910116810190811067ffffffffffffffff82111761119557604052565b67ffffffffffffffff811161119557601f01601f191660200190565b929192611c7682611c4e565b91611c846040519384611c2c565b82948184528183011161023f578281602093846000960137010152565b90600182811c92168015611cd1575b6020831014611cbb57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cb0565b6001600160a01b039182169290918315610fe85760ff60125416611e6c575b600092828452826020956002875260409684888820541696879133151580611dd6575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284611da3575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303611d825750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055611d49565b91939450915080611e2b575b15611df257859291879138611d1d565b878688611e0f576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015611e50575b80611de25750858252600481523385898420541614611de2565b5086825260058152878220338352815260ff8883205416611e36565b8160005260026020528060406000205416151580611e9c575b15611cfa5760405163a4420a9560e01b8152600490fd5b506001611e85565b3d15611ecf573d90611eb582611c4e565b91611ec36040519384611c2c565b82523d6000602084013e565b606090565b60843560ff8116810361023f5790565b6101443560ff8116810361023f5790565b6064356001600160a01b038116810361023f5790565b610124356001600160a01b038116810361023f5790565b60a43561ffff8116810361023f5790565b9190820180921161100157565b6001600160a01b03166000908152600c60205260409020548015611f7257600052600d60205260406000205442111590565b50600090565b6006546001600160a01b03163303611f8c57565b60405163118cdaa760e01b8152336004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115611fc7575090565b60249060405190637e27328960e01b82526004820152fd5b9293823b611fef575b5050505050565b6120339060018060a01b038094169560405194859481630a85bd0160e11b988988521660048701521660248501526044840152608060648401526084830190611b30565b03906020816000938185885af1908290826120b3575b50506120815782612058611ea4565b805191908261207a57604051633250574960e11b815260048101839052602490fd5b6020915001fd5b6001600160e01b0319160361209b57503880808080611fe8565b60249060405190633250574960e11b82526004820152fd5b909192506020813d6020116120fb575b816120d060209383611c2c565b810103126120f75751906001600160e01b0319821682036120f45750903880612049565b80fd5b5080fd5b3d91506120c3565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480612205575b1561215e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176111955760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612135565b815191906041830361225f5761225892506020820151906060604084015193015160001a906124b3565b9192909190565b505060009160029190565b60048110156122d9578061227c575050565b600181036122965760405163f645eedf60e01b8152600490fd5b600281036122b75760405163fce698f760e01b815260048101839052602490fd5b6003146122c15750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b60ff811461232d5760ff811690601f821161231b576040519161231183611c10565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b5060405160075481600061234083611ca1565b808352926020906001908181169081156123cf575060011461236e575b505061236b92500382611c2c565b90565b91509260076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688936000925b8284106123b7575061236b945050508101602001388061235d565b8554878501830152948501948694509281019261239c565b9150506020925061236b94915060ff191682840152151560051b820101388061235d565b60ff81146124155760ff811690601f821161231b576040519161231183611c10565b5060405160085481600061242883611ca1565b808352926020906001908181169081156123cf575060011461245257505061236b92500382611c2c565b91509260086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3936000925b82841061249b575061236b945050508101602001388061235d565b85548785018301529485019486945092810192612480565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161253757926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa1561252b5780516001600160a01b0381161561252257918190565b50809160019190565b604051903d90823e3d90fd5b5050506000916003919056fea2646970667358221220e52c4142d7f4b59322e4b4be2a21ab670a5ffac75242485ceb99a81bf738f68e64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1A8C JUMPI POP DUP1 PUSH4 0x5FEFDA7 EQ PUSH2 0x1A25 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x197A JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x193C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x184B JUMPI DUP1 PUSH4 0xFAD0F51 EQ PUSH2 0x1828 JUMPI DUP1 PUSH4 0x17C95709 EQ PUSH2 0x17FC JUMPI DUP1 PUSH4 0x188A6013 EQ PUSH2 0x17E0 JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x17B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17A0 JUMPI DUP1 PUSH4 0x322B1CC5 EQ PUSH2 0x176C JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x16F8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x16CA JUMPI DUP1 PUSH4 0x44340325 EQ PUSH2 0x1696 JUMPI DUP1 PUSH4 0x61A4422B EQ PUSH2 0x1665 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x163C JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x160C JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x1594 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x153B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14DE JUMPI DUP1 PUSH4 0x750766AC EQ PUSH2 0x136C JUMPI DUP1 PUSH4 0x773C02D4 EQ PUSH2 0x1332 JUMPI DUP1 PUSH4 0x77D07C64 EQ PUSH2 0xA5C JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x962 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x939 JUMPI DUP1 PUSH4 0x959510A6 EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0x9F8A13D7 EQ PUSH2 0x821 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0xA40B3998 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0xA4CF9CC1 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xDF30E54B EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x244 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x1CF PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x1D7 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x226 JUMPI PUSH1 0x6 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x6 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x25D PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x265 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x74726561737572793D3 PUSH1 0xB4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x2D7 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x1B6B JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x23F JUMPI PUSH2 0x33A PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0x12 SLOAD AND SWAP2 AND OR PUSH1 0x12 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 SWAP2 DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP2 DUP2 DUP2 LT ISZERO PUSH2 0x5C6 JUMPI JUMPDEST POP POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x5B8 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x5A9 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x59A JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x58B JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x57B JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x571 JUMPI JUMPDEST PUSH1 0x1 SWAP4 PUSH1 0x1 DUP2 ADD SWAP3 PUSH2 0x433 PUSH2 0x41D DUP6 PUSH2 0x1C4E JUMP JUMPDEST SWAP5 PUSH2 0x42B PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x1C2C JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH2 0x1C4E JUMP JUMPDEST SWAP3 DUP7 PUSH1 0x21 DUP8 DUP8 ADD SWAP5 PUSH1 0x1F NOT DUP1 SWAP8 ADD CALLDATASIZE DUP8 CALLDATACOPY DUP8 ADD ADD SWAP1 JUMPDEST PUSH2 0x542 JUMPI JUMPDEST POP POP POP PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x11 SLOAD SWAP1 PUSH2 0x467 DUP3 PUSH2 0x1CA1 JUMP JUMPDEST SWAP2 DUP9 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x51E JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4B9 JUMPI JUMPDEST POP POP PUSH2 0x494 DUP3 SWAP2 PUSH2 0x4A1 SWAP7 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x1B0D JUMP JUMPDEST ADD SUB SWAP1 DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x1C2C JUMP JUMPDEST PUSH2 0x4B5 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP8 SWAP7 SWAP3 SWAP4 POP PUSH1 0x11 PUSH1 0x0 MSTORE PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x506 JUMPI POP POP POP PUSH2 0x4A1 SWAP6 PUSH2 0x494 SWAP2 DUP6 ADD ADD SWAP3 SWAP2 SWAP6 PUSH2 0x480 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP13 ADD DUP11 ADD MSTORE DUP10 SWAP9 DUP12 SWAP8 POP SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE DUP4 ISZERO ISZERO SWAP1 SWAP4 MUL DUP7 ADD SWAP1 SWAP3 ADD SWAP4 POP PUSH2 0x494 SWAP2 POP PUSH2 0x4A1 SWAP1 POP PUSH2 0x480 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP3 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP1 DUP8 DUP3 PUSH2 0x449 JUMPI POP PUSH2 0x44E JUMP JUMPDEST SWAP3 PUSH1 0x1 ADD SWAP3 PUSH2 0x409 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP3 PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3D7 JUMP JUMPDEST DUP4 SWAP2 SWAP5 SWAP3 DIV SWAP2 ADD SWAP3 DUP5 PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 SWAP6 POP DIV SWAP2 POP DUP5 DUP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x631 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x639 PUSH2 0x1B6B JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x23F JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x23F JUMPI PUSH2 0x672 PUSH2 0x684 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x1C6A JUMP JUMPDEST SWAP3 PUSH2 0x67E DUP4 DUP4 DUP4 PUSH2 0x1CDB JUMP JUMPDEST CALLER PUSH2 0x1FDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x6C3 CALLDATASIZE PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 PUSH2 0x6CC PUSH2 0x1F78 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP1 PUSH2 0x757 JUMPI JUMPDEST ISZERO PUSH2 0x72A JUMPI PUSH1 0xA PUSH1 0x20 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xBBC70DB1B6C7AFD11E79C0FB0051300458F1A3ACB8EE9789D9B6B26C61AD9BC7 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x6475723D3 PUSH1 0xDC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x6D5 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x779 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x23F JUMPI PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0x80F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7F6 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA4420A95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0x844 PUSH2 0x83F PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x1 SLOAD SWAP3 PUSH2 0x874 DUP5 PUSH2 0x1CA1 JUMP JUMPDEST SWAP3 DUP4 DUP4 MSTORE PUSH1 0x20 SWAP5 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x8FD JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x8A0 JUMPI JUMPDEST POP PUSH2 0x4A1 SWAP3 POP SUB DUP4 PUSH2 0x1C2C JUMP JUMPDEST DUP5 SWAP2 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x8E5 JUMPI POP POP PUSH2 0x4A1 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP3 ADD MSTORE PUSH2 0x4A1 SWAP6 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 SWAP2 POP PUSH2 0x893 SWAP1 POP JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x9FD PUSH2 0x99F PUSH32 0x0 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0x9C8 PUSH32 0x0 PUSH2 0x23F3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9D5 DUP3 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE PUSH2 0xA0B PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0xF PUSH1 0xF8 SHL DUP8 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1B30 JUMP JUMPDEST CHAINID PUSH1 0x60 DUP6 ADD MSTORE ADDRESS PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x20 DUP1 DUP5 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xA45 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0xA71 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x23F JUMPI PUSH2 0xA91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC6 JUMP JUMPDEST PUSH2 0x120 CALLDATASIZE PUSH1 0x43 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xFF DUP4 AND ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI JUMPDEST ISZERO PUSH2 0x12F1 JUMPI PUSH1 0xFF DUP4 AND PUSH1 0xFF PUSH2 0xABD PUSH2 0x1ED4 JUMP JUMPDEST AND SUB PUSH2 0x12B4 JUMPI PUSH1 0xE4 CALLDATALOAD TIMESTAMP GT PUSH2 0x1285 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1253 JUMPI PUSH2 0xAEC PUSH2 0x1EF5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x121C JUMPI CHAINID PUSH2 0x104 CALLDATALOAD SUB PUSH2 0x11E4 JUMPI PUSH2 0xB0F PUSH2 0x1F0B JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x11AB JUMPI PUSH2 0xB28 PUSH2 0x1EF5 JUMP JUMPDEST SWAP1 PUSH2 0xB31 PUSH2 0x1ED4 JUMP JUMPDEST PUSH2 0xB39 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0xFFFF PUSH2 0xB44 PUSH2 0x1F0B JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH2 0xB4F PUSH2 0x1EE4 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP8 PUSH32 0x4BD895B228A83561329234C8900605ABE5B5F2AC79331CC779A522952146D9C1 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP10 ADD MSTORE AND PUSH1 0x80 DUP8 ADD MSTORE AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x140 SWAP2 AND DUP2 DUP5 ADD MSTORE DUP3 MSTORE PUSH2 0x160 DUP3 ADD SWAP2 DUP1 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x1195 JUMPI PUSH2 0xC38 SWAP4 PUSH1 0x42 PUSH2 0xC29 SWAP3 PUSH2 0xC2F SWAP6 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xC09 PUSH2 0x2103 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x1C6A JUMP JUMPDEST SWAP1 PUSH2 0x222E JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x226A JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND SUB PUSH2 0x1160 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xFF DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1131 JUMPI PUSH2 0x2710 SWAP2 DUP3 PUSH2 0xFFFF PUSH2 0xC91 PUSH2 0x1F22 JUMP JUMPDEST AND GT PUSH2 0x1100 JUMPI PUSH2 0xFFFF PUSH2 0xCA2 PUSH2 0x1F22 JUMP JUMPDEST AND DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV SUB PUSH2 0x1001 JUMPI DUP2 DUP5 DUP3 DIV DUP2 SUB GT PUSH2 0x1001 JUMPI DUP4 DUP2 DIV DUP3 SUB CALLVALUE SUB PUSH2 0x10C9 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH1 0x0 EQ PUSH2 0x1017 JUMPI POP PUSH1 0xB SLOAD SWAP4 PUSH1 0x0 NOT DUP6 EQ PUSH2 0x1001 JUMPI PUSH1 0x1 DUP6 ADD PUSH1 0xB SSTORE PUSH1 0x40 MLOAD PUSH2 0xCFE DUP2 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE CALLER ISZERO PUSH2 0xFE8 JUMPI PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0xFA9 JUMPI JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP8 SWAP1 DUP3 PUSH2 0xF72 JUMPI JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH2 0xF59 JUMPI CALLER EXTCODESIZE PUSH2 0xE6A JUMPI JUMPDEST POP PUSH1 0xFF SWAP3 PUSH2 0xDAA PUSH2 0x1EE4 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND DUP6 NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 DUP6 AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0xDDD PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1F33 JUMP JUMPDEST SWAP2 DUP7 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE DUP7 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xE06 PUSH2 0x1F22 JUMP JUMPDEST SWAP4 PUSH2 0xFFFF PUSH2 0xE12 PUSH2 0x1EE4 JUMP JUMPDEST SWAP6 DUP8 PUSH1 0x40 MLOAD SWAP10 AND DUP10 MSTORE DUP5 PUSH1 0x20 DUP11 ADD MSTORE AND PUSH1 0x40 DUP9 ADD MSTORE DIV SWAP1 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x506B11FD56D29EE1BF2FB0630701F77AFA8CB127509B1421D090F00B3487FFC5 PUSH1 0xE0 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP1 PUSH2 0xEA4 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 DUP7 DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x24 DUP5 ADD MSTORE DUP12 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 CALLER GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xF14 JUMPI JUMPDEST POP PUSH2 0xEE6 JUMPI PUSH2 0xEC1 PUSH2 0x1EA4 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0xEFC JUMPI PUSH1 0xFF PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF51 JUMPI JUMPDEST DUP2 PUSH2 0xF30 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C2C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x23F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 DUP9 PUSH2 0xEB4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0xFE0 JUMPI JUMPDEST ISZERO PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA4420A95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 DUP5 PUSH1 0x0 SWAP4 SWAP3 SWAP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP DUP2 GT PUSH1 0x0 EQ PUSH2 0x10BF JUMPI PUSH2 0x1051 SWAP1 JUMPDEST PUSH1 0xFF DUP7 AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH2 0x1F33 JUMP JUMPDEST SWAP3 DUP6 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0xFFFF PUSH2 0x106D PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD SWAP8 AND DUP8 MSTORE DUP5 PUSH1 0x20 DUP9 ADD MSTORE AND PUSH1 0x40 DUP7 ADD MSTORE DIV SWAP1 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH32 0x40F4D86E270C4FFC31DAE8743E42DA44A3A1FFD3759C7EB81EC77B8E0205C844 PUSH1 0xC0 CALLER SWAP3 LOG3 STOP JUMPDEST POP PUSH2 0x1051 TIMESTAMP PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x77726F6E67206D73672E76616C7565 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6270733E313030303 PUSH1 0xBC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x70726963653D3 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x626164207369676E6174757265 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0xC6DEDCE8E4C2C6E840DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xC6D0C2D2DC92C840DAD2E6DAC2E8C6D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0xEEC2D8D8CAE840DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1B9BDB98D9481D5CD959 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x195E1C1A5C9959 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0xE0C2F2D8DEC2C85CE0D8C2DC40DAD2E6DAC2E8C6D PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1C1B185B881A5B9D985B1A59 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP5 AND EQ PUSH2 0xAAA JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1353 PUSH2 0x1B55 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x23F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x23F JUMPI PUSH2 0x139F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1BC6 JUMP JUMPDEST SWAP2 PUSH2 0x13A8 PUSH2 0x1F78 JUMP JUMPDEST DUP3 GT PUSH2 0x1195 JUMPI PUSH2 0x13B9 PUSH1 0x11 SLOAD PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x147E JUMPI JUMPDEST POP PUSH1 0x0 SWAP3 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1401 JUMPI POP SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x13F6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x11 SSTORE STOP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP3 DUP1 PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 SWAP3 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1466 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x144C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x11 SSTORE STOP JUMPDEST ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1441 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP5 SWAP7 DUP3 SWAP5 SWAP6 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH32 0x31ECC21A745E3968A04E9570E4425BC18FA8019C68028196B546D1669C200C68 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x14D4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x14C8 JUMPI POP PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x14BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x14F7 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x155C PUSH2 0x1B55 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x157B JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x15AD PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x15B5 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x15DC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x7369676E65723D3 PUSH1 0xC4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH2 0x162A PUSH1 0x4 CALLDATALOAD PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xF SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xFF PUSH2 0x16B1 PUSH2 0x1BB6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x684 PUSH2 0x16DB CALLDATASIZE PUSH2 0x1B81 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x16E9 DUP5 PUSH2 0x1BF4 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x67E DUP4 DUP4 DUP4 PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x1711 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xF SLOAD AND SELFBALANCE SWAP1 GAS CALL PUSH2 0x172D PUSH2 0x1EA4 JUMP JUMPDEST POP ISZERO PUSH2 0x1735 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1DDA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0xFF PUSH2 0x1787 PUSH2 0x1BB6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x684 PUSH2 0x17B1 CALLDATASIZE PUSH2 0x1B81 JUMP JUMPDEST SWAP2 PUSH2 0x1CDB JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH2 0x1864 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0x80F JUMPI PUSH2 0x187A DUP2 PUSH2 0x1FA4 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x1929 JUMPI JUMPDEST DUP1 PUSH2 0x18FC JUMPI JUMPDEST PUSH2 0x18E4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP3 SWAP2 DUP5 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1889 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x1883 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1959 DUP2 PUSH2 0x1FA4 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 PUSH2 0x199D DUP4 PUSH2 0x1CA1 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP1 DUP6 PUSH1 0x1 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x8FD JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x19CB JUMPI POP PUSH2 0x4A1 SWAP3 POP SUB DUP4 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE DUP6 SWAP3 POP SWAP1 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP6 DUP4 LT PUSH2 0x1A0D JUMPI POP POP PUSH2 0x4A1 SWAP4 POP DUP3 ADD ADD DUP6 PUSH2 0x893 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH2 0x19F6 JUMP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH2 0x1A33 CALLDATASIZE PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 PUSH2 0x1A3C PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SSTORE PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0x92E85D02570A8092D09A6E3A57665BC3815A2699A4074001BF1CCABF660F5A36 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x23F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x23F JUMPI PUSH1 0x20 SWAP2 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1AD5 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x1ACE JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1B20 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B10 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1B49 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1B0D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x23F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x23F JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x23F JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x23F JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x23F JUMPI JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1195 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1C76 DUP3 PUSH2 0x1C4E JUMP JUMPDEST SWAP2 PUSH2 0x1C84 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C2C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x23F JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1CD1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1CBB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xFE8 JUMPI PUSH1 0xFF PUSH1 0x12 SLOAD AND PUSH2 0x1E6C JUMPI JUMPDEST PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0x1DD6 JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0x1DA3 JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0x1D82 JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x1D49 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0x1E2B JUMPI JUMPDEST ISZERO PUSH2 0x1DF2 JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0x1D1D JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0x1E0F JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0x1E50 JUMPI JUMPDEST DUP1 PUSH2 0x1DE2 JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0x1DE2 JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0x1E36 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO DUP1 PUSH2 0x1E9C JUMPI JUMPDEST ISZERO PUSH2 0x1CFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA4420A95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH2 0x1E85 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1ECF JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1EB5 DUP3 PUSH2 0x1C4E JUMP JUMPDEST SWAP2 PUSH2 0x1EC3 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C2C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x144 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 SUB PUSH2 0x23F JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1001 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1F72 JUMPI PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1F8C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1FC7 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP3 SWAP4 DUP3 EXTCODESIZE PUSH2 0x1FEF JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2033 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP5 AND SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 DUP10 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1B30 JUMP JUMPDEST SUB SWAP1 PUSH1 0x20 DUP2 PUSH1 0x0 SWAP4 DUP2 DUP6 DUP9 GAS CALL SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x20B3 JUMPI JUMPDEST POP POP PUSH2 0x2081 JUMPI DUP3 PUSH2 0x2058 PUSH2 0x1EA4 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x207A JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x209B JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x20FB JUMPI JUMPDEST DUP2 PUSH2 0x20D0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C2C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20F7 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x20F4 JUMPI POP SWAP1 CODESIZE DUP1 PUSH2 0x2049 JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x20C3 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x2205 JUMPI JUMPDEST ISZERO PUSH2 0x215E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1195 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2135 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x225F JUMPI PUSH2 0x2258 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x24B3 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x22D9 JUMPI DUP1 PUSH2 0x227C JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2296 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x22B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x22C1 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x232D JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x231B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2311 DUP4 PUSH2 0x1C10 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x7 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2340 DUP4 PUSH2 0x1CA1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x23CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x236E JUMPI JUMPDEST POP POP PUSH2 0x236B SWAP3 POP SUB DUP3 PUSH2 0x1C2C JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x23B7 JUMPI POP PUSH2 0x236B SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x235D JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x239C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x236B SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x235D JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x2415 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x231B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x2311 DUP4 PUSH2 0x1C10 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x8 SLOAD DUP2 PUSH1 0x0 PUSH2 0x2428 DUP4 PUSH2 0x1CA1 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x23CF JUMPI POP PUSH1 0x1 EQ PUSH2 0x2452 JUMPI POP POP PUSH2 0x236B SWAP3 POP SUB DUP3 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x8 PUSH1 0x0 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x249B JUMPI POP PUSH2 0x236B SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x235D JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x2480 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2537 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x252B JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2522 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0x2C COINBASE TIMESTAMP 0xD7 DELEGATECALL 0xB5 SWAP4 0x22 0xE4 0xB4 0xBE 0x2A 0x21 0xAB PUSH8 0xA5FFAC75242485C 0xEB SWAP10 0xA8 SHL 0xF7 CODESIZE 0xF6 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"829:12427:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;829:12427:21;;;;2627:22:0;;2623:91;;3004:6;829:12427:21;;-1:-1:-1;;;;;829:12427:21;;;;;3004:6:0;829:12427:21;;3052:40:0;829:12427:21;3052:40:0;;829:12427:21;2623:91:0;829:12427:21;;-1:-1:-1;;;2672:31:0;;829:12427:21;;2672:31:0;;829:12427:21;;;2672:31:0;829:12427:21;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;829:12427:21;7952:23;;829:12427;;-1:-1:-1;;;;;829:12427:21;;8001:20;829:12427;;;8001:20;829:12427;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;3776:18:3;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;2269:192:21;829:12427;;8216:22;2269:192;;;;;8216:22;2269:192;829:12427;;;;;;;;;;;;;;;;;;;;;;5470:7:3;829:12427:21;;;;;;;;;-1:-1:-1;;;;;829:12427:21;6784:31;829:12427;;;;6649:18;29291:8:18;6649:18:21;29282:17:18;;;;29278:103;;829:12427:21;29407:8:18;;;29398:17;;;;29394:103;;829:12427:21;29523:8:18;;29514:17;;;;29510:103;;829:12427:21;29639:7:18;;29630:16;;;;29626:100;;829:12427:21;29752:7:18;;29743:16;;;;29739:100;;829:12427:21;29856:16:18;29865:7;29856:16;;;29852:100;;829:12427:21;29978:7:18;;29969:16;;;29965:66;;829:12427:21;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;1545:94:12;829:12427:21;;;;;;;;;;;;1545:94:12;;;1652:247;829:12427:21;;;1652:247:12;829:12427:21;;;;;;;;;;6636:11;829:12427;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6619:49;829:12427;;;;;;:::i;:::-;;6619:49;;;;;;;;:::i;:::-;829:12427;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6636:11;829:12427;;;;;;;;;;;;;;;6619:49;829:12427;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;-1:-1:-1;;829:12427:21;6619:49;;;829:12427;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;-1:-1:-1;6619:49:21;;-1:-1:-1;829:12427:21;;1652:247:12;-1:-1:-1;;829:12427:21;;;;-1:-1:-1;;;1706:111:12;;;;829:12427:21;1706:111:12;2269:192:21;1867:10:12;;;1652:247;1863:21;1879:5;;;29965:66:18;829:12427:21;;;29965:66:18;;;29852:100;2269:192:21;;29865:7:18;5470::3;2269:192:21;;829:12427;;29852:100:18;;;29739;829:12427:21;2269:192;;;;829:12427;;29739:100:18;;;;29626;29710:1;2269:192:21;;;;829:12427;;29626:100:18;;;;29510:103;29596:2;2269:192:21;;;;829:12427;;29510:103:18;;;;29394;2269:192:21;;;;;829:12427;;29394:103:18;;;;29278;829:12427:21;;-1:-1:-1;2269:192:21;;-1:-1:-1;29278:103:18;;;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4851:4:3;829:12427:21;;;;;;;;;;;:::i;:::-;4766:7:3;;;;;;:::i;:::-;735:10:8;4851:4:3;:::i;:::-;829:12427:21;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;3229:45;829:12427;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;7569:14:21;;;:31;;;829:12427;;;;7621:11;829:12427;;;;1409:1;829:12427;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;7569:31;7587:13;;;;7569:31;;829:12427;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;;;;;;;;;;;;;12647:9;829:12427;;12643:33;;-1:-1:-1;;;;;829:12427:21;;15418:22:3;;15414:91;;735:10:8;829:12427:21;;15514:18:3;829:12427:21;;;;;;;;;;;;;;;2269:192;;;829:12427;2269:192;;;;;829:12427;;;;;15575:41:3;829:12427:21;735:10:8;15575:41:3;;829:12427:21;15414:91:3;829:12427:21;;-1:-1:-1;;;15463:31:3;;829:12427:21;15463:31:3;;829:12427:21;;;;;15463:31:3;12643:33:21;829:12427;;-1:-1:-1;;;12665:11:21;;829:12427;;12665:11;829:12427;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;2473:7:3;829:12427:21;2473:7:3;829:12427:21;;;;;:::i;:::-;;;;;;;;2473:7:3;829:12427:21;;2473:7:3;;829:12427:21;2473:7:3;;;829:12427:21;;;;;;;;;;;;;;:::i;:::-;;;;2473:7:3;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;-1:-1:-1;829:12427:21;;-1:-1:-1;829:12427:21;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;1409:1;829:12427;;;;;;;;;-1:-1:-1;;829:12427:21;;;;1710:6:0;829:12427:21;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;6183:41:14;:5;:41;:::i;:::-;6638:47;:8;:47;:::i;:::-;829:12427:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5674:13:14;829:12427:21;;;;5709:4:14;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;829:12427:21;;;;;;;9004:22;:47;;;;829:12427;;;;;;;;9087:8;;:::i;:::-;829:12427;9087:18;829:12427;;9169:10;829:12427;9150:15;:29;829:12427;;9221:7;829:12427;;;9211:9;829:12427;;;;;;;;;;9263:8;;:::i;:::-;9275:10;-1:-1:-1;;;;;829:12427:21;;;9263:22;829:12427;;9337:13;9324:9;829:12427;9324:26;829:12427;;9390:14;;:::i;:::-;9416:4;-1:-1:-1;;;;;829:12427:21;;;9390:31;829:12427;;9679:8;;:::i;:::-;9710;;;:::i;:::-;9741:13;;:::i;:::-;2269:192;9872:14;;:::i;:::-;9909:9;829:12427;9909:9;;:::i;:::-;829:12427;;;9572:365;2269:192;829:12427;9572:365;;829:12427;;;;2269:192;;829:12427;;;;;;;9741:13;2269:192;;829:12427;;9221:7;2269:192;;829:12427;2269:192;9169:10;2269:192;;;9221:7;829:12427;9324:9;2269:192;;829:12427;9169:10;829:12427;;2269:192;;829:12427;9324:9;829:12427;9909:9;2269:192;;829:12427;;;;;;;;2269:192;;829:12427;;2269:192;829:12427;;2269:192;;;829:12427;9572:365;;829:12427;;;;;;;;;;;;;3927:8:13;829:12427:21;3993:249:15;2269:192:21;829:12427;3871:27:13;829:12427:21;;;;;;9572:365;;9544:408;5153:20:14;;:::i;:::-;3993:249:15;829:12427:21;3993:249:15;;-1:-1:-1;;;3993:249:15;;;;;;;;;;;829:12427:21;;2269:192;;:::i;:::-;3871:27:13;;:::i;:::-;3927:8;;;;;:::i;:::-;10060:6:21;829:12427;-1:-1:-1;;;;;829:12427:21;;;;;10047:19;2269:192;;9221:7;829:12427;;;9211:9;829:12427;;;;;;;;2269:192;;;;;;829:12427;;;;;10155:8;829:12427;;;;;;10190:13;;;2269:192;;10302:5;10285:13;;2269:192;10285:13;;:::i;:::-;2269:192;10285:22;2269:192;;;10377:13;;:::i;:::-;2269:192;;;;;;;;;;;;;;;;;;;;;;;;;10419:9;:21;2269:192;;9275:10;829:12427;;10487:10;829:12427;;;;;;10552:8;;10548:1331;10552:8;;;-1:-1:-1;10627:14:21;829:12427;;-1:-1:-1;;2269:192:21;;;;829:12427;2269:192;;10627:14;829:12427;;;;;;:::i;:::-;;;;9275:10;9691:16:3;9687:87;;829:12427:21;12954:9;829:12427;;12950:246;;10548:1331;829:12427;;;;3993:249:15;829:12427:21;;;;;;-1:-1:-1;;;;;829:12427:21;8830:18:3;;;;829:12427:21;;8830:18:3;8826:256;;10548:1331:21;9275:10;829:12427;;9156:9:3;829:12427:21;;;;;;;;;;;;;;3993:249:15;829:12427:21;;;;;9275:10;-1:-1:-1;;;;;829:12427:21;;;;;;;;9275:10;9246:27:3;;829:12427:21;9246:27:3;;9849:96;;9275:10:21;1173:14:7;1169:744;;10548:1331:21;10785:9;829:12427;10785:9;;;:::i;:::-;829:12427;;;10768:9;829:12427;;;;;;;;;;2269:192;;;;;;829:12427;;;;;10860:11;829:12427;;10906:21;829:12427;;;;9150:15;10906:21;:::i;:::-;829:12427;;;;10942:9;829:12427;;;;;;;9275:10;829:12427;;10487:10;829:12427;;;;;;;11168:13;;:::i;:::-;11255:9;2269:192;11255:9;;:::i;:::-;829:12427;;;;;;;;2269:192;829:12427;2269:192;;829:12427;2269:192;829:12427;2269:192;;;;;;9741:13;2269:192;;829:12427;9221:7;2269:192;;829:12427;;9169:10;2269:192;;829:12427;;;9324:9;2269:192;;829:12427;11035:274;829:12427;9275:10;11035:274;;829:12427;1169:744:7;829:12427:21;;;;;;;;;1211:67:7;;;;9275:10:21;829:12427;1211:67:7;;829:12427:21;;;;;;;;;;;9221:7;829:12427;;;;;;;;;:::i;:::-;1211:67:7;9275:10:21;829:12427;9275:10;1211:67:7;;829:12427:21;;1211:67:7;;;1169:744;-1:-1:-1;1207:696:7;;1518:385;;:::i;:::-;829:12427:21;;;1568:18:7;;;829:12427:21;;-1:-1:-1;;;1672:39:7;;9275:10:21;829:12427;1672:39:7;;829:12427:21;;;1672:39:7;1564:325;829:12427:21;1758:113:7;;1207:696;-1:-1:-1;;;;;;829:12427:21;1325:51:7;1321:182;;829:12427:21;1169:744:7;;1321:182;829:12427:21;;-1:-1:-1;;;1445:39:7;;9275:10:21;829:12427;1445:39:7;;829:12427:21;;;1445:39:7;1211:67;;;;829:12427:21;1211:67:7;;829:12427:21;1211:67:7;;;;;;829:12427:21;1211:67:7;;;:::i;:::-;;;829:12427:21;;;;;-1:-1:-1;;;;;;829:12427:21;;;;;;1211:67:7;;;;;;;-1:-1:-1;1211:67:7;;9849:96:3;829:12427:21;;-1:-1:-1;;;9903:31:3;;829:12427:21;;9903:31:3;;829:12427:21;;;9903:31:3;8826:256;829:12427:21;;;;15066:15:3;829:12427:21;;;;;;;-1:-1:-1;;;;;;829:12427:21;;;;;;9037:9:3;829:12427:21;;;;;;;;;;;;8826:256:3;;12950:246:21;829:12427;;;;3993:249:15;829:12427:21;;;;;;-1:-1:-1;;;;;829:12427:21;13126:18;;;:38;;12950:246;13122:62;12950:246;13122:62;829:12427;;-1:-1:-1;;;13173:11:21;;829:12427;;13173:11;13126:38;;829:12427;13126:38;;9687:87:3;829:12427:21;;-1:-1:-1;;;9730:33:3;;829:12427:21;;9730:33:3;;829:12427:21;;;9730:33:3;2269:192:21;829:12427;;;;2269:192;;829:12427;2269:192;829:12427;;2269:192;10548:1331;829:12427;;;;;;;11415:9;829:12427;;;;;;9150:15;11460:22;;:47;9150:15;;;11534:27;11460:47;;829:12427;;;;;11542:11;829:12427;;;;;;11534:27;;:::i;:::-;829:12427;;;;11415:9;829:12427;;;;;;;2269:192;11754:13;;:::i;:::-;829:12427;;;;;;;2269:192;829:12427;2269:192;;829:12427;2269:192;829:12427;2269:192;;;;;;9741:13;2269:192;;829:12427;9221:7;2269:192;;829:12427;;;9169:10;2269:192;;829:12427;11624:243;9324:9;9275:10;11624:243;;829:12427;11460:47;9150:15;11534:27;9150:15;11460:47;;2269:192;829:12427;;-1:-1:-1;;;2269:192:21;;829:12427;;2269:192;;;;829:12427;2269:192;;829:12427;-1:-1:-1;;;829:12427:21;;;2269:192;9263:8;;2269:192;;829:12427;;-1:-1:-1;;;2269:192:21;;829:12427;;2269:192;;;10155:8;829:12427;2269:192;;829:12427;-1:-1:-1;;;829:12427:21;;;2269:192;9263:8;;2269:192;;829:12427;;-1:-1:-1;;;2269:192:21;;829:12427;;2269:192;;;;829:12427;2269:192;;829:12427;-1:-1:-1;;;829:12427:21;;;2269:192;9263:8;;2269:192;;829:12427;;-1:-1:-1;;;2269:192:21;;829:12427;;2269:192;;;;829:12427;2269:192;;829:12427;-1:-1:-1;;;829:12427:21;;;2269:192;9263:8;;2269:192;829:12427;;;;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;9263:8;;829:12427;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;9263:8;;829:12427;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;9263:8;;829:12427;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;9004:47;829:12427;1409:1;829:12427;;;9030:21;9004:47;;829:12427;;;;;;-1:-1:-1;;829:12427:21;;;;-1:-1:-1;;;;;829:12427:21;;:::i;:::-;;;;6264:10;829:12427;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;829:12427:21;;;;;8113:18;829:12427;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;829:12427:21;;;;;;;;;;;;;8113:18;829:12427;;;;;;-1:-1:-1;829:12427:21;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;8113:18;829:12427;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;1500:62:0;;:::i;:::-;3004:6;829:12427:21;;-1:-1:-1;;;;;;829:12427:21;;;;;;;-1:-1:-1;;;;;829:12427:21;3052:40:0;829:12427:21;;3052:40:0;829:12427:21;;;;;;;-1:-1:-1;;829:12427:21;;;;-1:-1:-1;;;;;829:12427:21;;:::i;:::-;;1947:19:3;;1943:87;;829:12427:21;;2046:9:3;829:12427:21;;;;;;;;;;;;;1943:87:3;829:12427:21;;-1:-1:-1;;;1989:30:3;;829:12427:21;;1989:30:3;;829:12427:21;;;1989:30:3;829:12427:21;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;829:12427:21;7797:21;;829:12427;;-1:-1:-1;;;;;829:12427:21;;7842:16;829:12427;;;7842:16;829:12427;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;2192:22:3;829:12427:21;;2192:22:3;:::i;:::-;829:12427:21;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;3333:23;829:12427;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;3649:41;829:12427;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;:::i;:::-;;;;2943:44;829:12427;;;;;;;;;;;;;;;;;4851:4:3;829:12427:21;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:3;;;;;:::i;829:12427:21:-;;;;;;-1:-1:-1;;829:12427:21;;;;1500:62:0;;:::i;:::-;829:12427:21;;;;;;;;;8326:8;829:12427;;8348:21;8318:56;;;;;:::i;:::-;;829:12427;;;;;;;-1:-1:-1;;;829:12427:21;;;;;;;8326:8;829:12427;;;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;:::i;:::-;;;;2867:41;829:12427;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;829:12427:21;;;;3403:21;829:12427;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;3156:44;829:12427;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;3562:28;829:12427;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;:::i;:::-;;;;12466:9;829:12427;;12462:33;;14663:22:3;;;:::i;:::-;735:10:8;14813:18:3;;:35;;;829:12427:21;14813:69:3;;;829:12427:21;14809:142:3;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;15003:28:3;829:12427:21;;15003:28:3;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;;;;829:12427:21;;;;;;;14809:142:3;829:12427:21;;-1:-1:-1;;;14909:27:3;;735:10:8;829:12427:21;14909:27:3;;829:12427:21;;;14909:27:3;14813:69;829:12427:21;;;;;;;;;;3776:18:3;829:12427:21;;;;;735:10:8;829:12427:21;;;;;;;;;;14852:30:3;14813:69;;:35;-1:-1:-1;;;;;;829:12427:21;;735:10:8;14835:13:3;;14813:35;;829:12427:21;;;;;;-1:-1:-1;;829:12427:21;;;;;;3385:22:3;;;:::i;:::-;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;7374:8:21;829:12427;;;;1409:1;829:12427;;;;;;;;;;;-1:-1:-1;;829:12427:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1664:40:3;;;:104;;;;829:12427:21;1664:156:3;;;;829:12427:21;;;;;;;1664:156:3;-1:-1:-1;;;829:40:16;;-1:-1:-1;1664:156:3;;;:104;-1:-1:-1;;;1720:48:3;;;-1:-1:-1;1664:104:3;;829:12427:21;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;829:12427:21;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;829:12427:21;;;;:::o;:::-;;;;-1:-1:-1;;;;;829:12427:21;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;829:12427:21;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;829:12427:21;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;3852:578:3;-1:-1:-1;;;;;829:12427:21;;;;3852:578:3;;3946:16;;3942:87;;829:12427:21;12954:9;829:12427;;12950:246;;3852:578:3;-1:-1:-1;829:12427:21;;;;;;;5470:7:3;829:12427:21;;;;;;;;;;735:10:8;;;;8704:18:3;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;829:12427:21;;;9156:9:3;829:12427:21;;;;;;;9096:16:3;829:12427:21;;;;;;;;;;;;-1:-1:-1;;;;;;829:12427:21;;;;;;9246:27:3;829:12427:21;4319:21:3;;;;4315:109;;3852:578;;;;:::o;4315:109::-;829:12427:21;;;;4363:50:3;;;;;;;;;829:12427:21;;;;;;;;;4363:50:3;8826:256;829:12427:21;;;;15066:15:3;829:12427:21;;;;;;;-1:-1:-1;;;;;;829:12427:21;;;;;;9037:9:3;829:12427:21;;;;;;;-1:-1:-1;;829:12427:21;;;8826:256:3;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;829:12427:21;;;;;6967:31:3;;;;;;;;;829:12427:21;6967:31:3;6917:186;829:12427:21;;;7044:44:3;;;;;;735:10:8;7044:44:3;;;829:12427:21;;;;;7044:44:3;6185:127;735:10:8;;6223:16:3;;:52;;;;6185:127;6223:88;6185:127;6223:88;829:12427:21;;;;5705:15:3;829:12427:21;;735:10:8;829:12427:21;;;;;;6279:32:3;6185:127;;6223:52;829:12427:21;;;;3776:18:3;829:12427:21;;;;;735:10:8;829:12427:21;;;;;;;;;;6223:52:3;;12950:246:21;829:12427;-1:-1:-1;829:12427:21;5470:7:3;829:12427:21;;;;-1:-1:-1;829:12427:21;;;13126:18;;:38;;;12950:246;13122:62;12950:246;13122:62;829:12427;;-1:-1:-1;;;13173:11:21;;;;;13126:38;;13148:16;13126:38;;829:12427;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;829:12427:21;;;;:::o;:::-;;;:::o;:::-;9087:8;829:12427;;;;;;;;;:::o;:::-;9909:9;829:12427;;;;;;;;;:::o;:::-;9263:8;829:12427;-1:-1:-1;;;;;829:12427:21;;;;;;;:::o;:::-;9390:14;829:12427;-1:-1:-1;;;;;829:12427:21;;;;;;;:::o;2269:192::-;9741:13;2269:192;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;6313:196::-;-1:-1:-1;;;;;829:12427:21;-1:-1:-1;829:12427:21;;;6397:10;829:12427;;;;;;6428:8;;6424:26;;-1:-1:-1;829:12427:21;6468:9;829:12427;;;-1:-1:-1;829:12427:21;;6486:15;-1:-1:-1;6468:33:21;6313:196;:::o;6424:26::-;6438:12;-1:-1:-1;6438:12:21;:::o;1796:162:0:-;1710:6;829:12427:21;-1:-1:-1;;;;;829:12427:21;735:10:8;1855:23:0;1851:101;;1796:162::o;1851:101::-;829:12427:21;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;829:12427:21;;;1901:40:0;15858:241:3;-1:-1:-1;829:12427:21;;;5470:7:3;829:12427:21;;;;;;-1:-1:-1;;;;;829:12427:21;;15987:19:3;;15983:88;;16080:12;15858:241;:::o;15983:88::-;829:12427:21;;;;6967:31:3;;;;16029;;;;;829:12427:21;16029:31:3;993:926:7;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;829:12427:21;;;;;;;;;;;;;;;;;;;;1211:67:7;;;;829:12427:21;1211:67:7;;;829:12427:21;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:7;1190:1;1211:67;1190:1;;1211:67;;;;;;;;;;;;1169:744;-1:-1:-1;;1207:696:7;;1518:385;;;:::i;:::-;829:12427:21;;;;1568:18:7;;;829:12427:21;;-1:-1:-1;;;1672:39:7;;1211:67;1672:39;;829:12427:21;;;;;1672:39:7;1564:325;1211:67;1758:113;;;;1207:696;-1:-1:-1;;;;;;829:12427:21;1325:51:7;1321:182;;1207:696;1169:744;;;;;;;1321:182;829:12427:21;;;;9730:33:3;;;;1445:39:7;;1211:67;1445:39;;829:12427:21;1445:39:7;1211:67;;;;;;;;;;;;;;;;;;;:::i;:::-;;;829:12427:21;;;;;;-1:-1:-1;;;;;;829:12427:21;;;;;;1211:67:7;;;;;;829:12427:21;;;;;;;1211:67:7;;;-1:-1:-1;1211:67:7;;3945:262:14;4029:4;4038:11;-1:-1:-1;;;;;829:12427:21;4021:28:14;;:63;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;829:12427:21;;4304:80:14;;;829:12427:21;2079:95:14;829:12427:21;;4326:11:14;829:12427:21;2079:95:14;;829:12427:21;4339:14:14;2079:95;;;829:12427:21;4355:13:14;2079:95;;;829:12427:21;4029:4:14;2079:95;;;829:12427:21;2079:95:14;4304:80;;2079:95;829:12427:21;;;;;;;;;;;;;;4294:91:14;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;2129:778:13;829:12427:21;;;2129:778:13;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:13;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;829:12427:21;;;;;;7366:29:13;;;7411:7;;:::o;7362:444::-;829:12427:21;7462:38:13;;829:12427:21;;;;-1:-1:-1;;;7523:23:13;;829:12427:21;;7523:23:13;7458:348;7576:35;7567:44;;7576:35;;829:12427:21;;-1:-1:-1;;;7634:46:13;;829:12427:21;7634:46:13;;829:12427:21;;;;;7634:46:13;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;829:12427:21;;;;7763:32:13;;;;;;829:12427:21;7763:32:13;;829:12427:21;7763:32:13;829:12427:21;;;;7375:20:13;829:12427:21;;;;;7375:20:13;829:12427:21;3368:267:10;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;829:12427:21;;;;;;:::i;:::-;2324:106:10;;2311:2;829:12427:21;;2324:106:10;3553:22;:::o;2675:69::-;829:12427:21;;-1:-1:-1;;;2713:20:10;;;;;3487:142;-1:-1:-1;829:12427:21;;6210:13:14;829:12427:21;;-1:-1:-1;829:12427:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1390:66:10;;;;;;;;:::i;:::-;3606:12;:::o;829:12427:21:-;;;;6210:13:14;-1:-1:-1;829:12427:21;;;-1:-1:-1;829:12427:21;;;;;;;-1:-1:-1;1390:66:10;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;;;;;;;;1390:66:10;829:12427:21;;;;;;;;;;;;;;;;;;;;;3368:267:10;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;829:12427:21;;;;;;:::i;3487:142:10:-;-1:-1:-1;829:12427:21;;6668:16:14;829:12427:21;;-1:-1:-1;829:12427:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1390:66:10;;;;;;;;:::i;829:12427:21:-;;;;6668:16:14;-1:-1:-1;829:12427:21;;;-1:-1:-1;829:12427:21;;;;;;;-1:-1:-1;1390:66:10;;-1:-1:-1;;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:12427:21;;;;;;5203:1551:13;;;6283:66;6270:79;;6266:164;;829:12427:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:13;;;;;;;;;;;;;;-1:-1:-1;;;;;829:12427:21;;6579:20:13;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;829:12427:21;;;;;;;;;;6266:164:13;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o"},"methodIdentifiers":{"PLAN_MONTHLY()":"188a6013","PLAN_YEARLY()":"959510a6","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","durationSec(uint8)":"44340325","eip712Domain()":"84b0196e","expiresAt(uint256)":"17c95709","getApproved(uint256)":"081812fc","isActive(address)":"9f8a13d7","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nonceUsed(bytes32)":"61a4422b","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","priceWei(uint8)":"322b1cc5","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseHttpURI(string)":"750766ac","setDurations(uint256,uint256)":"a40b3998","setPrices(uint256,uint256)":"05fefda7","setSigner(address)":"6c19e783","setSoulbound(bool)":"df30e54b","setTreasury(address)":"f0f44260","signer()":"238ac933","soulbound()":"0fad0f51","subscribe(uint8,bytes,(bytes32,address,uint8,uint16,bytes32,uint256,uint256,address,uint8))":"77d07c64","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenIdOf(address)":"773c02d4","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","variantOf(uint256)":"a4cf9cc1","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_baseHttpURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Soulbound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"planId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"discountBps\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sessionId\",\"type\":\"bytes32\"}],\"name\":\"Renewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"planId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"discountBps\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"variant\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sessionId\",\"type\":\"bytes32\"}],\"name\":\"Subscribed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PLAN_MONTHLY\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLAN_YEARLY\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"durationSec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"expiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonceUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"priceWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setBaseHttpURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"monthlySec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yearlySec\",\"type\":\"uint256\"}],\"name\":\"setDurations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"monthlyWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"yearlyWei\",\"type\":\"uint256\"}],\"name\":\"setPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_soulbound\",\"type\":\"bool\"}],\"name\":\"setSoulbound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soulbound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"planId\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"discountSig\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"sessionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"planId\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"discountBps\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"variant\",\"type\":\"uint8\"}],\"internalType\":\"struct SubscriptionNFT.DiscountPayload\",\"name\":\"p\",\"type\":\"tuple\"}],\"name\":\"subscribe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"tokenIdOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"variantOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SubscriptionNFT.sol\":\"SubscriptionNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SubscriptionNFT.sol\":{\"keccak256\":\"0x1a832aa2f3f5f170b5de7b4e19bba1c964e5670d3d4a6b1582563b30f57b0968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69f00882e831df9823f8f41753cfb3f287df672f3205fcf616a1f9c9eb716d94\",\"dweb:/ipfs/QmNPR7d8xNb4ke3xYkTewVXPJt6xEwUJUpZxk6JDgxqWm1\"]}},\"version\":1}"}}}}}